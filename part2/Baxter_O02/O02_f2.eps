%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: O02_f2.pdf
%%Creator: Adobe Acrobat 9.5.2
%%For: patrick
%%CreationDate: 2012/10/24, 10:59:54 AM
%%BoundingBox: 0 0 576 432
%%HiResBoundingBox: 0 0 576 432
%%CropBox: 0 0 576 432
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 576 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.1-c043 52.372728, 2009/01/18-15:08:04        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmp:CreateDate="2012-10-19T18:21:10+02:00"
   xmp:CreatorTool="matplotlib 1.0.1, http://matplotlib.sf.net"
   pdf:Producer="matplotlib pdf backend r8292"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -432 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 432 li
576 432 li
576 0 li
cp
clp
[1 0 0 1 0 0 ]ct
0 432 mo
576 432 li
576 0 li
0 0 li
0 432 li
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
0 sep
f
1 lw
2 lc
1 lj
10 ml
[] 0 dsh
true sadj
0 432 mo
576 432 li
576 0 li
0 0 li
cp
@
72 388.8 mo
518.4 388.8 li
518.4 43.2 li
72 43.2 li
72 388.8 li
f
gsave
72 388.8 mo
518.4 388.8 li
518.4 43.2 li
72 43.2 li
72 388.8 li
clp
gsave
69.7545 387.644 mo
76.2544 387.644 li
76.2544 381.144 li
69.7545 381.144 li
69.7545 387.644 li
clp
73.0044 387.394 mo
73.8 387.394 74.5631 387.078 75.1257 386.516 cv
75.6883 385.953 76.0044 385.19 76.0044 384.394 cv
76.0044 383.599 75.6883 382.836 75.1257 382.273 cv
74.5631 381.711 73.8 381.394 73.0044 381.394 cv
72.2088 381.394 71.4457 381.711 70.8831 382.273 cv
70.3205 382.836 70.0044 383.599 70.0044 384.394 cv
70.0044 385.19 70.3205 385.953 70.8831 386.516 cv
71.4457 387.078 72.2088 387.394 73.0044 387.394 cv
cp
/1 
[/DeviceCMYK] /CSA add_res
.930816 .793027 0 0 cmyk
f
.5 lw
0 lc
73.0044 387.394 mo
73.8 387.394 74.5631 387.078 75.1257 386.516 cv
75.6883 385.953 76.0044 385.19 76.0044 384.394 cv
76.0044 383.599 75.6883 382.836 75.1257 382.273 cv
74.5631 381.711 73.8 381.394 73.0044 381.394 cv
72.2088 381.394 71.4457 381.711 70.8831 382.273 cv
70.3205 382.836 70.0044 383.599 70.0044 384.394 cv
70.0044 385.19 70.3205 385.953 70.8831 386.516 cv
71.4457 387.078 72.2088 387.394 73.0044 387.394 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
71.5399 381.034 mo
78.04 381.034 li
78.04 374.534 li
71.5399 374.534 li
71.5399 381.034 li
clp
74.79 380.784 mo
75.5856 380.784 76.3487 380.468 76.9113 379.905 cv
77.4739 379.342 77.79 378.579 77.79 377.784 cv
77.79 376.988 77.4739 376.225 76.9113 375.662 cv
76.3487 375.1 75.5856 374.784 74.79 374.784 cv
73.9944 374.784 73.2313 375.1 72.6687 375.662 cv
72.1061 376.225 71.79 376.988 71.79 377.784 cv
71.79 378.579 72.1061 379.342 72.6687 379.905 cv
73.2313 380.468 73.9944 380.784 74.79 380.784 cv
cp
.930816 .793027 0 0 cmyk
f
.5 lw
0 lc
74.79 380.784 mo
75.5856 380.784 76.3487 380.468 76.9113 379.905 cv
77.4739 379.342 77.79 378.579 77.79 377.784 cv
77.79 376.988 77.4739 376.225 76.9113 375.662 cv
76.3487 375.1 75.5856 374.784 74.79 374.784 cv
73.9944 374.784 73.2313 375.1 72.6687 375.662 cv
72.1061 376.225 71.79 376.988 71.79 377.784 cv
71.79 378.579 72.1061 379.342 72.6687 379.905 cv
73.2313 380.468 73.9944 380.784 74.79 380.784 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
74.2183 375.116 mo
80.7184 375.116 li
80.7184 368.616 li
74.2183 368.616 li
74.2183 375.116 li
clp
77.4684 374.866 mo
78.264 374.866 79.0271 374.55 79.5897 373.988 cv
80.1523 373.425 80.4684 372.662 80.4684 371.866 cv
80.4684 371.071 80.1523 370.308 79.5897 369.745 cv
79.0271 369.182 78.264 368.866 77.4684 368.866 cv
76.6728 368.866 75.9097 369.182 75.3471 369.745 cv
74.7845 370.308 74.4684 371.071 74.4684 371.866 cv
74.4684 372.662 74.7845 373.425 75.3471 373.988 cv
75.9097 374.55 76.6728 374.866 77.4684 374.866 cv
cp
.930816 .793027 0 0 cmyk
f
.5 lw
0 lc
77.4684 374.866 mo
78.264 374.866 79.0271 374.55 79.5897 373.988 cv
80.1523 373.425 80.4684 372.662 80.4684 371.866 cv
80.4684 371.071 80.1523 370.308 79.5897 369.745 cv
79.0271 369.182 78.264 368.866 77.4684 368.866 cv
76.6728 368.866 75.9097 369.182 75.3471 369.745 cv
74.7845 370.308 74.4684 371.071 74.4684 371.866 cv
74.4684 372.662 74.7845 373.425 75.3471 373.988 cv
75.9097 374.55 76.6728 374.866 77.4684 374.866 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
77.7895 365.285 mo
84.2896 365.285 li
84.2896 358.785 li
77.7895 358.785 li
77.7895 365.285 li
clp
81.0396 365.035 mo
81.8352 365.035 82.5983 364.719 83.1609 364.157 cv
83.7235 363.594 84.0396 362.831 84.0396 362.035 cv
84.0396 361.24 83.7235 360.477 83.1609 359.914 cv
82.5983 359.351 81.8352 359.035 81.0396 359.035 cv
80.244 359.035 79.4809 359.351 78.9183 359.914 cv
78.3557 360.477 78.0396 361.24 78.0396 362.035 cv
78.0396 362.831 78.3557 363.594 78.9183 364.157 cv
79.4809 364.719 80.244 365.035 81.0396 365.035 cv
cp
.930816 .793027 0 0 cmyk
f
.5 lw
0 lc
81.0396 365.035 mo
81.8352 365.035 82.5983 364.719 83.1609 364.157 cv
83.7235 363.594 84.0396 362.831 84.0396 362.035 cv
84.0396 361.24 83.7235 360.477 83.1609 359.914 cv
82.5983 359.351 81.8352 359.035 81.0396 359.035 cv
80.244 359.035 79.4809 359.351 78.9183 359.914 cv
78.3557 360.477 78.0396 361.24 78.0396 362.035 cv
78.0396 362.831 78.3557 363.594 78.9183 364.157 cv
79.4809 364.719 80.244 365.035 81.0396 365.035 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
82.2535 355.304 mo
88.7536 355.304 li
88.7536 348.804 li
82.2535 348.804 li
82.2535 355.304 li
clp
85.5036 355.054 mo
86.2992 355.054 87.0623 354.738 87.6249 354.175 cv
88.1875 353.612 88.5036 352.849 88.5036 352.054 cv
88.5036 351.258 88.1875 350.495 87.6249 349.932 cv
87.0623 349.37 86.2992 349.054 85.5036 349.054 cv
84.708 349.054 83.9449 349.37 83.3823 349.932 cv
82.8197 350.495 82.5036 351.258 82.5036 352.054 cv
82.5036 352.849 82.8197 353.612 83.3823 354.175 cv
83.9449 354.738 84.708 355.054 85.5036 355.054 cv
cp
.930816 .793027 0 0 cmyk
f
.5 lw
0 lc
85.5036 355.054 mo
86.2992 355.054 87.0623 354.738 87.6249 354.175 cv
88.1875 353.612 88.5036 352.849 88.5036 352.054 cv
88.5036 351.258 88.1875 350.495 87.6249 349.932 cv
87.0623 349.37 86.2992 349.054 85.5036 349.054 cv
84.708 349.054 83.9449 349.37 83.3823 349.932 cv
82.8197 350.495 82.5036 351.258 82.5036 352.054 cv
82.5036 352.849 82.8197 353.612 83.3823 354.175 cv
83.9449 354.738 84.708 355.054 85.5036 355.054 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
87.6103 356.636 mo
94.1104 356.636 li
94.1104 350.136 li
87.6103 350.136 li
87.6103 356.636 li
clp
90.8604 356.386 mo
91.656 356.386 92.4191 356.07 92.9817 355.507 cv
93.5443 354.945 93.8604 354.181 93.8604 353.386 cv
93.8604 352.59 93.5443 351.827 92.9817 351.265 cv
92.4191 350.702 91.656 350.386 90.8604 350.386 cv
90.0648 350.386 89.3017 350.702 88.7391 351.265 cv
88.1765 351.827 87.8604 352.59 87.8604 353.386 cv
87.8604 354.181 88.1765 354.945 88.7391 355.507 cv
89.3017 356.07 90.0648 356.386 90.8604 356.386 cv
cp
.930816 .793027 0 0 cmyk
f
.5 lw
0 lc
90.8604 356.386 mo
91.656 356.386 92.4191 356.07 92.9817 355.507 cv
93.5443 354.945 93.8604 354.181 93.8604 353.386 cv
93.8604 352.59 93.5443 351.827 92.9817 351.265 cv
92.4191 350.702 91.656 350.386 90.8604 350.386 cv
90.0648 350.386 89.3017 350.702 88.7391 351.265 cv
88.1765 351.827 87.8604 352.59 87.8604 353.386 cv
87.8604 354.181 88.1765 354.945 88.7391 355.507 cv
89.3017 356.07 90.0648 356.386 90.8604 356.386 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
93.8599 330.192 mo
100.36 330.192 li
100.36 323.692 li
93.8599 323.692 li
93.8599 330.192 li
clp
97.11 329.942 mo
97.9056 329.942 98.6687 329.626 99.2313 329.064 cv
99.7939 328.501 100.11 327.738 100.11 326.942 cv
100.11 326.147 99.7939 325.384 99.2313 324.821 cv
98.6687 324.258 97.9056 323.942 97.11 323.942 cv
96.3144 323.942 95.5513 324.258 94.9887 324.821 cv
94.4261 325.384 94.11 326.147 94.11 326.942 cv
94.11 327.738 94.4261 328.501 94.9887 329.064 cv
95.5513 329.626 96.3144 329.942 97.11 329.942 cv
cp
.930816 .793027 0 0 cmyk
f
.5 lw
0 lc
97.11 329.942 mo
97.9056 329.942 98.6687 329.626 99.2313 329.064 cv
99.7939 328.501 100.11 327.738 100.11 326.942 cv
100.11 326.147 99.7939 325.384 99.2313 324.821 cv
98.6687 324.258 97.9056 323.942 97.11 323.942 cv
96.3144 323.942 95.5513 324.258 94.9887 324.821 cv
94.4261 325.384 94.11 326.147 94.11 326.942 cv
94.11 327.738 94.4261 328.501 94.9887 329.064 cv
95.5513 329.626 96.3144 329.942 97.11 329.942 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
101.002 320.342 mo
107.502 320.342 li
107.502 313.842 li
101.002 313.842 li
101.002 320.342 li
clp
104.252 320.092 mo
105.048 320.092 105.811 319.776 106.374 319.213 cv
106.936 318.651 107.252 317.888 107.252 317.092 cv
107.252 316.296 106.936 315.533 106.374 314.971 cv
105.811 314.408 105.048 314.092 104.252 314.092 cv
103.457 314.092 102.694 314.408 102.131 314.971 cv
101.569 315.533 101.252 316.296 101.252 317.092 cv
101.252 317.888 101.569 318.651 102.131 319.213 cv
102.694 319.776 103.457 320.092 104.252 320.092 cv
cp
.930816 .793027 0 0 cmyk
f
.5 lw
0 lc
104.252 320.092 mo
105.048 320.092 105.811 319.776 106.374 319.213 cv
106.936 318.651 107.252 317.888 107.252 317.092 cv
107.252 316.296 106.936 315.533 106.374 314.971 cv
105.811 314.408 105.048 314.092 104.252 314.092 cv
103.457 314.092 102.694 314.408 102.131 314.971 cv
101.569 315.533 101.252 316.296 101.252 317.092 cv
101.252 317.888 101.569 318.651 102.131 319.213 cv
102.694 319.776 103.457 320.092 104.252 320.092 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
117.966 301.572 mo
124.466 301.572 li
124.466 295.072 li
117.966 295.072 li
117.966 301.572 li
clp
121.216 301.322 mo
122.011 301.322 122.774 301.006 123.337 300.444 cv
123.9 299.881 124.216 299.118 124.216 298.322 cv
124.216 297.527 123.9 296.764 123.337 296.201 cv
122.774 295.638 122.011 295.322 121.216 295.322 cv
120.42 295.322 119.657 295.638 119.094 296.201 cv
118.532 296.764 118.216 297.527 118.216 298.322 cv
118.216 299.118 118.532 299.881 119.094 300.444 cv
119.657 301.006 120.42 301.322 121.216 301.322 cv
cp
.930816 .793027 0 0 cmyk
f
.5 lw
0 lc
121.216 301.322 mo
122.011 301.322 122.774 301.006 123.337 300.444 cv
123.9 299.881 124.216 299.118 124.216 298.322 cv
124.216 297.527 123.9 296.764 123.337 296.201 cv
122.774 295.638 122.011 295.322 121.216 295.322 cv
120.42 295.322 119.657 295.638 119.094 296.201 cv
118.532 296.764 118.216 297.527 118.216 298.322 cv
118.216 299.118 118.532 299.881 119.094 300.444 cv
119.657 301.006 120.42 301.322 121.216 301.322 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
138.5 283.413 mo
145 283.413 li
145 276.913 li
138.5 276.913 li
138.5 283.413 li
clp
141.75 283.163 mo
142.546 283.163 143.309 282.847 143.871 282.285 cv
144.434 281.722 144.75 280.959 144.75 280.163 cv
144.75 279.368 144.434 278.605 143.871 278.042 cv
143.309 277.479 142.546 277.163 141.75 277.163 cv
140.954 277.163 140.191 277.479 139.629 278.042 cv
139.066 278.605 138.75 279.368 138.75 280.163 cv
138.75 280.959 139.066 281.722 139.629 282.285 cv
140.191 282.847 140.954 283.163 141.75 283.163 cv
cp
.930816 .793027 0 0 cmyk
f
.5 lw
0 lc
141.75 283.163 mo
142.546 283.163 143.309 282.847 143.871 282.285 cv
144.434 281.722 144.75 280.959 144.75 280.163 cv
144.75 279.368 144.434 278.605 143.871 278.042 cv
143.309 277.479 142.546 277.163 141.75 277.163 cv
140.954 277.163 140.191 277.479 139.629 278.042 cv
139.066 278.605 138.75 279.368 138.75 280.163 cv
138.75 280.959 139.066 281.722 139.629 282.285 cv
140.191 282.847 140.954 283.163 141.75 283.163 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
175.998 268.306 mo
182.498 268.306 li
182.498 261.806 li
175.998 261.806 li
175.998 268.306 li
clp
179.248 268.056 mo
180.043 268.056 180.806 267.74 181.369 267.177 cv
181.932 266.615 182.248 265.852 182.248 265.056 cv
182.248 264.26 181.932 263.497 181.369 262.935 cv
180.806 262.372 180.043 262.056 179.248 262.056 cv
178.452 262.056 177.689 262.372 177.126 262.935 cv
176.564 263.497 176.248 264.26 176.248 265.056 cv
176.248 265.852 176.564 266.615 177.126 267.177 cv
177.689 267.74 178.452 268.056 179.248 268.056 cv
cp
.930816 .793027 0 0 cmyk
f
.5 lw
0 lc
179.248 268.056 mo
180.043 268.056 180.806 267.74 181.369 267.177 cv
181.932 266.615 182.248 265.852 182.248 265.056 cv
182.248 264.26 181.932 263.497 181.369 262.935 cv
180.806 262.372 180.043 262.056 179.248 262.056 cv
178.452 262.056 177.689 262.372 177.126 262.935 cv
176.564 263.497 176.248 264.26 176.248 265.056 cv
176.248 265.852 176.564 266.615 177.126 267.177 cv
177.689 267.74 178.452 268.056 179.248 268.056 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
205.46 259.999 mo
211.96 259.999 li
211.96 253.499 li
205.46 253.499 li
205.46 259.999 li
clp
208.71 259.749 mo
209.506 259.749 210.269 259.433 210.831 258.87 cv
211.394 258.308 211.71 257.545 211.71 256.749 cv
211.71 255.953 211.394 255.19 210.831 254.628 cv
210.269 254.065 209.506 253.749 208.71 253.749 cv
207.914 253.749 207.151 254.065 206.589 254.628 cv
206.026 255.19 205.71 255.953 205.71 256.749 cv
205.71 257.545 206.026 258.308 206.589 258.87 cv
207.151 259.433 207.914 259.749 208.71 259.749 cv
cp
.930816 .793027 0 0 cmyk
f
.5 lw
0 lc
208.71 259.749 mo
209.506 259.749 210.269 259.433 210.831 258.87 cv
211.394 258.308 211.71 257.545 211.71 256.749 cv
211.71 255.953 211.394 255.19 210.831 254.628 cv
210.269 254.065 209.506 253.749 208.71 253.749 cv
207.914 253.749 207.151 254.065 206.589 254.628 cv
206.026 255.19 205.71 255.953 205.71 256.749 cv
205.71 257.545 206.026 258.308 206.589 258.87 cv
207.151 259.433 207.914 259.749 208.71 259.749 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
256.35 243.473 mo
262.85 243.473 li
262.85 236.973 li
256.35 236.973 li
256.35 243.473 li
clp
259.6 243.223 mo
260.395 243.223 261.158 242.907 261.721 242.344 cv
262.284 241.782 262.6 241.019 262.6 240.223 cv
262.6 239.428 262.284 238.664 261.721 238.102 cv
261.158 237.539 260.395 237.223 259.6 237.223 cv
258.804 237.223 258.041 237.539 257.478 238.102 cv
256.916 238.664 256.6 239.428 256.6 240.223 cv
256.6 241.019 256.916 241.782 257.478 242.344 cv
258.041 242.907 258.804 243.223 259.6 243.223 cv
cp
.930816 .793027 0 0 cmyk
f
.5 lw
0 lc
259.6 243.223 mo
260.395 243.223 261.158 242.907 261.721 242.344 cv
262.284 241.782 262.6 241.019 262.6 240.223 cv
262.6 239.428 262.284 238.664 261.721 238.102 cv
261.158 237.539 260.395 237.223 259.6 237.223 cv
258.804 237.223 258.041 237.539 257.478 238.102 cv
256.916 238.664 256.6 239.428 256.6 240.223 cv
256.6 241.019 256.916 241.782 257.478 242.344 cv
258.041 242.907 258.804 243.223 259.6 243.223 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
294.74 238.631 mo
301.24 238.631 li
301.24 232.131 li
294.74 232.131 li
294.74 238.631 li
clp
297.99 238.381 mo
298.786 238.381 299.549 238.065 300.111 237.502 cv
300.674 236.939 300.99 236.176 300.99 235.381 cv
300.99 234.585 300.674 233.822 300.111 233.259 cv
299.549 232.697 298.786 232.381 297.99 232.381 cv
297.194 232.381 296.431 232.697 295.869 233.259 cv
295.306 233.822 294.99 234.585 294.99 235.381 cv
294.99 236.176 295.306 236.939 295.869 237.502 cv
296.431 238.065 297.194 238.381 297.99 238.381 cv
cp
.930816 .793027 0 0 cmyk
f
.5 lw
0 lc
297.99 238.381 mo
298.786 238.381 299.549 238.065 300.111 237.502 cv
300.674 236.939 300.99 236.176 300.99 235.381 cv
300.99 234.585 300.674 233.822 300.111 233.259 cv
299.549 232.697 298.786 232.381 297.99 232.381 cv
297.194 232.381 296.431 232.697 295.869 233.259 cv
295.306 233.822 294.99 234.585 294.99 235.381 cv
294.99 236.176 295.306 236.939 295.869 237.502 cv
296.431 238.065 297.194 238.381 297.99 238.381 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
359.022 228.634 mo
365.522 228.634 li
365.522 222.134 li
359.022 222.134 li
359.022 228.634 li
clp
362.272 228.384 mo
363.067 228.384 363.83 228.068 364.393 227.505 cv
364.956 226.943 365.272 226.18 365.272 225.384 cv
365.272 224.588 364.956 223.825 364.393 223.263 cv
363.83 222.7 363.067 222.384 362.272 222.384 cv
361.476 222.384 360.713 222.7 360.15 223.263 cv
359.588 223.825 359.272 224.588 359.272 225.384 cv
359.272 226.18 359.588 226.943 360.15 227.505 cv
360.713 228.068 361.476 228.384 362.272 228.384 cv
cp
.930816 .793027 0 0 cmyk
f
.5 lw
0 lc
362.272 228.384 mo
363.067 228.384 363.83 228.068 364.393 227.505 cv
364.956 226.943 365.272 226.18 365.272 225.384 cv
365.272 224.588 364.956 223.825 364.393 223.263 cv
363.83 222.7 363.067 222.384 362.272 222.384 cv
361.476 222.384 360.713 222.7 360.15 223.263 cv
359.588 223.825 359.272 224.588 359.272 225.384 cv
359.272 226.18 359.588 226.943 360.15 227.505 cv
360.713 228.068 361.476 228.384 362.272 228.384 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
484.014 229.726 mo
490.514 229.726 li
490.514 223.226 li
484.014 223.226 li
484.014 229.726 li
clp
487.264 229.476 mo
488.059 229.476 488.822 229.16 489.385 228.597 cv
489.948 228.034 490.264 227.271 490.264 226.476 cv
490.264 225.68 489.948 224.917 489.385 224.354 cv
488.822 223.792 488.059 223.476 487.264 223.476 cv
486.468 223.476 485.705 223.792 485.142 224.354 cv
484.58 224.917 484.264 225.68 484.264 226.476 cv
484.264 227.271 484.58 228.034 485.142 228.597 cv
485.705 229.16 486.468 229.476 487.264 229.476 cv
cp
.930816 .793027 0 0 cmyk
f
.5 lw
0 lc
487.264 229.476 mo
488.059 229.476 488.822 229.16 489.385 228.597 cv
489.948 228.034 490.264 227.271 490.264 226.476 cv
490.264 225.68 489.948 224.917 489.385 224.354 cv
488.822 223.792 488.059 223.476 487.264 223.476 cv
486.468 223.476 485.705 223.792 485.142 224.354 cv
484.58 224.917 484.264 225.68 484.264 226.476 cv
484.264 227.271 484.58 228.034 485.142 228.597 cv
485.705 229.16 486.468 229.476 487.264 229.476 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
grestore
gsave
72 388.8 mo
518.4 388.8 li
518.4 43.2 li
72 43.2 li
72 388.8 li
clp
gsave
68.5117 390.129 mo
77.497 390.129 li
77.497 381.144 li
68.5117 381.144 li
68.5117 390.129 li
clp
73.0044 389.879 mo
77.247 385.637 li
73.0044 381.394 li
68.7618 385.637 li
cp
.926818 .245335 1 .155612 cmyk
f
.5 lw
0 lc
73.0044 389.879 mo
77.247 385.637 li
73.0044 381.394 li
68.7618 385.637 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
70.2973 387.424 mo
79.2826 387.424 li
79.2826 378.439 li
70.2973 378.439 li
70.2973 387.424 li
clp
74.79 387.174 mo
79.0326 382.931 li
74.79 378.689 li
70.5474 382.931 li
cp
.926818 .245335 1 .155612 cmyk
f
.5 lw
0 lc
74.79 387.174 mo
79.0326 382.931 li
74.79 378.689 li
70.5474 382.931 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
72.9757 384.376 mo
81.961 384.376 li
81.961 375.39 li
72.9757 375.39 li
72.9757 384.376 li
clp
77.4684 384.126 mo
81.711 379.883 li
77.4684 375.64 li
73.2258 379.883 li
cp
.926818 .245335 1 .155612 cmyk
f
.5 lw
0 lc
77.4684 384.126 mo
81.711 379.883 li
77.4684 375.64 li
73.2258 379.883 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
76.5469 379.88 mo
85.5322 379.88 li
85.5322 370.895 li
76.5469 370.895 li
76.5469 379.88 li
clp
81.0396 379.63 mo
85.2822 375.387 li
81.0396 371.145 li
76.797 375.387 li
cp
.926818 .245335 1 .155612 cmyk
f
.5 lw
0 lc
81.0396 379.63 mo
85.2822 375.387 li
81.0396 371.145 li
76.797 375.387 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
81.0109 375.395 mo
89.9962 375.395 li
89.9962 366.41 li
81.0109 366.41 li
81.0109 375.395 li
clp
85.5036 375.145 mo
89.7462 370.902 li
85.5036 366.66 li
81.261 370.902 li
cp
.926818 .245335 1 .155612 cmyk
f
.5 lw
0 lc
85.5036 375.145 mo
89.7462 370.902 li
85.5036 366.66 li
81.261 370.902 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
86.3677 373.539 mo
95.353 373.539 li
95.353 364.554 li
86.3677 364.554 li
86.3677 373.539 li
clp
90.8604 373.289 mo
95.103 369.047 li
90.8604 364.804 li
86.6178 369.047 li
cp
.926818 .245335 1 .155612 cmyk
f
.5 lw
0 lc
90.8604 373.289 mo
95.103 369.047 li
90.8604 364.804 li
86.6178 369.047 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
92.6173 364.932 mo
101.603 364.932 li
101.603 355.947 li
92.6173 355.947 li
92.6173 364.932 li
clp
97.11 364.682 mo
101.353 360.44 li
97.11 356.197 li
92.8674 360.44 li
cp
.926818 .245335 1 .155612 cmyk
f
.5 lw
0 lc
97.11 364.682 mo
101.353 360.44 li
97.11 356.197 li
92.8674 360.44 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
99.7597 360.66 mo
108.745 360.66 li
108.745 351.674 li
99.7597 351.674 li
99.7597 360.66 li
clp
104.252 360.41 mo
108.495 356.167 li
104.252 351.924 li
100.01 356.167 li
cp
.926818 .245335 1 .155612 cmyk
f
.5 lw
0 lc
104.252 360.41 mo
108.495 356.167 li
104.252 351.924 li
100.01 356.167 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
116.723 354.515 mo
125.708 354.515 li
125.708 345.53 li
116.723 345.53 li
116.723 354.515 li
clp
121.216 354.265 mo
125.458 350.022 li
121.216 345.78 li
116.973 350.022 li
cp
.926818 .245335 1 .155612 cmyk
f
.5 lw
0 lc
121.216 354.265 mo
125.458 350.022 li
121.216 345.78 li
116.973 350.022 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
137.257 348.648 mo
146.243 348.648 li
146.243 339.663 li
137.257 339.663 li
137.257 348.648 li
clp
141.75 348.399 mo
145.993 344.156 li
141.75 339.913 li
137.507 344.156 li
cp
.926818 .245335 1 .155612 cmyk
f
.5 lw
0 lc
141.75 348.399 mo
145.993 344.156 li
141.75 339.913 li
137.507 344.156 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
174.755 347.379 mo
183.74 347.379 li
183.74 338.394 li
174.755 338.394 li
174.755 347.379 li
clp
179.248 347.129 mo
183.49 342.887 li
179.248 338.644 li
175.005 342.887 li
cp
.926818 .245335 1 .155612 cmyk
f
.5 lw
0 lc
179.248 347.129 mo
183.49 342.887 li
179.248 338.644 li
175.005 342.887 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
204.217 345.148 mo
213.203 345.148 li
213.203 336.162 li
204.217 336.162 li
204.217 345.148 li
clp
208.71 344.898 mo
212.953 340.655 li
208.71 336.412 li
204.467 340.655 li
cp
.926818 .245335 1 .155612 cmyk
f
.5 lw
0 lc
208.71 344.898 mo
212.953 340.655 li
208.71 336.412 li
204.467 340.655 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
255.107 343.024 mo
264.092 343.024 li
264.092 334.039 li
255.107 334.039 li
255.107 343.024 li
clp
259.6 342.774 mo
263.842 338.532 li
259.6 334.289 li
255.357 338.532 li
cp
.926818 .245335 1 .155612 cmyk
f
.5 lw
0 lc
259.6 342.774 mo
263.842 338.532 li
259.6 334.289 li
255.357 338.532 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
293.497 342.419 mo
302.483 342.419 li
302.483 333.433 li
293.497 333.433 li
293.497 342.419 li
clp
297.99 342.169 mo
302.233 337.926 li
297.99 333.683 li
293.747 337.926 li
cp
.926818 .245335 1 .155612 cmyk
f
.5 lw
0 lc
297.99 342.169 mo
302.233 337.926 li
297.99 333.683 li
293.747 337.926 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
357.779 340.531 mo
366.764 340.531 li
366.764 331.546 li
357.779 331.546 li
357.779 340.531 li
clp
362.272 340.281 mo
366.514 336.038 li
362.272 331.796 li
358.029 336.038 li
cp
.926818 .245335 1 .155612 cmyk
f
.5 lw
0 lc
362.272 340.281 mo
366.514 336.038 li
362.272 331.796 li
358.029 336.038 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
482.771 341.829 mo
491.756 341.829 li
491.756 332.844 li
482.771 332.844 li
482.771 341.829 li
clp
487.264 341.579 mo
491.506 337.336 li
487.264 333.094 li
483.021 337.336 li
cp
.926818 .245335 1 .155612 cmyk
f
.5 lw
0 lc
487.264 341.579 mo
491.506 337.336 li
487.264 333.094 li
483.021 337.336 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
grestore
gsave
72 388.8 mo
518.4 388.8 li
518.4 43.2 li
72 43.2 li
72 388.8 li
clp
gsave
69.7545 389.488 mo
76.2544 389.488 li
76.2544 382.989 li
69.7545 382.989 li
69.7545 389.488 li
clp
70.0044 389.238 mo
76.0044 389.238 li
76.0044 383.238 li
70.0044 383.238 li
cp
0 1 1 0 cmyk
f
.5 lw
0 lc
70.0044 389.238 mo
76.0044 389.238 li
76.0044 383.238 li
70.0044 383.238 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
71.5399 387.312 mo
78.04 387.312 li
78.04 380.812 li
71.5399 380.812 li
71.5399 387.312 li
clp
71.79 387.062 mo
77.79 387.062 li
77.79 381.062 li
71.79 381.062 li
cp
0 1 1 0 cmyk
f
.5 lw
0 lc
71.79 387.062 mo
77.79 387.062 li
77.79 381.062 li
71.79 381.062 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
74.2183 385.509 mo
80.7184 385.509 li
80.7184 379.009 li
74.2183 379.009 li
74.2183 385.509 li
clp
74.4684 385.259 mo
80.4684 385.259 li
80.4684 379.259 li
74.4684 379.259 li
cp
0 1 1 0 cmyk
f
.5 lw
0 lc
74.4684 385.259 mo
80.4684 385.259 li
80.4684 379.259 li
74.4684 379.259 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
77.7895 382.207 mo
84.2896 382.207 li
84.2896 375.707 li
77.7895 375.707 li
77.7895 382.207 li
clp
78.0396 381.957 mo
84.0396 381.957 li
84.0396 375.957 li
78.0396 375.957 li
cp
0 1 1 0 cmyk
f
.5 lw
0 lc
78.0396 381.957 mo
84.0396 381.957 li
84.0396 375.957 li
78.0396 375.957 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
82.2535 378.931 mo
88.7536 378.931 li
88.7536 372.431 li
82.2535 372.431 li
82.2535 378.931 li
clp
82.5036 378.681 mo
88.5036 378.681 li
88.5036 372.681 li
82.5036 372.681 li
cp
0 1 1 0 cmyk
f
.5 lw
0 lc
82.5036 378.681 mo
88.5036 378.681 li
88.5036 372.681 li
82.5036 372.681 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
87.6103 376.955 mo
94.1104 376.955 li
94.1104 370.455 li
87.6103 370.455 li
87.6103 376.955 li
clp
87.8604 376.705 mo
93.8604 376.705 li
93.8604 370.705 li
87.8604 370.705 li
cp
0 1 1 0 cmyk
f
.5 lw
0 lc
87.8604 376.705 mo
93.8604 376.705 li
93.8604 370.705 li
87.8604 370.705 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
93.8599 369.997 mo
100.36 369.997 li
100.36 363.497 li
93.8599 363.497 li
93.8599 369.997 li
clp
94.11 369.747 mo
100.11 369.747 li
100.11 363.747 li
94.11 363.747 li
cp
0 1 1 0 cmyk
f
.5 lw
0 lc
94.11 369.747 mo
100.11 369.747 li
100.11 363.747 li
94.11 363.747 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
101.002 366.788 mo
107.502 366.788 li
107.502 360.288 li
101.002 360.288 li
101.002 366.788 li
clp
101.252 366.538 mo
107.252 366.538 li
107.252 360.538 li
101.252 360.538 li
cp
0 1 1 0 cmyk
f
.5 lw
0 lc
101.252 366.538 mo
107.252 366.538 li
107.252 360.538 li
101.252 360.538 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
117.966 362.188 mo
124.466 362.188 li
124.466 355.688 li
117.966 355.688 li
117.966 362.188 li
clp
118.216 361.938 mo
124.216 361.938 li
124.216 355.938 li
118.216 355.938 li
cp
0 1 1 0 cmyk
f
.5 lw
0 lc
118.216 361.938 mo
124.216 361.938 li
124.216 355.938 li
118.216 355.938 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
138.5 358.188 mo
145 358.188 li
145 351.688 li
138.5 351.688 li
138.5 358.188 li
clp
138.75 357.938 mo
144.75 357.938 li
144.75 351.938 li
138.75 351.938 li
cp
0 1 1 0 cmyk
f
.5 lw
0 lc
138.75 357.938 mo
144.75 357.938 li
144.75 351.938 li
138.75 351.938 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
175.998 357.552 mo
182.498 357.552 li
182.498 351.052 li
175.998 351.052 li
175.998 357.552 li
clp
176.248 357.302 mo
182.248 357.302 li
182.248 351.302 li
176.248 351.302 li
cp
0 1 1 0 cmyk
f
.5 lw
0 lc
176.248 357.302 mo
182.248 357.302 li
182.248 351.302 li
176.248 351.302 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
205.46 355.706 mo
211.96 355.706 li
211.96 349.206 li
205.46 349.206 li
205.46 355.706 li
clp
205.71 355.456 mo
211.71 355.456 li
211.71 349.456 li
205.71 349.456 li
cp
0 1 1 0 cmyk
f
.5 lw
0 lc
205.71 355.456 mo
211.71 355.456 li
211.71 349.456 li
205.71 349.456 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
256.35 353.874 mo
262.85 353.874 li
262.85 347.374 li
256.35 347.374 li
256.35 353.874 li
clp
256.6 353.624 mo
262.6 353.624 li
262.6 347.624 li
256.6 347.624 li
cp
0 1 1 0 cmyk
f
.5 lw
0 lc
256.6 353.624 mo
262.6 353.624 li
262.6 347.624 li
256.6 347.624 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
294.74 353.384 mo
301.24 353.384 li
301.24 346.884 li
294.74 346.884 li
294.74 353.384 li
clp
294.99 353.134 mo
300.99 353.134 li
300.99 347.134 li
294.99 347.134 li
cp
0 1 1 0 cmyk
f
.5 lw
0 lc
294.99 353.134 mo
300.99 353.134 li
300.99 347.134 li
294.99 347.134 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
359.022 351.887 mo
365.522 351.887 li
365.522 345.387 li
359.022 345.387 li
359.022 351.887 li
clp
359.272 351.637 mo
365.272 351.637 li
365.272 345.637 li
359.272 345.637 li
cp
0 1 1 0 cmyk
f
.5 lw
0 lc
359.272 351.637 mo
365.272 351.637 li
365.272 345.637 li
359.272 345.637 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
484.014 352.787 mo
490.514 352.787 li
490.514 346.287 li
484.014 346.287 li
484.014 352.787 li
clp
484.264 352.537 mo
490.264 352.537 li
490.264 346.537 li
484.264 346.537 li
cp
0 1 1 0 cmyk
f
.5 lw
0 lc
484.264 352.537 mo
490.264 352.537 li
490.264 346.537 li
484.264 346.537 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
grestore
gsave
72 388.8 mo
518.4 388.8 li
518.4 43.2 li
72 43.2 li
72 388.8 li
clp
73.0044 384.394 mo
74.79 377.784 li
77.4684 371.866 li
81.0396 362.035 li
85.5036 352.054 li
90.8604 353.386 li
97.11 326.942 li
104.252 317.092 li
121.216 298.322 li
141.75 280.163 li
179.248 265.056 li
208.71 256.749 li
259.6 240.223 li
297.99 235.381 li
362.272 225.384 li
487.264 226.476 li
.930816 .793027 0 0 cmyk
@
grestore
gsave
72 388.8 mo
518.4 388.8 li
518.4 43.2 li
72 43.2 li
72 388.8 li
clp
73.0044 385.637 mo
74.79 382.931 li
77.4684 379.883 li
81.0396 375.387 li
85.5036 370.902 li
90.8604 369.047 li
97.11 360.44 li
104.252 356.167 li
121.216 350.022 li
141.75 344.156 li
179.248 342.887 li
208.71 340.655 li
259.6 338.532 li
297.99 337.926 li
362.272 336.038 li
487.264 337.336 li
.926818 .245335 1 .155612 cmyk
@
grestore
gsave
72 388.8 mo
518.4 388.8 li
518.4 43.2 li
72 43.2 li
72 388.8 li
clp
73.0044 386.238 mo
74.79 384.062 li
77.4684 382.259 li
81.0396 378.957 li
85.5036 375.681 li
90.8604 373.705 li
97.11 366.747 li
104.252 363.538 li
121.216 358.938 li
141.75 354.938 li
179.248 354.302 li
208.71 352.456 li
259.6 350.624 li
297.99 350.134 li
362.272 348.637 li
487.264 349.537 li
0 1 1 0 cmyk
@
grestore
gsave
72 388.8 mo
518.4 388.8 li
518.4 43.2 li
72 43.2 li
72 388.8 li
clp
gsave
69.7545 386.693 mo
76.2544 386.693 li
76.2544 380.193 li
69.7545 380.193 li
69.7545 386.693 li
clp
73.0044 386.443 mo
73.8 386.443 74.5631 386.127 75.1257 385.565 cv
75.6883 385.002 76.0044 384.239 76.0044 383.443 cv
76.0044 382.648 75.6883 381.885 75.1257 381.322 cv
74.5631 380.76 73.8 380.443 73.0044 380.443 cv
72.2088 380.443 71.4457 380.76 70.8831 381.322 cv
70.3205 381.885 70.0044 382.648 70.0044 383.443 cv
70.0044 384.239 70.3205 385.002 70.8831 385.565 cv
71.4457 386.127 72.2088 386.443 73.0044 386.443 cv
cp
.309697 .140841 1 .00030518 cmyk
f
.5 lw
0 lc
73.0044 386.443 mo
73.8 386.443 74.5631 386.127 75.1257 385.565 cv
75.6883 385.002 76.0044 384.239 76.0044 383.443 cv
76.0044 382.648 75.6883 381.885 75.1257 381.322 cv
74.5631 380.76 73.8 380.443 73.0044 380.443 cv
72.2088 380.443 71.4457 380.76 70.8831 381.322 cv
70.3205 381.885 70.0044 382.648 70.0044 383.443 cv
70.0044 384.239 70.3205 385.002 70.8831 385.565 cv
71.4457 386.127 72.2088 386.443 73.0044 386.443 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
71.5399 380.784 mo
78.04 380.784 li
78.04 374.284 li
71.5399 374.284 li
71.5399 380.784 li
clp
74.79 380.534 mo
75.5856 380.534 76.3487 380.218 76.9113 379.655 cv
77.4739 379.093 77.79 378.33 77.79 377.534 cv
77.79 376.738 77.4739 375.975 76.9113 375.413 cv
76.3487 374.85 75.5856 374.534 74.79 374.534 cv
73.9944 374.534 73.2313 374.85 72.6687 375.413 cv
72.1061 375.975 71.79 376.738 71.79 377.534 cv
71.79 378.33 72.1061 379.093 72.6687 379.655 cv
73.2313 380.218 73.9944 380.534 74.79 380.534 cv
cp
.309697 .140841 1 .00030518 cmyk
f
.5 lw
0 lc
74.79 380.534 mo
75.5856 380.534 76.3487 380.218 76.9113 379.655 cv
77.4739 379.093 77.79 378.33 77.79 377.534 cv
77.79 376.738 77.4739 375.975 76.9113 375.413 cv
76.3487 374.85 75.5856 374.534 74.79 374.534 cv
73.9944 374.534 73.2313 374.85 72.6687 375.413 cv
72.1061 375.975 71.79 376.738 71.79 377.534 cv
71.79 378.33 72.1061 379.093 72.6687 379.655 cv
73.2313 380.218 73.9944 380.534 74.79 380.534 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
74.2183 378.595 mo
80.7184 378.595 li
80.7184 372.095 li
74.2183 372.095 li
74.2183 378.595 li
clp
77.4684 378.345 mo
78.264 378.345 79.0271 378.028 79.5897 377.466 cv
80.1523 376.903 80.4684 376.14 80.4684 375.345 cv
80.4684 374.549 80.1523 373.786 79.5897 373.223 cv
79.0271 372.661 78.264 372.345 77.4684 372.345 cv
76.6728 372.345 75.9097 372.661 75.3471 373.223 cv
74.7845 373.786 74.4684 374.549 74.4684 375.345 cv
74.4684 376.14 74.7845 376.903 75.3471 377.466 cv
75.9097 378.028 76.6728 378.345 77.4684 378.345 cv
cp
.309697 .140841 1 .00030518 cmyk
f
.5 lw
0 lc
77.4684 378.345 mo
78.264 378.345 79.0271 378.028 79.5897 377.466 cv
80.1523 376.903 80.4684 376.14 80.4684 375.345 cv
80.4684 374.549 80.1523 373.786 79.5897 373.223 cv
79.0271 372.661 78.264 372.345 77.4684 372.345 cv
76.6728 372.345 75.9097 372.661 75.3471 373.223 cv
74.7845 373.786 74.4684 374.549 74.4684 375.345 cv
74.4684 376.14 74.7845 376.903 75.3471 377.466 cv
75.9097 378.028 76.6728 378.345 77.4684 378.345 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
77.7895 367.972 mo
84.2896 367.972 li
84.2896 361.472 li
77.7895 361.472 li
77.7895 367.972 li
clp
81.0396 367.722 mo
81.8352 367.722 82.5983 367.406 83.1609 366.844 cv
83.7235 366.281 84.0396 365.518 84.0396 364.722 cv
84.0396 363.927 83.7235 363.164 83.1609 362.601 cv
82.5983 362.038 81.8352 361.722 81.0396 361.722 cv
80.244 361.722 79.4809 362.038 78.9183 362.601 cv
78.3557 363.164 78.0396 363.927 78.0396 364.722 cv
78.0396 365.518 78.3557 366.281 78.9183 366.844 cv
79.4809 367.406 80.244 367.722 81.0396 367.722 cv
cp
.309697 .140841 1 .00030518 cmyk
f
.5 lw
0 lc
81.0396 367.722 mo
81.8352 367.722 82.5983 367.406 83.1609 366.844 cv
83.7235 366.281 84.0396 365.518 84.0396 364.722 cv
84.0396 363.927 83.7235 363.164 83.1609 362.601 cv
82.5983 362.038 81.8352 361.722 81.0396 361.722 cv
80.244 361.722 79.4809 362.038 78.9183 362.601 cv
78.3557 363.164 78.0396 363.927 78.0396 364.722 cv
78.0396 365.518 78.3557 366.281 78.9183 366.844 cv
79.4809 367.406 80.244 367.722 81.0396 367.722 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
82.2535 357.032 mo
88.7536 357.032 li
88.7536 350.532 li
82.2535 350.532 li
82.2535 357.032 li
clp
85.5036 356.782 mo
86.2992 356.782 87.0623 356.466 87.6249 355.903 cv
88.1875 355.341 88.5036 354.578 88.5036 353.782 cv
88.5036 352.986 88.1875 352.223 87.6249 351.661 cv
87.0623 351.098 86.2992 350.782 85.5036 350.782 cv
84.708 350.782 83.9449 351.098 83.3823 351.661 cv
82.8197 352.223 82.5036 352.986 82.5036 353.782 cv
82.5036 354.578 82.8197 355.341 83.3823 355.903 cv
83.9449 356.466 84.708 356.782 85.5036 356.782 cv
cp
.309697 .140841 1 .00030518 cmyk
f
.5 lw
0 lc
85.5036 356.782 mo
86.2992 356.782 87.0623 356.466 87.6249 355.903 cv
88.1875 355.341 88.5036 354.578 88.5036 353.782 cv
88.5036 352.986 88.1875 352.223 87.6249 351.661 cv
87.0623 351.098 86.2992 350.782 85.5036 350.782 cv
84.708 350.782 83.9449 351.098 83.3823 351.661 cv
82.8197 352.223 82.5036 352.986 82.5036 353.782 cv
82.5036 354.578 82.8197 355.341 83.3823 355.903 cv
83.9449 356.466 84.708 356.782 85.5036 356.782 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
87.6103 346.381 mo
94.1104 346.381 li
94.1104 339.881 li
87.6103 339.881 li
87.6103 346.381 li
clp
90.8604 346.131 mo
91.656 346.131 92.4191 345.815 92.9817 345.252 cv
93.5443 344.689 93.8604 343.926 93.8604 343.131 cv
93.8604 342.335 93.5443 341.572 92.9817 341.009 cv
92.4191 340.447 91.656 340.131 90.8604 340.131 cv
90.0648 340.131 89.3017 340.447 88.7391 341.009 cv
88.1765 341.572 87.8604 342.335 87.8604 343.131 cv
87.8604 343.926 88.1765 344.689 88.7391 345.252 cv
89.3017 345.815 90.0648 346.131 90.8604 346.131 cv
cp
.309697 .140841 1 .00030518 cmyk
f
.5 lw
0 lc
90.8604 346.131 mo
91.656 346.131 92.4191 345.815 92.9817 345.252 cv
93.5443 344.689 93.8604 343.926 93.8604 343.131 cv
93.8604 342.335 93.5443 341.572 92.9817 341.009 cv
92.4191 340.447 91.656 340.131 90.8604 340.131 cv
90.0648 340.131 89.3017 340.447 88.7391 341.009 cv
88.1765 341.572 87.8604 342.335 87.8604 343.131 cv
87.8604 343.926 88.1765 344.689 88.7391 345.252 cv
89.3017 345.815 90.0648 346.131 90.8604 346.131 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
93.8599 328.637 mo
100.36 328.637 li
100.36 322.137 li
93.8599 322.137 li
93.8599 328.637 li
clp
97.11 328.387 mo
97.9056 328.387 98.6687 328.071 99.2313 327.509 cv
99.7939 326.946 100.11 326.183 100.11 325.387 cv
100.11 324.592 99.7939 323.829 99.2313 323.266 cv
98.6687 322.703 97.9056 322.387 97.11 322.387 cv
96.3144 322.387 95.5513 322.703 94.9887 323.266 cv
94.4261 323.829 94.11 324.592 94.11 325.387 cv
94.11 326.183 94.4261 326.946 94.9887 327.509 cv
95.5513 328.071 96.3144 328.387 97.11 328.387 cv
cp
.309697 .140841 1 .00030518 cmyk
f
.5 lw
0 lc
97.11 328.387 mo
97.9056 328.387 98.6687 328.071 99.2313 327.509 cv
99.7939 326.946 100.11 326.183 100.11 325.387 cv
100.11 324.592 99.7939 323.829 99.2313 323.266 cv
98.6687 322.703 97.9056 322.387 97.11 322.387 cv
96.3144 322.387 95.5513 322.703 94.9887 323.266 cv
94.4261 323.829 94.11 324.592 94.11 325.387 cv
94.11 326.183 94.4261 326.946 94.9887 327.509 cv
95.5513 328.071 96.3144 328.387 97.11 328.387 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
101.002 309.572 mo
107.502 309.572 li
107.502 303.072 li
101.002 303.072 li
101.002 309.572 li
clp
104.252 309.322 mo
105.048 309.322 105.811 309.006 106.374 308.443 cv
106.936 307.881 107.252 307.118 107.252 306.322 cv
107.252 305.526 106.936 304.763 106.374 304.201 cv
105.811 303.638 105.048 303.322 104.252 303.322 cv
103.457 303.322 102.694 303.638 102.131 304.201 cv
101.569 304.763 101.252 305.526 101.252 306.322 cv
101.252 307.118 101.569 307.881 102.131 308.443 cv
102.694 309.006 103.457 309.322 104.252 309.322 cv
cp
.309697 .140841 1 .00030518 cmyk
f
.5 lw
0 lc
104.252 309.322 mo
105.048 309.322 105.811 309.006 106.374 308.443 cv
106.936 307.881 107.252 307.118 107.252 306.322 cv
107.252 305.526 106.936 304.763 106.374 304.201 cv
105.811 303.638 105.048 303.322 104.252 303.322 cv
103.457 303.322 102.694 303.638 102.131 304.201 cv
101.569 304.763 101.252 305.526 101.252 306.322 cv
101.252 307.118 101.569 307.881 102.131 308.443 cv
102.694 309.006 103.457 309.322 104.252 309.322 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
117.966 277.224 mo
124.466 277.224 li
124.466 270.724 li
117.966 270.724 li
117.966 277.224 li
clp
121.216 276.974 mo
122.011 276.974 122.774 276.658 123.337 276.095 cv
123.9 275.533 124.216 274.77 124.216 273.974 cv
124.216 273.178 123.9 272.415 123.337 271.853 cv
122.774 271.29 122.011 270.974 121.216 270.974 cv
120.42 270.974 119.657 271.29 119.094 271.853 cv
118.532 272.415 118.216 273.178 118.216 273.974 cv
118.216 274.77 118.532 275.533 119.094 276.095 cv
119.657 276.658 120.42 276.974 121.216 276.974 cv
cp
.309697 .140841 1 .00030518 cmyk
f
.5 lw
0 lc
121.216 276.974 mo
122.011 276.974 122.774 276.658 123.337 276.095 cv
123.9 275.533 124.216 274.77 124.216 273.974 cv
124.216 273.178 123.9 272.415 123.337 271.853 cv
122.774 271.29 122.011 270.974 121.216 270.974 cv
120.42 270.974 119.657 271.29 119.094 271.853 cv
118.532 272.415 118.216 273.178 118.216 273.974 cv
118.216 274.77 118.532 275.533 119.094 276.095 cv
119.657 276.658 120.42 276.974 121.216 276.974 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
138.5 244.561 mo
145 244.561 li
145 238.061 li
138.5 238.061 li
138.5 244.561 li
clp
141.75 244.311 mo
142.546 244.311 143.309 243.995 143.871 243.433 cv
144.434 242.87 144.75 242.107 144.75 241.311 cv
144.75 240.516 144.434 239.753 143.871 239.19 cv
143.309 238.627 142.546 238.311 141.75 238.311 cv
140.954 238.311 140.191 238.627 139.629 239.19 cv
139.066 239.753 138.75 240.516 138.75 241.311 cv
138.75 242.107 139.066 242.87 139.629 243.433 cv
140.191 243.995 140.954 244.311 141.75 244.311 cv
cp
.309697 .140841 1 .00030518 cmyk
f
.5 lw
0 lc
141.75 244.311 mo
142.546 244.311 143.309 243.995 143.871 243.433 cv
144.434 242.87 144.75 242.107 144.75 241.311 cv
144.75 240.516 144.434 239.753 143.871 239.19 cv
143.309 238.627 142.546 238.311 141.75 238.311 cv
140.954 238.311 140.191 238.627 139.629 239.19 cv
139.066 239.753 138.75 240.516 138.75 241.311 cv
138.75 242.107 139.066 242.87 139.629 243.433 cv
140.191 243.995 140.954 244.311 141.75 244.311 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
175.998 228.164 mo
182.498 228.164 li
182.498 221.664 li
175.998 221.664 li
175.998 228.164 li
clp
179.248 227.914 mo
180.043 227.914 180.806 227.598 181.369 227.035 cv
181.932 226.473 182.248 225.71 182.248 224.914 cv
182.248 224.118 181.932 223.355 181.369 222.793 cv
180.806 222.23 180.043 221.914 179.248 221.914 cv
178.452 221.914 177.689 222.23 177.126 222.793 cv
176.564 223.355 176.248 224.118 176.248 224.914 cv
176.248 225.71 176.564 226.473 177.126 227.035 cv
177.689 227.598 178.452 227.914 179.248 227.914 cv
cp
.309697 .140841 1 .00030518 cmyk
f
.5 lw
0 lc
179.248 227.914 mo
180.043 227.914 180.806 227.598 181.369 227.035 cv
181.932 226.473 182.248 225.71 182.248 224.914 cv
182.248 224.118 181.932 223.355 181.369 222.793 cv
180.806 222.23 180.043 221.914 179.248 221.914 cv
178.452 221.914 177.689 222.23 177.126 222.793 cv
176.564 223.355 176.248 224.118 176.248 224.914 cv
176.248 225.71 176.564 226.473 177.126 227.035 cv
177.689 227.598 178.452 227.914 179.248 227.914 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
205.46 198.146 mo
211.96 198.146 li
211.96 191.646 li
205.46 191.646 li
205.46 198.146 li
clp
208.71 197.896 mo
209.506 197.896 210.269 197.58 210.831 197.017 cv
211.394 196.455 211.71 195.691 211.71 194.896 cv
211.71 194.1 211.394 193.337 210.831 192.775 cv
210.269 192.212 209.506 191.896 208.71 191.896 cv
207.914 191.896 207.151 192.212 206.589 192.775 cv
206.026 193.337 205.71 194.1 205.71 194.896 cv
205.71 195.691 206.026 196.455 206.589 197.017 cv
207.151 197.58 207.914 197.896 208.71 197.896 cv
cp
.309697 .140841 1 .00030518 cmyk
f
.5 lw
0 lc
208.71 197.896 mo
209.506 197.896 210.269 197.58 210.831 197.017 cv
211.394 196.455 211.71 195.691 211.71 194.896 cv
211.71 194.1 211.394 193.337 210.831 192.775 cv
210.269 192.212 209.506 191.896 208.71 191.896 cv
207.914 191.896 207.151 192.212 206.589 192.775 cv
206.026 193.337 205.71 194.1 205.71 194.896 cv
205.71 195.691 206.026 196.455 206.589 197.017 cv
207.151 197.58 207.914 197.896 208.71 197.896 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
256.35 156.498 mo
262.85 156.498 li
262.85 149.998 li
256.35 149.998 li
256.35 156.498 li
clp
259.6 156.248 mo
260.395 156.248 261.158 155.932 261.721 155.369 cv
262.284 154.807 262.6 154.044 262.6 153.248 cv
262.6 152.452 262.284 151.689 261.721 151.127 cv
261.158 150.564 260.395 150.248 259.6 150.248 cv
258.804 150.248 258.041 150.564 257.478 151.127 cv
256.916 151.689 256.6 152.452 256.6 153.248 cv
256.6 154.044 256.916 154.807 257.478 155.369 cv
258.041 155.932 258.804 156.248 259.6 156.248 cv
cp
.309697 .140841 1 .00030518 cmyk
f
.5 lw
0 lc
259.6 156.248 mo
260.395 156.248 261.158 155.932 261.721 155.369 cv
262.284 154.807 262.6 154.044 262.6 153.248 cv
262.6 152.452 262.284 151.689 261.721 151.127 cv
261.158 150.564 260.395 150.248 259.6 150.248 cv
258.804 150.248 258.041 150.564 257.478 151.127 cv
256.916 151.689 256.6 152.452 256.6 153.248 cv
256.6 154.044 256.916 154.807 257.478 155.369 cv
258.041 155.932 258.804 156.248 259.6 156.248 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
294.74 159.535 mo
301.24 159.535 li
301.24 153.035 li
294.74 153.035 li
294.74 159.535 li
clp
297.99 159.285 mo
298.786 159.285 299.549 158.969 300.111 158.406 cv
300.674 157.844 300.99 157.08 300.99 156.285 cv
300.99 155.489 300.674 154.726 300.111 154.164 cv
299.549 153.601 298.786 153.285 297.99 153.285 cv
297.194 153.285 296.431 153.601 295.869 154.164 cv
295.306 154.726 294.99 155.489 294.99 156.285 cv
294.99 157.08 295.306 157.844 295.869 158.406 cv
296.431 158.969 297.194 159.285 297.99 159.285 cv
cp
.309697 .140841 1 .00030518 cmyk
f
.5 lw
0 lc
297.99 159.285 mo
298.786 159.285 299.549 158.969 300.111 158.406 cv
300.674 157.844 300.99 157.08 300.99 156.285 cv
300.99 155.489 300.674 154.726 300.111 154.164 cv
299.549 153.601 298.786 153.285 297.99 153.285 cv
297.194 153.285 296.431 153.601 295.869 154.164 cv
295.306 154.726 294.99 155.489 294.99 156.285 cv
294.99 157.08 295.306 157.844 295.869 158.406 cv
296.431 158.969 297.194 159.285 297.99 159.285 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
359.022 114.869 mo
365.522 114.869 li
365.522 108.369 li
359.022 108.369 li
359.022 114.869 li
clp
362.272 114.619 mo
363.067 114.619 363.83 114.303 364.393 113.74 cv
364.956 113.178 365.272 112.414 365.272 111.619 cv
365.272 110.823 364.956 110.06 364.393 109.498 cv
363.83 108.935 363.067 108.619 362.272 108.619 cv
361.476 108.619 360.713 108.935 360.15 109.498 cv
359.588 110.06 359.272 110.823 359.272 111.619 cv
359.272 112.414 359.588 113.178 360.15 113.74 cv
360.713 114.303 361.476 114.619 362.272 114.619 cv
cp
.309697 .140841 1 .00030518 cmyk
f
.5 lw
0 lc
362.272 114.619 mo
363.067 114.619 363.83 114.303 364.393 113.74 cv
364.956 113.178 365.272 112.414 365.272 111.619 cv
365.272 110.823 364.956 110.06 364.393 109.498 cv
363.83 108.935 363.067 108.619 362.272 108.619 cv
361.476 108.619 360.713 108.935 360.15 109.498 cv
359.588 110.06 359.272 110.823 359.272 111.619 cv
359.272 112.414 359.588 113.178 360.15 113.74 cv
360.713 114.303 361.476 114.619 362.272 114.619 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
484.014 125.862 mo
490.514 125.862 li
490.514 119.362 li
484.014 119.362 li
484.014 125.862 li
clp
487.264 125.612 mo
488.059 125.612 488.822 125.296 489.385 124.734 cv
489.948 124.171 490.264 123.408 490.264 122.612 cv
490.264 121.817 489.948 121.054 489.385 120.491 cv
488.822 119.928 488.059 119.612 487.264 119.612 cv
486.468 119.612 485.705 119.928 485.142 120.491 cv
484.58 121.054 484.264 121.817 484.264 122.612 cv
484.264 123.408 484.58 124.171 485.142 124.734 cv
485.705 125.296 486.468 125.612 487.264 125.612 cv
cp
.309697 .140841 1 .00030518 cmyk
f
.5 lw
0 lc
487.264 125.612 mo
488.059 125.612 488.822 125.296 489.385 124.734 cv
489.948 124.171 490.264 123.408 490.264 122.612 cv
490.264 121.817 489.948 121.054 489.385 120.491 cv
488.822 119.928 488.059 119.612 487.264 119.612 cv
486.468 119.612 485.705 119.928 485.142 120.491 cv
484.58 121.054 484.264 121.817 484.264 122.612 cv
484.264 123.408 484.58 124.171 485.142 124.734 cv
485.705 125.296 486.468 125.612 487.264 125.612 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
grestore
gsave
72 388.8 mo
518.4 388.8 li
518.4 43.2 li
72 43.2 li
72 388.8 li
clp
gsave
68.5117 390.023 mo
77.497 390.023 li
77.497 381.038 li
68.5117 381.038 li
68.5117 390.023 li
clp
73.0044 389.773 mo
77.247 385.531 li
73.0044 381.288 li
68.7618 385.531 li
cp
.397589 .935882 0 0 cmyk
f
.5 lw
0 lc
73.0044 389.773 mo
77.247 385.531 li
73.0044 381.288 li
68.7618 385.531 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
70.2973 387.271 mo
79.2826 387.271 li
79.2826 378.286 li
70.2973 378.286 li
70.2973 387.271 li
clp
74.79 387.021 mo
79.0326 382.779 li
74.79 378.536 li
70.5474 382.779 li
cp
.397589 .935882 0 0 cmyk
f
.5 lw
0 lc
74.79 387.021 mo
79.0326 382.779 li
74.79 378.536 li
70.5474 382.779 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
72.9757 385.102 mo
81.961 385.102 li
81.961 376.116 li
72.9757 376.116 li
72.9757 385.102 li
clp
77.4684 384.852 mo
81.711 380.609 li
77.4684 376.366 li
73.2258 380.609 li
cp
.397589 .935882 0 0 cmyk
f
.5 lw
0 lc
77.4684 384.852 mo
81.711 380.609 li
77.4684 376.366 li
73.2258 380.609 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
76.5469 380.259 mo
85.5322 380.259 li
85.5322 371.274 li
76.5469 371.274 li
76.5469 380.259 li
clp
81.0396 380.009 mo
85.2822 375.766 li
81.0396 371.524 li
76.797 375.766 li
cp
.397589 .935882 0 0 cmyk
f
.5 lw
0 lc
81.0396 380.009 mo
85.2822 375.766 li
81.0396 371.524 li
76.797 375.766 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
81.0109 375.44 mo
89.9962 375.44 li
89.9962 366.455 li
81.0109 366.455 li
81.0109 375.44 li
clp
85.5036 375.19 mo
89.7462 370.948 li
85.5036 366.705 li
81.261 370.948 li
cp
.397589 .935882 0 0 cmyk
f
.5 lw
0 lc
85.5036 375.19 mo
89.7462 370.948 li
85.5036 366.705 li
81.261 370.948 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
86.3677 370.582 mo
95.353 370.582 li
95.353 361.597 li
86.3677 361.597 li
86.3677 370.582 li
clp
90.8604 370.332 mo
95.103 366.089 li
90.8604 361.847 li
86.6178 366.089 li
cp
.397589 .935882 0 0 cmyk
f
.5 lw
0 lc
90.8604 370.332 mo
95.103 366.089 li
90.8604 361.847 li
86.6178 366.089 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
92.6173 364.375 mo
101.603 364.375 li
101.603 355.39 li
92.6173 355.39 li
92.6173 364.375 li
clp
97.11 364.125 mo
101.353 359.882 li
97.11 355.64 li
92.8674 359.882 li
cp
.397589 .935882 0 0 cmyk
f
.5 lw
0 lc
97.11 364.125 mo
101.353 359.882 li
97.11 355.64 li
92.8674 359.882 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
99.7597 358.102 mo
108.745 358.102 li
108.745 349.117 li
99.7597 349.117 li
99.7597 358.102 li
clp
104.252 357.852 mo
108.495 353.61 li
104.252 349.367 li
100.01 353.61 li
cp
.397589 .935882 0 0 cmyk
f
.5 lw
0 lc
104.252 357.852 mo
108.495 353.61 li
104.252 349.367 li
100.01 353.61 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
116.723 349.313 mo
125.708 349.313 li
125.708 340.328 li
116.723 340.328 li
116.723 349.313 li
clp
121.216 349.063 mo
125.458 344.82 li
121.216 340.578 li
116.973 344.82 li
cp
.397589 .935882 0 0 cmyk
f
.5 lw
0 lc
121.216 349.063 mo
125.458 344.82 li
121.216 340.578 li
116.973 344.82 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
137.257 345.974 mo
146.243 345.974 li
146.243 336.989 li
137.257 336.989 li
137.257 345.974 li
clp
141.75 345.724 mo
145.993 341.482 li
141.75 337.239 li
137.507 341.482 li
cp
.397589 .935882 0 0 cmyk
f
.5 lw
0 lc
141.75 345.724 mo
145.993 341.482 li
141.75 337.239 li
137.507 341.482 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
174.755 343.061 mo
183.74 343.061 li
183.74 334.076 li
174.755 334.076 li
174.755 343.061 li
clp
179.248 342.811 mo
183.49 338.569 li
179.248 334.326 li
175.005 338.569 li
cp
.397589 .935882 0 0 cmyk
f
.5 lw
0 lc
179.248 342.811 mo
183.49 338.569 li
179.248 334.326 li
175.005 338.569 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
204.217 339.379 mo
213.203 339.379 li
213.203 330.394 li
204.217 330.394 li
204.217 339.379 li
clp
208.71 339.129 mo
212.953 334.887 li
208.71 330.644 li
204.467 334.887 li
cp
.397589 .935882 0 0 cmyk
f
.5 lw
0 lc
208.71 339.129 mo
212.953 334.887 li
208.71 330.644 li
204.467 334.887 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
255.107 334.985 mo
264.092 334.985 li
264.092 326 li
255.107 326 li
255.107 334.985 li
clp
259.6 334.735 mo
263.842 330.492 li
259.6 326.25 li
255.357 330.492 li
cp
.397589 .935882 0 0 cmyk
f
.5 lw
0 lc
259.6 334.735 mo
263.842 330.492 li
259.6 326.25 li
255.357 330.492 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
293.497 336.007 mo
302.483 336.007 li
302.483 327.022 li
293.497 327.022 li
293.497 336.007 li
clp
297.99 335.757 mo
302.233 331.515 li
297.99 327.272 li
293.747 331.515 li
cp
.397589 .935882 0 0 cmyk
f
.5 lw
0 lc
297.99 335.757 mo
302.233 331.515 li
297.99 327.272 li
293.747 331.515 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
357.779 333.246 mo
366.764 333.246 li
366.764 324.26 li
357.779 324.26 li
357.779 333.246 li
clp
362.272 332.996 mo
366.514 328.753 li
362.272 324.51 li
358.029 328.753 li
cp
.397589 .935882 0 0 cmyk
f
.5 lw
0 lc
362.272 332.996 mo
366.514 328.753 li
362.272 324.51 li
358.029 328.753 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
482.771 334.82 mo
491.756 334.82 li
491.756 325.835 li
482.771 325.835 li
482.771 334.82 li
clp
487.264 334.57 mo
491.506 330.328 li
487.264 326.085 li
483.021 330.328 li
cp
.397589 .935882 0 0 cmyk
f
.5 lw
0 lc
487.264 334.57 mo
491.506 330.328 li
487.264 326.085 li
483.021 330.328 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
grestore
gsave
72 388.8 mo
518.4 388.8 li
518.4 43.2 li
72 43.2 li
72 388.8 li
clp
gsave
69.7545 389.217 mo
76.2544 389.217 li
76.2544 382.717 li
69.7545 382.717 li
69.7545 389.217 li
clp
70.0044 388.967 mo
76.0044 388.967 li
76.0044 382.967 li
70.0044 382.967 li
cp
.741878 0 .317052 0 cmyk
f
.5 lw
0 lc
70.0044 388.967 mo
76.0044 388.967 li
76.0044 382.967 li
70.0044 382.967 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
71.5399 386.891 mo
78.04 386.891 li
78.04 380.391 li
71.5399 380.391 li
71.5399 386.891 li
clp
71.79 386.641 mo
77.79 386.641 li
77.79 380.641 li
71.79 380.641 li
cp
.741878 0 .317052 0 cmyk
f
.5 lw
0 lc
71.79 386.641 mo
77.79 386.641 li
77.79 380.641 li
71.79 380.641 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
74.2183 385.62 mo
80.7184 385.62 li
80.7184 379.12 li
74.2183 379.12 li
74.2183 385.62 li
clp
74.4684 385.37 mo
80.4684 385.37 li
80.4684 379.37 li
74.4684 379.37 li
cp
.741878 0 .317052 0 cmyk
f
.5 lw
0 lc
74.4684 385.37 mo
80.4684 385.37 li
80.4684 379.37 li
74.4684 379.37 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
77.7895 381.908 mo
84.2896 381.908 li
84.2896 375.408 li
77.7895 375.408 li
77.7895 381.908 li
clp
78.0396 381.658 mo
84.0396 381.658 li
84.0396 375.658 li
78.0396 375.658 li
cp
.741878 0 .317052 0 cmyk
f
.5 lw
0 lc
78.0396 381.658 mo
84.0396 381.658 li
84.0396 375.658 li
78.0396 375.658 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
82.2535 378.312 mo
88.7536 378.312 li
88.7536 371.812 li
82.2535 371.812 li
82.2535 378.312 li
clp
82.5036 378.062 mo
88.5036 378.062 li
88.5036 372.062 li
82.5036 372.062 li
cp
.741878 0 .317052 0 cmyk
f
.5 lw
0 lc
82.5036 378.062 mo
88.5036 378.062 li
88.5036 372.062 li
82.5036 372.062 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
87.6103 375.107 mo
94.1104 375.107 li
94.1104 368.607 li
87.6103 368.607 li
87.6103 375.107 li
clp
87.8604 374.857 mo
93.8604 374.857 li
93.8604 368.857 li
87.8604 368.857 li
cp
.741878 0 .317052 0 cmyk
f
.5 lw
0 lc
87.8604 374.857 mo
93.8604 374.857 li
93.8604 368.857 li
87.8604 368.857 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
93.8599 369.883 mo
100.36 369.883 li
100.36 363.383 li
93.8599 363.383 li
93.8599 369.883 li
clp
94.11 369.633 mo
100.11 369.633 li
100.11 363.633 li
94.11 363.633 li
cp
.741878 0 .317052 0 cmyk
f
.5 lw
0 lc
94.11 369.633 mo
100.11 369.633 li
100.11 363.633 li
94.11 363.633 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
101.002 364.111 mo
107.502 364.111 li
107.502 357.611 li
101.002 357.611 li
101.002 364.111 li
clp
101.252 363.861 mo
107.252 363.861 li
107.252 357.861 li
101.252 357.861 li
cp
.741878 0 .317052 0 cmyk
f
.5 lw
0 lc
101.252 363.861 mo
107.252 363.861 li
107.252 357.861 li
101.252 357.861 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
117.966 358.277 mo
124.466 358.277 li
124.466 351.777 li
117.966 351.777 li
117.966 358.277 li
clp
118.216 358.027 mo
124.216 358.027 li
124.216 352.027 li
118.216 352.027 li
cp
.741878 0 .317052 0 cmyk
f
.5 lw
0 lc
118.216 358.027 mo
124.216 358.027 li
124.216 352.027 li
118.216 352.027 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
138.5 357.012 mo
145 357.012 li
145 350.512 li
138.5 350.512 li
138.5 357.012 li
clp
138.75 356.762 mo
144.75 356.762 li
144.75 350.762 li
138.75 350.762 li
cp
.741878 0 .317052 0 cmyk
f
.5 lw
0 lc
138.75 356.762 mo
144.75 356.762 li
144.75 350.762 li
138.75 350.762 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
175.998 355.11 mo
182.498 355.11 li
182.498 348.61 li
175.998 348.61 li
175.998 355.11 li
clp
176.248 354.86 mo
182.248 354.86 li
182.248 348.86 li
176.248 348.86 li
cp
.741878 0 .317052 0 cmyk
f
.5 lw
0 lc
176.248 354.86 mo
182.248 354.86 li
182.248 348.86 li
176.248 348.86 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
205.46 352.153 mo
211.96 352.153 li
211.96 345.653 li
205.46 345.653 li
205.46 352.153 li
clp
205.71 351.903 mo
211.71 351.903 li
211.71 345.903 li
205.71 345.903 li
cp
.741878 0 .317052 0 cmyk
f
.5 lw
0 lc
205.71 351.903 mo
211.71 351.903 li
211.71 345.903 li
205.71 345.903 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
256.35 349.606 mo
262.85 349.606 li
262.85 343.106 li
256.35 343.106 li
256.35 349.606 li
clp
256.6 349.356 mo
262.6 349.356 li
262.6 343.356 li
256.6 343.356 li
cp
.741878 0 .317052 0 cmyk
f
.5 lw
0 lc
256.6 349.356 mo
262.6 349.356 li
262.6 343.356 li
256.6 343.356 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
294.74 349.75 mo
301.24 349.75 li
301.24 343.25 li
294.74 343.25 li
294.74 349.75 li
clp
294.99 349.5 mo
300.99 349.5 li
300.99 343.5 li
294.99 343.5 li
cp
.741878 0 .317052 0 cmyk
f
.5 lw
0 lc
294.99 349.5 mo
300.99 349.5 li
300.99 343.5 li
294.99 343.5 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
359.022 347.772 mo
365.522 347.772 li
365.522 341.272 li
359.022 341.272 li
359.022 347.772 li
clp
359.272 347.522 mo
365.272 347.522 li
365.272 341.522 li
359.272 341.522 li
cp
.741878 0 .317052 0 cmyk
f
.5 lw
0 lc
359.272 347.522 mo
365.272 347.522 li
365.272 341.522 li
359.272 341.522 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
484.014 348.817 mo
490.514 348.817 li
490.514 342.317 li
484.014 342.317 li
484.014 348.817 li
clp
484.264 348.567 mo
490.264 348.567 li
490.264 342.567 li
484.264 342.567 li
cp
.741878 0 .317052 0 cmyk
f
.5 lw
0 lc
484.264 348.567 mo
490.264 348.567 li
490.264 342.567 li
484.264 342.567 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
grestore
gsave
72 388.8 mo
518.4 388.8 li
518.4 43.2 li
72 43.2 li
72 388.8 li
clp
73.0044 383.443 mo
74.79 377.534 li
77.4684 375.345 li
81.0396 364.722 li
85.5036 353.782 li
90.8604 343.131 li
97.11 325.387 li
104.252 306.322 li
121.216 273.974 li
141.75 241.311 li
179.248 224.914 li
208.71 194.896 li
259.6 153.248 li
297.99 156.285 li
362.272 111.619 li
487.264 122.612 li
.309697 .140841 1 .00030518 cmyk
@
grestore
gsave
72 388.8 mo
518.4 388.8 li
518.4 43.2 li
72 43.2 li
72 388.8 li
clp
73.0044 385.531 mo
74.79 382.779 li
77.4684 380.609 li
81.0396 375.766 li
85.5036 370.948 li
90.8604 366.089 li
97.11 359.882 li
104.252 353.61 li
121.216 344.82 li
141.75 341.482 li
179.248 338.569 li
208.71 334.887 li
259.6 330.492 li
297.99 331.515 li
362.272 328.753 li
487.264 330.328 li
.397589 .935882 0 0 cmyk
@
grestore
gsave
72 388.8 mo
518.4 388.8 li
518.4 43.2 li
72 43.2 li
72 388.8 li
clp
73.0044 385.967 mo
74.79 383.641 li
77.4684 382.37 li
81.0396 378.658 li
85.5036 375.062 li
90.8604 371.857 li
97.11 366.633 li
104.252 360.861 li
121.216 355.027 li
141.75 353.762 li
179.248 351.86 li
208.71 348.903 li
259.6 346.356 li
297.99 346.5 li
362.272 344.522 li
487.264 345.567 li
.741878 0 .317052 0 cmyk
@
grestore
.5 lw
0 lc
72 388.8 mo
72 384.8 li
1 /0 /CSD get_res sepcs
1 sep
@
72 43.2 mo
72 47.2 li
@
72.7926 393.738 mo
72.1806 393.738 71.7246 394.038 71.4126 394.638 cv
71.1006 395.238 70.9566 396.138 70.9566 397.338 cv
70.9566 398.538 71.1006 399.438 71.4126 400.038 cv
71.7246 400.638 72.1806 400.938 72.7926 400.938 cv
73.4046 400.938 73.8606 400.638 74.1726 400.038 cv
74.4726 399.438 74.6286 398.538 74.6286 397.338 cv
74.6286 396.138 74.4726 395.238 74.1726 394.638 cv
73.8606 394.038 73.4046 393.738 72.7926 393.738 cv
72.7926 392.802 mo
73.7646 392.802 74.5086 393.198 75.0366 393.966 cv
75.5526 394.746 75.8166 395.874 75.8166 397.338 cv
75.8166 398.814 75.5526 399.942 75.0366 400.71 cv
74.5086 401.478 73.7646 401.862 72.7926 401.862 cv
71.8086 401.862 71.0526 401.478 70.5366 400.71 cv
70.0206 399.942 69.7686 398.814 69.7686 397.338 cv
69.7686 395.874 70.0206 394.746 70.5366 393.966 cv
71.0526 393.198 71.8086 392.802 72.7926 392.802 cv
f
127.8 388.8 mo
127.8 384.8 li
@
127.8 43.2 mo
127.8 47.2 li
@
118.494 392.958 mo
123.138 392.958 li
123.138 393.954 li
119.574 393.954 li
119.574 396.102 li
119.742 396.042 119.922 395.994 120.09 395.97 cv
120.258 395.946 120.438 395.922 120.606 395.922 cv
121.578 395.922 122.346 396.198 122.922 396.726 cv
123.498 397.266 123.786 397.986 123.786 398.898 cv
123.786 399.846 123.486 400.578 122.898 401.094 cv
122.31 401.61 121.482 401.862 120.426 401.862 cv
120.054 401.862 119.682 401.826 119.298 401.778 cv
118.914 401.718 118.53 401.634 118.122 401.502 cv
118.122 400.314 li
118.47 400.506 118.83 400.65 119.214 400.746 cv
119.586 400.842 119.982 400.878 120.402 400.878 cv
121.074 400.878 121.614 400.71 122.01 400.35 cv
122.394 399.99 122.598 399.51 122.598 398.898 cv
122.598 398.298 122.394 397.818 122.01 397.458 cv
121.614 397.098 121.074 396.918 120.402 396.918 cv
120.09 396.918 119.766 396.954 119.454 397.026 cv
119.142 397.098 118.818 397.206 118.494 397.35 cv
118.494 392.958 li
f
128.646 393.738 mo
128.034 393.738 127.578 394.038 127.266 394.638 cv
126.954 395.238 126.81 396.138 126.81 397.338 cv
126.81 398.538 126.954 399.438 127.266 400.038 cv
127.578 400.638 128.034 400.938 128.646 400.938 cv
129.258 400.938 129.714 400.638 130.026 400.038 cv
130.326 399.438 130.482 398.538 130.482 397.338 cv
130.482 396.138 130.326 395.238 130.026 394.638 cv
129.714 394.038 129.258 393.738 128.646 393.738 cv
128.646 392.802 mo
129.618 392.802 130.362 393.198 130.89 393.966 cv
131.406 394.746 131.67 395.874 131.67 397.338 cv
131.67 398.814 131.406 399.942 130.89 400.71 cv
130.362 401.478 129.618 401.862 128.646 401.862 cv
127.662 401.862 126.906 401.478 126.39 400.71 cv
125.874 399.942 125.622 398.814 125.622 397.338 cv
125.622 395.874 125.874 394.746 126.39 393.966 cv
126.906 393.198 127.662 392.802 128.646 392.802 cv
f
136.278 393.738 mo
135.666 393.738 135.21 394.038 134.898 394.638 cv
134.586 395.238 134.442 396.138 134.442 397.338 cv
134.442 398.538 134.586 399.438 134.898 400.038 cv
135.21 400.638 135.666 400.938 136.278 400.938 cv
136.89 400.938 137.346 400.638 137.658 400.038 cv
137.958 399.438 138.114 398.538 138.114 397.338 cv
138.114 396.138 137.958 395.238 137.658 394.638 cv
137.346 394.038 136.89 393.738 136.278 393.738 cv
136.278 392.802 mo
137.25 392.802 137.994 393.198 138.522 393.966 cv
139.038 394.746 139.302 395.874 139.302 397.338 cv
139.302 398.814 139.038 399.942 138.522 400.71 cv
137.994 401.478 137.25 401.862 136.278 401.862 cv
135.294 401.862 134.538 401.478 134.022 400.71 cv
133.506 399.942 133.254 398.814 133.254 397.338 cv
133.254 395.874 133.506 394.746 134.022 393.966 cv
134.538 393.198 135.294 392.802 136.278 392.802 cv
f
183.6 388.8 mo
183.6 384.8 li
@
183.6 43.2 mo
183.6 47.2 li
@
170.861 400.71 mo
172.793 400.71 li
172.793 394.038 li
170.693 394.458 li
170.693 393.378 li
172.781 392.958 li
173.969 392.958 li
173.969 400.71 li
175.901 400.71 li
175.901 401.706 li
170.861 401.706 li
170.861 400.71 li
f
180.821 393.738 mo
180.209 393.738 179.753 394.038 179.441 394.638 cv
179.129 395.238 178.985 396.138 178.985 397.338 cv
178.985 398.538 179.129 399.438 179.441 400.038 cv
179.753 400.638 180.209 400.938 180.821 400.938 cv
181.433 400.938 181.889 400.638 182.201 400.038 cv
182.501 399.438 182.657 398.538 182.657 397.338 cv
182.657 396.138 182.501 395.238 182.201 394.638 cv
181.889 394.038 181.433 393.738 180.821 393.738 cv
180.821 392.802 mo
181.793 392.802 182.537 393.198 183.065 393.966 cv
183.581 394.746 183.845 395.874 183.845 397.338 cv
183.845 398.814 183.581 399.942 183.065 400.71 cv
182.537 401.478 181.793 401.862 180.821 401.862 cv
179.837 401.862 179.081 401.478 178.565 400.71 cv
178.049 399.942 177.797 398.814 177.797 397.338 cv
177.797 395.874 178.049 394.746 178.565 393.966 cv
179.081 393.198 179.837 392.802 180.821 392.802 cv
f
188.453 393.738 mo
187.841 393.738 187.385 394.038 187.073 394.638 cv
186.761 395.238 186.617 396.138 186.617 397.338 cv
186.617 398.538 186.761 399.438 187.073 400.038 cv
187.385 400.638 187.841 400.938 188.453 400.938 cv
189.065 400.938 189.521 400.638 189.833 400.038 cv
190.133 399.438 190.289 398.538 190.289 397.338 cv
190.289 396.138 190.133 395.238 189.833 394.638 cv
189.521 394.038 189.065 393.738 188.453 393.738 cv
188.453 392.802 mo
189.425 392.802 190.169 393.198 190.697 393.966 cv
191.213 394.746 191.477 395.874 191.477 397.338 cv
191.477 398.814 191.213 399.942 190.697 400.71 cv
190.169 401.478 189.425 401.862 188.453 401.862 cv
187.469 401.862 186.713 401.478 186.197 400.71 cv
185.681 399.942 185.429 398.814 185.429 397.338 cv
185.429 395.874 185.681 394.746 186.197 393.966 cv
186.713 393.198 187.469 392.802 188.453 392.802 cv
f
196.085 393.738 mo
195.473 393.738 195.018 394.038 194.706 394.638 cv
194.393 395.238 194.249 396.138 194.249 397.338 cv
194.249 398.538 194.393 399.438 194.706 400.038 cv
195.018 400.638 195.473 400.938 196.085 400.938 cv
196.697 400.938 197.154 400.638 197.465 400.038 cv
197.766 399.438 197.921 398.538 197.921 397.338 cv
197.921 396.138 197.766 395.238 197.465 394.638 cv
197.154 394.038 196.697 393.738 196.085 393.738 cv
196.085 392.802 mo
197.057 392.802 197.801 393.198 198.329 393.966 cv
198.846 394.746 199.109 395.874 199.109 397.338 cv
199.109 398.814 198.846 399.942 198.329 400.71 cv
197.801 401.478 197.057 401.862 196.085 401.862 cv
195.102 401.862 194.346 401.478 193.829 400.71 cv
193.314 399.942 193.062 398.814 193.062 397.338 cv
193.062 395.874 193.314 394.746 193.829 393.966 cv
194.346 393.198 195.102 392.802 196.085 392.802 cv
f
239.4 388.8 mo
239.4 384.8 li
@
239.4 43.2 mo
239.4 47.2 li
@
226.661 400.71 mo
228.593 400.71 li
228.593 394.038 li
226.493 394.458 li
226.493 393.378 li
228.581 392.958 li
229.769 392.958 li
229.769 400.71 li
231.701 400.71 li
231.701 401.706 li
226.661 401.706 li
226.661 400.71 li
f
234.101 392.958 mo
238.745 392.958 li
238.745 393.954 li
235.181 393.954 li
235.181 396.102 li
235.349 396.042 235.529 395.994 235.697 395.97 cv
235.865 395.946 236.045 395.922 236.213 395.922 cv
237.185 395.922 237.953 396.198 238.529 396.726 cv
239.105 397.266 239.393 397.986 239.393 398.898 cv
239.393 399.846 239.093 400.578 238.505 401.094 cv
237.917 401.61 237.089 401.862 236.033 401.862 cv
235.661 401.862 235.289 401.826 234.905 401.778 cv
234.521 401.718 234.137 401.634 233.729 401.502 cv
233.729 400.314 li
234.077 400.506 234.437 400.65 234.821 400.746 cv
235.193 400.842 235.589 400.878 236.009 400.878 cv
236.681 400.878 237.221 400.71 237.617 400.35 cv
238.001 399.99 238.205 399.51 238.205 398.898 cv
238.205 398.298 238.001 397.818 237.617 397.458 cv
237.221 397.098 236.681 396.918 236.009 396.918 cv
235.697 396.918 235.373 396.954 235.061 397.026 cv
234.749 397.098 234.425 397.206 234.101 397.35 cv
234.101 392.958 li
f
244.253 393.738 mo
243.641 393.738 243.185 394.038 242.873 394.638 cv
242.561 395.238 242.417 396.138 242.417 397.338 cv
242.417 398.538 242.561 399.438 242.873 400.038 cv
243.185 400.638 243.641 400.938 244.253 400.938 cv
244.865 400.938 245.321 400.638 245.633 400.038 cv
245.933 399.438 246.089 398.538 246.089 397.338 cv
246.089 396.138 245.933 395.238 245.633 394.638 cv
245.321 394.038 244.865 393.738 244.253 393.738 cv
244.253 392.802 mo
245.225 392.802 245.969 393.198 246.497 393.966 cv
247.013 394.746 247.277 395.874 247.277 397.338 cv
247.277 398.814 247.013 399.942 246.497 400.71 cv
245.969 401.478 245.225 401.862 244.253 401.862 cv
243.269 401.862 242.513 401.478 241.997 400.71 cv
241.481 399.942 241.229 398.814 241.229 397.338 cv
241.229 395.874 241.481 394.746 241.997 393.966 cv
242.513 393.198 243.269 392.802 244.253 392.802 cv
f
251.885 393.738 mo
251.273 393.738 250.817 394.038 250.505 394.638 cv
250.193 395.238 250.049 396.138 250.049 397.338 cv
250.049 398.538 250.193 399.438 250.505 400.038 cv
250.817 400.638 251.273 400.938 251.885 400.938 cv
252.497 400.938 252.953 400.638 253.265 400.038 cv
253.565 399.438 253.721 398.538 253.721 397.338 cv
253.721 396.138 253.565 395.238 253.265 394.638 cv
252.953 394.038 252.497 393.738 251.885 393.738 cv
251.885 392.802 mo
252.857 392.802 253.601 393.198 254.129 393.966 cv
254.645 394.746 254.909 395.874 254.909 397.338 cv
254.909 398.814 254.645 399.942 254.129 400.71 cv
253.601 401.478 252.857 401.862 251.885 401.862 cv
250.901 401.862 250.145 401.478 249.629 400.71 cv
249.113 399.942 248.861 398.814 248.861 397.338 cv
248.861 395.874 249.113 394.746 249.629 393.966 cv
250.145 393.198 250.901 392.802 251.885 392.802 cv
f
295.2 388.8 mo
295.2 384.8 li
@
295.2 43.2 mo
295.2 47.2 li
@
283.059 400.71 mo
287.187 400.71 li
287.187 401.706 li
281.631 401.706 li
281.631 400.71 li
282.075 400.254 282.687 399.63 283.467 398.838 cv
284.235 398.058 284.727 397.554 284.931 397.326 cv
285.315 396.906 285.579 396.546 285.723 396.246 cv
285.867 395.958 285.951 395.658 285.951 395.37 cv
285.951 394.914 285.783 394.53 285.459 394.242 cv
285.135 393.954 284.715 393.798 284.187 393.798 cv
283.815 393.798 283.419 393.87 283.011 393.99 cv
282.603 394.122 282.159 394.314 281.691 394.578 cv
281.691 393.378 li
282.171 393.186 282.615 393.042 283.023 392.946 cv
283.431 392.85 283.815 392.802 284.163 392.802 cv
285.063 392.802 285.783 393.03 286.323 393.486 cv
286.863 393.942 287.139 394.542 287.139 395.298 cv
287.139 395.658 287.067 396.006 286.935 396.318 cv
286.803 396.642 286.563 397.026 286.203 397.458 cv
286.107 397.578 285.795 397.902 285.267 398.442 cv
284.739 398.982 284.007 399.738 283.059 400.71 cv
f
292.203 393.738 mo
291.591 393.738 291.135 394.038 290.823 394.638 cv
290.511 395.238 290.367 396.138 290.367 397.338 cv
290.367 398.538 290.511 399.438 290.823 400.038 cv
291.135 400.638 291.591 400.938 292.203 400.938 cv
292.815 400.938 293.271 400.638 293.583 400.038 cv
293.883 399.438 294.039 398.538 294.039 397.338 cv
294.039 396.138 293.883 395.238 293.583 394.638 cv
293.271 394.038 292.815 393.738 292.203 393.738 cv
292.203 392.802 mo
293.175 392.802 293.919 393.198 294.447 393.966 cv
294.963 394.746 295.227 395.874 295.227 397.338 cv
295.227 398.814 294.963 399.942 294.447 400.71 cv
293.919 401.478 293.175 401.862 292.203 401.862 cv
291.219 401.862 290.463 401.478 289.947 400.71 cv
289.431 399.942 289.179 398.814 289.179 397.338 cv
289.179 395.874 289.431 394.746 289.947 393.966 cv
290.463 393.198 291.219 392.802 292.203 392.802 cv
f
299.835 393.738 mo
299.223 393.738 298.767 394.038 298.455 394.638 cv
298.143 395.238 297.999 396.138 297.999 397.338 cv
297.999 398.538 298.143 399.438 298.455 400.038 cv
298.767 400.638 299.223 400.938 299.835 400.938 cv
300.447 400.938 300.903 400.638 301.215 400.038 cv
301.515 399.438 301.671 398.538 301.671 397.338 cv
301.671 396.138 301.515 395.238 301.215 394.638 cv
300.903 394.038 300.447 393.738 299.835 393.738 cv
299.835 392.802 mo
300.807 392.802 301.551 393.198 302.079 393.966 cv
302.595 394.746 302.859 395.874 302.859 397.338 cv
302.859 398.814 302.595 399.942 302.079 400.71 cv
301.551 401.478 300.807 401.862 299.835 401.862 cv
298.851 401.862 298.095 401.478 297.579 400.71 cv
297.063 399.942 296.811 398.814 296.811 397.338 cv
296.811 395.874 297.063 394.746 297.579 393.966 cv
298.095 393.198 298.851 392.802 299.835 392.802 cv
f
307.467 393.738 mo
306.855 393.738 306.399 394.038 306.087 394.638 cv
305.775 395.238 305.631 396.138 305.631 397.338 cv
305.631 398.538 305.775 399.438 306.087 400.038 cv
306.399 400.638 306.855 400.938 307.467 400.938 cv
308.079 400.938 308.535 400.638 308.847 400.038 cv
309.147 399.438 309.303 398.538 309.303 397.338 cv
309.303 396.138 309.147 395.238 308.847 394.638 cv
308.535 394.038 308.079 393.738 307.467 393.738 cv
307.467 392.802 mo
308.439 392.802 309.183 393.198 309.711 393.966 cv
310.227 394.746 310.491 395.874 310.491 397.338 cv
310.491 398.814 310.227 399.942 309.711 400.71 cv
309.183 401.478 308.439 401.862 307.467 401.862 cv
306.483 401.862 305.727 401.478 305.211 400.71 cv
304.695 399.942 304.443 398.814 304.443 397.338 cv
304.443 395.874 304.695 394.746 305.211 393.966 cv
305.727 393.198 306.483 392.802 307.467 392.802 cv
f
351 388.8 mo
351 384.8 li
@
351 43.2 mo
351 47.2 li
@
338.859 400.71 mo
342.987 400.71 li
342.987 401.706 li
337.431 401.706 li
337.431 400.71 li
337.875 400.254 338.487 399.63 339.267 398.838 cv
340.035 398.058 340.527 397.554 340.731 397.326 cv
341.115 396.906 341.379 396.546 341.523 396.246 cv
341.667 395.958 341.751 395.658 341.751 395.37 cv
341.751 394.914 341.583 394.53 341.259 394.242 cv
340.935 393.954 340.515 393.798 339.987 393.798 cv
339.615 393.798 339.219 393.87 338.811 393.99 cv
338.403 394.122 337.959 394.314 337.491 394.578 cv
337.491 393.378 li
337.971 393.186 338.415 393.042 338.823 392.946 cv
339.231 392.85 339.615 392.802 339.963 392.802 cv
340.863 392.802 341.583 393.03 342.123 393.486 cv
342.663 393.942 342.939 394.542 342.939 395.298 cv
342.939 395.658 342.867 396.006 342.735 396.318 cv
342.603 396.642 342.363 397.026 342.003 397.458 cv
341.907 397.578 341.595 397.902 341.067 398.442 cv
340.539 398.982 339.807 399.738 338.859 400.71 cv
f
345.483 392.958 mo
350.127 392.958 li
350.127 393.954 li
346.563 393.954 li
346.563 396.102 li
346.731 396.042 346.911 395.994 347.079 395.97 cv
347.247 395.946 347.427 395.922 347.595 395.922 cv
348.567 395.922 349.335 396.198 349.911 396.726 cv
350.487 397.266 350.775 397.986 350.775 398.898 cv
350.775 399.846 350.475 400.578 349.887 401.094 cv
349.299 401.61 348.471 401.862 347.415 401.862 cv
347.043 401.862 346.671 401.826 346.287 401.778 cv
345.903 401.718 345.519 401.634 345.111 401.502 cv
345.111 400.314 li
345.459 400.506 345.819 400.65 346.203 400.746 cv
346.575 400.842 346.971 400.878 347.391 400.878 cv
348.063 400.878 348.603 400.71 348.999 400.35 cv
349.383 399.99 349.587 399.51 349.587 398.898 cv
349.587 398.298 349.383 397.818 348.999 397.458 cv
348.603 397.098 348.063 396.918 347.391 396.918 cv
347.079 396.918 346.755 396.954 346.443 397.026 cv
346.131 397.098 345.807 397.206 345.483 397.35 cv
345.483 392.958 li
f
355.635 393.738 mo
355.023 393.738 354.567 394.038 354.255 394.638 cv
353.943 395.238 353.799 396.138 353.799 397.338 cv
353.799 398.538 353.943 399.438 354.255 400.038 cv
354.567 400.638 355.023 400.938 355.635 400.938 cv
356.247 400.938 356.703 400.638 357.015 400.038 cv
357.315 399.438 357.471 398.538 357.471 397.338 cv
357.471 396.138 357.315 395.238 357.015 394.638 cv
356.703 394.038 356.247 393.738 355.635 393.738 cv
355.635 392.802 mo
356.607 392.802 357.351 393.198 357.879 393.966 cv
358.395 394.746 358.659 395.874 358.659 397.338 cv
358.659 398.814 358.395 399.942 357.879 400.71 cv
357.351 401.478 356.607 401.862 355.635 401.862 cv
354.651 401.862 353.895 401.478 353.379 400.71 cv
352.863 399.942 352.611 398.814 352.611 397.338 cv
352.611 395.874 352.863 394.746 353.379 393.966 cv
353.895 393.198 354.651 392.802 355.635 392.802 cv
f
363.267 393.738 mo
362.655 393.738 362.199 394.038 361.887 394.638 cv
361.575 395.238 361.431 396.138 361.431 397.338 cv
361.431 398.538 361.575 399.438 361.887 400.038 cv
362.199 400.638 362.655 400.938 363.267 400.938 cv
363.879 400.938 364.335 400.638 364.647 400.038 cv
364.947 399.438 365.103 398.538 365.103 397.338 cv
365.103 396.138 364.947 395.238 364.647 394.638 cv
364.335 394.038 363.879 393.738 363.267 393.738 cv
363.267 392.802 mo
364.239 392.802 364.983 393.198 365.511 393.966 cv
366.027 394.746 366.291 395.874 366.291 397.338 cv
366.291 398.814 366.027 399.942 365.511 400.71 cv
364.983 401.478 364.239 401.862 363.267 401.862 cv
362.283 401.862 361.527 401.478 361.011 400.71 cv
360.495 399.942 360.243 398.814 360.243 397.338 cv
360.243 395.874 360.495 394.746 361.011 393.966 cv
361.527 393.198 362.283 392.802 363.267 392.802 cv
f
406.8 388.8 mo
406.8 384.8 li
@
406.8 43.2 mo
406.8 47.2 li
@
397.25 396.99 mo
397.814 397.11 398.258 397.362 398.57 397.746 cv
398.882 398.13 399.05 398.61 399.05 399.162 cv
399.05 400.026 398.75 400.698 398.162 401.166 cv
397.562 401.634 396.722 401.862 395.63 401.862 cv
395.258 401.862 394.874 401.826 394.49 401.754 cv
394.106 401.694 393.698 401.586 393.29 401.442 cv
393.29 400.302 li
393.614 400.494 393.974 400.638 394.37 400.734 cv
394.754 400.83 395.162 400.878 395.594 400.878 cv
396.338 400.878 396.902 400.734 397.286 400.446 cv
397.67 400.158 397.874 399.726 397.874 399.162 cv
397.874 398.658 397.694 398.25 397.334 397.962 cv
396.974 397.674 396.47 397.518 395.822 397.518 cv
394.802 397.518 li
394.802 396.546 li
395.87 396.546 li
396.446 396.546 396.89 396.438 397.202 396.198 cv
397.514 395.97 397.67 395.634 397.67 395.19 cv
397.67 394.746 397.502 394.398 397.19 394.158 cv
396.866 393.918 396.41 393.798 395.822 393.798 cv
395.498 393.798 395.15 393.834 394.778 393.906 cv
394.406 393.978 393.998 394.086 393.554 394.23 cv
393.554 393.174 li
393.998 393.054 394.418 392.958 394.814 392.898 cv
395.198 392.838 395.57 392.802 395.93 392.802 cv
396.818 392.802 397.526 393.006 398.054 393.414 cv
398.582 393.822 398.846 394.374 398.846 395.07 cv
398.846 395.55 398.702 395.958 398.426 396.294 cv
398.15 396.63 397.754 396.87 397.25 396.99 cv
f
403.826 393.738 mo
403.214 393.738 402.758 394.038 402.446 394.638 cv
402.134 395.238 401.99 396.138 401.99 397.338 cv
401.99 398.538 402.134 399.438 402.446 400.038 cv
402.758 400.638 403.214 400.938 403.826 400.938 cv
404.438 400.938 404.894 400.638 405.206 400.038 cv
405.506 399.438 405.662 398.538 405.662 397.338 cv
405.662 396.138 405.506 395.238 405.206 394.638 cv
404.894 394.038 404.438 393.738 403.826 393.738 cv
403.826 392.802 mo
404.798 392.802 405.542 393.198 406.07 393.966 cv
406.586 394.746 406.85 395.874 406.85 397.338 cv
406.85 398.814 406.586 399.942 406.07 400.71 cv
405.542 401.478 404.798 401.862 403.826 401.862 cv
402.842 401.862 402.086 401.478 401.57 400.71 cv
401.054 399.942 400.802 398.814 400.802 397.338 cv
400.802 395.874 401.054 394.746 401.57 393.966 cv
402.086 393.198 402.842 392.802 403.826 392.802 cv
f
411.458 393.738 mo
410.846 393.738 410.39 394.038 410.078 394.638 cv
409.766 395.238 409.622 396.138 409.622 397.338 cv
409.622 398.538 409.766 399.438 410.078 400.038 cv
410.39 400.638 410.846 400.938 411.458 400.938 cv
412.07 400.938 412.526 400.638 412.838 400.038 cv
413.138 399.438 413.294 398.538 413.294 397.338 cv
413.294 396.138 413.138 395.238 412.838 394.638 cv
412.526 394.038 412.07 393.738 411.458 393.738 cv
411.458 392.802 mo
412.43 392.802 413.174 393.198 413.702 393.966 cv
414.218 394.746 414.482 395.874 414.482 397.338 cv
414.482 398.814 414.218 399.942 413.702 400.71 cv
413.174 401.478 412.43 401.862 411.458 401.862 cv
410.474 401.862 409.718 401.478 409.202 400.71 cv
408.686 399.942 408.434 398.814 408.434 397.338 cv
408.434 395.874 408.686 394.746 409.202 393.966 cv
409.718 393.198 410.474 392.802 411.458 392.802 cv
f
419.09 393.738 mo
418.478 393.738 418.022 394.038 417.71 394.638 cv
417.398 395.238 417.254 396.138 417.254 397.338 cv
417.254 398.538 417.398 399.438 417.71 400.038 cv
418.022 400.638 418.478 400.938 419.09 400.938 cv
419.702 400.938 420.158 400.638 420.47 400.038 cv
420.77 399.438 420.926 398.538 420.926 397.338 cv
420.926 396.138 420.77 395.238 420.47 394.638 cv
420.158 394.038 419.702 393.738 419.09 393.738 cv
419.09 392.802 mo
420.062 392.802 420.806 393.198 421.334 393.966 cv
421.85 394.746 422.114 395.874 422.114 397.338 cv
422.114 398.814 421.85 399.942 421.334 400.71 cv
420.806 401.478 420.062 401.862 419.09 401.862 cv
418.106 401.862 417.35 401.478 416.834 400.71 cv
416.318 399.942 416.066 398.814 416.066 397.338 cv
416.066 395.874 416.318 394.746 416.834 393.966 cv
417.35 393.198 418.106 392.802 419.09 392.802 cv
f
462.6 388.8 mo
462.6 384.8 li
@
462.6 43.2 mo
462.6 47.2 li
@
453.05 396.99 mo
453.614 397.11 454.058 397.362 454.37 397.746 cv
454.682 398.13 454.85 398.61 454.85 399.162 cv
454.85 400.026 454.55 400.698 453.962 401.166 cv
453.362 401.634 452.522 401.862 451.43 401.862 cv
451.058 401.862 450.674 401.826 450.29 401.754 cv
449.906 401.694 449.498 401.586 449.09 401.442 cv
449.09 400.302 li
449.414 400.494 449.774 400.638 450.17 400.734 cv
450.554 400.83 450.962 400.878 451.394 400.878 cv
452.138 400.878 452.702 400.734 453.086 400.446 cv
453.47 400.158 453.674 399.726 453.674 399.162 cv
453.674 398.658 453.494 398.25 453.134 397.962 cv
452.774 397.674 452.27 397.518 451.622 397.518 cv
450.602 397.518 li
450.602 396.546 li
451.67 396.546 li
452.246 396.546 452.69 396.438 453.002 396.198 cv
453.314 395.97 453.47 395.634 453.47 395.19 cv
453.47 394.746 453.302 394.398 452.99 394.158 cv
452.666 393.918 452.21 393.798 451.622 393.798 cv
451.298 393.798 450.95 393.834 450.578 393.906 cv
450.206 393.978 449.798 394.086 449.354 394.23 cv
449.354 393.174 li
449.798 393.054 450.218 392.958 450.614 392.898 cv
450.998 392.838 451.37 392.802 451.73 392.802 cv
452.618 392.802 453.326 393.006 453.854 393.414 cv
454.382 393.822 454.646 394.374 454.646 395.07 cv
454.646 395.55 454.502 395.958 454.226 396.294 cv
453.95 396.63 453.554 396.87 453.05 396.99 cv
f
457.106 392.958 mo
461.75 392.958 li
461.75 393.954 li
458.186 393.954 li
458.186 396.102 li
458.354 396.042 458.534 395.994 458.702 395.97 cv
458.87 395.946 459.05 395.922 459.218 395.922 cv
460.19 395.922 460.958 396.198 461.534 396.726 cv
462.11 397.266 462.398 397.986 462.398 398.898 cv
462.398 399.846 462.098 400.578 461.51 401.094 cv
460.922 401.61 460.094 401.862 459.038 401.862 cv
458.666 401.862 458.294 401.826 457.91 401.778 cv
457.526 401.718 457.142 401.634 456.734 401.502 cv
456.734 400.314 li
457.082 400.506 457.442 400.65 457.826 400.746 cv
458.198 400.842 458.594 400.878 459.014 400.878 cv
459.686 400.878 460.226 400.71 460.622 400.35 cv
461.006 399.99 461.21 399.51 461.21 398.898 cv
461.21 398.298 461.006 397.818 460.622 397.458 cv
460.226 397.098 459.686 396.918 459.014 396.918 cv
458.702 396.918 458.378 396.954 458.066 397.026 cv
457.754 397.098 457.43 397.206 457.106 397.35 cv
457.106 392.958 li
f
467.258 393.738 mo
466.646 393.738 466.19 394.038 465.878 394.638 cv
465.566 395.238 465.422 396.138 465.422 397.338 cv
465.422 398.538 465.566 399.438 465.878 400.038 cv
466.19 400.638 466.646 400.938 467.258 400.938 cv
467.87 400.938 468.326 400.638 468.638 400.038 cv
468.938 399.438 469.094 398.538 469.094 397.338 cv
469.094 396.138 468.938 395.238 468.638 394.638 cv
468.326 394.038 467.87 393.738 467.258 393.738 cv
467.258 392.802 mo
468.23 392.802 468.974 393.198 469.502 393.966 cv
470.018 394.746 470.282 395.874 470.282 397.338 cv
470.282 398.814 470.018 399.942 469.502 400.71 cv
468.974 401.478 468.23 401.862 467.258 401.862 cv
466.274 401.862 465.518 401.478 465.002 400.71 cv
464.486 399.942 464.234 398.814 464.234 397.338 cv
464.234 395.874 464.486 394.746 465.002 393.966 cv
465.518 393.198 466.274 392.802 467.258 392.802 cv
f
474.89 393.738 mo
474.278 393.738 473.822 394.038 473.51 394.638 cv
473.198 395.238 473.054 396.138 473.054 397.338 cv
473.054 398.538 473.198 399.438 473.51 400.038 cv
473.822 400.638 474.278 400.938 474.89 400.938 cv
475.502 400.938 475.958 400.638 476.27 400.038 cv
476.57 399.438 476.726 398.538 476.726 397.338 cv
476.726 396.138 476.57 395.238 476.27 394.638 cv
475.958 394.038 475.502 393.738 474.89 393.738 cv
474.89 392.802 mo
475.862 392.802 476.606 393.198 477.134 393.966 cv
477.65 394.746 477.914 395.874 477.914 397.338 cv
477.914 398.814 477.65 399.942 477.134 400.71 cv
476.606 401.478 475.862 401.862 474.89 401.862 cv
473.906 401.862 473.15 401.478 472.634 400.71 cv
472.118 399.942 471.866 398.814 471.866 397.338 cv
471.866 395.874 472.118 394.746 472.634 393.966 cv
473.15 393.198 473.906 392.802 474.89 392.802 cv
f
518.4 388.8 mo
518.4 384.8 li
@
518.4 43.2 mo
518.4 47.2 li
@
508.35 393.99 mo
505.362 398.658 li
508.35 398.658 li
508.35 393.99 li
508.038 392.958 mo
509.526 392.958 li
509.526 398.658 li
510.774 398.658 li
510.774 399.642 li
509.526 399.642 li
509.526 401.706 li
508.35 401.706 li
508.35 399.642 li
504.402 399.642 li
504.402 398.502 li
508.038 392.958 li
f
515.262 393.738 mo
514.65 393.738 514.194 394.038 513.882 394.638 cv
513.57 395.238 513.426 396.138 513.426 397.338 cv
513.426 398.538 513.57 399.438 513.882 400.038 cv
514.194 400.638 514.65 400.938 515.262 400.938 cv
515.874 400.938 516.33 400.638 516.642 400.038 cv
516.942 399.438 517.098 398.538 517.098 397.338 cv
517.098 396.138 516.942 395.238 516.642 394.638 cv
516.33 394.038 515.874 393.738 515.262 393.738 cv
515.262 392.802 mo
516.234 392.802 516.978 393.198 517.506 393.966 cv
518.022 394.746 518.286 395.874 518.286 397.338 cv
518.286 398.814 518.022 399.942 517.506 400.71 cv
516.978 401.478 516.234 401.862 515.262 401.862 cv
514.278 401.862 513.522 401.478 513.006 400.71 cv
512.49 399.942 512.238 398.814 512.238 397.338 cv
512.238 395.874 512.49 394.746 513.006 393.966 cv
513.522 393.198 514.278 392.802 515.262 392.802 cv
f
522.894 393.738 mo
522.282 393.738 521.826 394.038 521.514 394.638 cv
521.202 395.238 521.058 396.138 521.058 397.338 cv
521.058 398.538 521.202 399.438 521.514 400.038 cv
521.826 400.638 522.282 400.938 522.894 400.938 cv
523.506 400.938 523.962 400.638 524.274 400.038 cv
524.574 399.438 524.73 398.538 524.73 397.338 cv
524.73 396.138 524.574 395.238 524.274 394.638 cv
523.962 394.038 523.506 393.738 522.894 393.738 cv
522.894 392.802 mo
523.866 392.802 524.61 393.198 525.138 393.966 cv
525.654 394.746 525.918 395.874 525.918 397.338 cv
525.918 398.814 525.654 399.942 525.138 400.71 cv
524.61 401.478 523.866 401.862 522.894 401.862 cv
521.91 401.862 521.154 401.478 520.638 400.71 cv
520.122 399.942 519.87 398.814 519.87 397.338 cv
519.87 395.874 520.122 394.746 520.638 393.966 cv
521.154 393.198 521.91 392.802 522.894 392.802 cv
f
530.526 393.738 mo
529.914 393.738 529.458 394.038 529.146 394.638 cv
528.834 395.238 528.69 396.138 528.69 397.338 cv
528.69 398.538 528.834 399.438 529.146 400.038 cv
529.458 400.638 529.914 400.938 530.526 400.938 cv
531.138 400.938 531.594 400.638 531.906 400.038 cv
532.206 399.438 532.362 398.538 532.362 397.338 cv
532.362 396.138 532.206 395.238 531.906 394.638 cv
531.594 394.038 531.138 393.738 530.526 393.738 cv
530.526 392.802 mo
531.498 392.802 532.242 393.198 532.77 393.966 cv
533.286 394.746 533.55 395.874 533.55 397.338 cv
533.55 398.814 533.286 399.942 532.77 400.71 cv
532.242 401.478 531.498 401.862 530.526 401.862 cv
529.542 401.862 528.786 401.478 528.27 400.71 cv
527.754 399.942 527.502 398.814 527.502 397.338 cv
527.502 395.874 527.754 394.746 528.27 393.966 cv
528.786 393.198 529.542 392.802 530.526 392.802 cv
f
190.573 407.203 mo
192.871 407.203 li
198.453 417.744 li
198.453 407.203 li
200.112 407.203 li
200.112 419.8 li
197.813 419.8 li
192.232 409.259 li
192.232 419.8 li
190.573 419.8 li
190.573 407.203 li
f
203.274 416.068 mo
203.274 410.348 li
204.829 410.348 li
204.829 416.016 li
204.829 416.914 205.002 417.571 205.348 418.02 cv
205.693 418.469 206.212 418.694 206.92 418.694 cv
207.749 418.694 208.423 418.435 208.907 417.899 cv
209.391 417.363 209.633 416.638 209.633 415.705 cv
209.633 410.348 li
211.188 410.348 li
211.188 419.8 li
209.633 419.8 li
209.633 418.348 li
209.253 418.936 208.804 419.351 208.32 419.627 cv
207.819 419.886 207.248 420.025 206.592 420.025 cv
205.503 420.025 204.674 419.696 204.121 419.022 cv
203.55 418.366 203.274 417.381 203.274 416.068 cv
f
221.746 412.162 mo
222.126 411.471 222.593 410.97 223.129 410.624 cv
223.664 410.296 224.304 410.123 225.047 410.123 cv
226.014 410.123 226.775 410.469 227.31 411.16 cv
227.846 411.851 228.123 412.836 228.123 414.098 cv
228.123 419.8 li
226.567 419.8 li
226.567 414.149 li
226.567 413.251 226.395 412.577 226.084 412.128 cv
225.755 411.696 225.271 411.471 224.615 411.471 cv
223.803 411.471 223.163 411.747 222.697 412.283 cv
222.23 412.819 222.006 413.545 222.006 414.46 cv
222.006 419.8 li
220.45 419.8 li
220.45 414.149 li
220.45 413.251 220.278 412.577 219.966 412.128 cv
219.638 411.696 219.137 411.471 218.48 411.471 cv
217.686 411.471 217.046 411.747 216.58 412.283 cv
216.113 412.819 215.888 413.545 215.888 414.46 cv
215.888 419.8 li
214.333 419.8 li
214.333 410.348 li
215.888 410.348 li
215.888 411.817 li
216.234 411.246 216.666 410.814 217.167 410.538 cv
217.651 410.261 218.238 410.123 218.93 410.123 cv
219.621 410.123 220.191 410.296 220.675 410.642 cv
221.159 410.987 221.504 411.506 221.746 412.162 cv
f
238.007 415.083 mo
238.007 413.942 237.765 413.061 237.298 412.404 cv
236.814 411.747 236.175 411.419 235.363 411.419 cv
234.533 411.419 233.894 411.747 233.428 412.404 cv
232.944 413.061 232.719 413.942 232.719 415.083 cv
232.719 416.223 232.944 417.122 233.428 417.778 cv
233.894 418.435 234.533 418.746 235.363 418.746 cv
236.175 418.746 236.814 418.435 237.298 417.778 cv
237.765 417.122 238.007 416.223 238.007 415.083 cv
232.719 411.782 mo
233.03 411.229 233.445 410.814 233.946 410.538 cv
234.447 410.261 235.052 410.123 235.743 410.123 cv
236.884 410.123 237.817 410.59 238.542 411.488 cv
239.251 412.404 239.614 413.596 239.614 415.083 cv
239.614 416.569 239.251 417.778 238.542 418.677 cv
237.817 419.575 236.884 420.025 235.743 420.025 cv
235.052 420.025 234.447 419.886 233.946 419.627 cv
233.445 419.368 233.03 418.953 232.719 418.383 cv
232.719 419.8 li
231.164 419.8 li
231.164 406.667 li
232.719 406.667 li
232.719 411.782 li
f
250.275 414.685 mo
250.275 415.445 li
243.139 415.445 li
243.208 416.517 243.519 417.346 244.107 417.899 cv
244.677 418.452 245.472 418.729 246.508 418.729 cv
247.096 418.729 247.683 418.66 248.236 418.521 cv
248.789 418.383 249.36 418.158 249.913 417.847 cv
249.913 419.316 li
249.36 419.558 248.789 419.748 248.202 419.852 cv
247.614 419.956 247.01 420.025 246.422 420.025 cv
244.901 420.025 243.709 419.593 242.828 418.729 cv
241.947 417.865 241.515 416.672 241.515 415.169 cv
241.515 413.631 241.929 412.404 242.759 411.488 cv
243.588 410.59 244.729 410.123 246.146 410.123 cv
247.424 410.123 248.427 410.538 249.17 411.35 cv
249.895 412.18 250.275 413.285 250.275 414.685 cv
248.72 414.236 mo
248.703 413.389 248.461 412.715 248.012 412.197 cv
247.545 411.696 246.923 411.436 246.163 411.436 cv
245.299 411.436 244.608 411.696 244.089 412.18 cv
243.571 412.663 243.26 413.355 243.191 414.236 cv
248.72 414.236 li
f
258.293 411.799 mo
258.121 411.696 257.931 411.627 257.723 411.575 cv
257.516 411.54 257.291 411.506 257.049 411.506 cv
256.168 411.506 255.494 411.799 255.028 412.37 cv
254.544 412.94 254.319 413.752 254.319 414.823 cv
254.319 419.8 li
252.764 419.8 li
252.764 410.348 li
254.319 410.348 li
254.319 411.817 li
254.63 411.246 255.062 410.814 255.581 410.538 cv
256.099 410.261 256.738 410.123 257.499 410.123 cv
257.602 410.123 257.723 410.14 257.861 410.14 cv
257.982 410.158 258.121 410.175 258.293 410.21 cv
258.293 411.799 li
f
269.076 411.436 mo
268.247 411.436 267.59 411.765 267.106 412.421 cv
266.622 413.078 266.38 413.959 266.38 415.083 cv
266.38 416.223 266.605 417.104 267.089 417.761 cv
267.573 418.418 268.229 418.729 269.076 418.729 cv
269.905 418.729 270.562 418.418 271.046 417.761 cv
271.53 417.104 271.772 416.223 271.772 415.083 cv
271.772 413.977 271.53 413.078 271.046 412.421 cv
270.562 411.765 269.905 411.436 269.076 411.436 cv
269.076 410.123 mo
270.424 410.123 271.478 410.572 272.256 411.436 cv
273.016 412.318 273.413 413.527 273.413 415.083 cv
273.413 416.638 273.016 417.847 272.256 418.711 cv
271.478 419.593 270.424 420.025 269.076 420.025 cv
267.711 420.025 266.64 419.593 265.879 418.711 cv
265.119 417.847 264.739 416.638 264.739 415.083 cv
264.739 413.527 265.119 412.318 265.879 411.436 cv
266.64 410.572 267.711 410.123 269.076 410.123 cv
f
280.775 406.667 mo
280.775 407.963 li
279.289 407.963 li
278.736 407.963 278.338 408.084 278.131 408.309 cv
277.906 408.533 277.802 408.931 277.802 409.518 cv
277.802 410.348 li
280.36 410.348 li
280.36 411.557 li
277.802 411.557 li
277.802 419.8 li
276.247 419.8 li
276.247 411.557 li
274.761 411.557 li
274.761 410.348 li
276.247 410.348 li
276.247 409.691 li
276.247 408.654 276.489 407.877 276.973 407.393 cv
277.457 406.909 278.234 406.667 279.306 406.667 cv
280.775 406.667 li
f
289.345 408.603 mo
289.345 413.337 li
291.488 413.337 li
292.283 413.337 292.888 413.147 293.32 412.732 cv
293.752 412.318 293.976 411.73 293.976 410.97 cv
293.976 410.21 293.752 409.639 293.32 409.225 cv
292.888 408.81 292.283 408.603 291.488 408.603 cv
289.345 408.603 li
287.635 407.203 mo
291.488 407.203 li
292.888 407.203 293.959 407.531 294.685 408.171 cv
295.411 408.81 295.774 409.743 295.774 410.97 cv
295.774 412.214 295.411 413.164 294.685 413.787 cv
293.959 414.426 292.888 414.737 291.488 414.737 cv
289.345 414.737 li
289.345 419.8 li
287.635 419.8 li
287.635 407.203 li
f
301.649 411.436 mo
300.819 411.436 300.163 411.765 299.679 412.421 cv
299.195 413.078 298.953 413.959 298.953 415.083 cv
298.953 416.223 299.178 417.104 299.662 417.761 cv
300.145 418.418 300.802 418.729 301.649 418.729 cv
302.478 418.729 303.135 418.418 303.619 417.761 cv
304.103 417.104 304.344 416.223 304.344 415.083 cv
304.344 413.977 304.103 413.078 303.619 412.421 cv
303.135 411.765 302.478 411.436 301.649 411.436 cv
301.649 410.123 mo
302.997 410.123 304.051 410.572 304.828 411.436 cv
305.589 412.318 305.986 413.527 305.986 415.083 cv
305.986 416.638 305.589 417.847 304.828 418.711 cv
304.051 419.593 302.997 420.025 301.649 420.025 cv
300.284 420.025 299.212 419.593 298.452 418.711 cv
297.692 417.847 297.311 416.638 297.311 415.083 cv
297.311 413.527 297.692 412.318 298.452 411.436 cv
299.212 410.572 300.284 410.123 301.649 410.123 cv
f
308.561 410.348 mo
310.116 410.348 li
310.116 419.8 li
308.561 419.8 li
308.561 410.348 li
308.561 406.667 mo
310.116 406.667 li
310.116 408.637 li
308.561 408.637 li
308.561 406.667 li
f
321.227 414.098 mo
321.227 419.8 li
319.672 419.8 li
319.672 414.149 li
319.672 413.251 319.482 412.594 319.136 412.145 cv
318.79 411.696 318.272 411.471 317.581 411.471 cv
316.734 411.471 316.078 411.747 315.594 412.283 cv
315.11 412.819 314.868 413.545 314.868 414.46 cv
314.868 419.8 li
313.313 419.8 li
313.313 410.348 li
314.868 410.348 li
314.868 411.817 li
315.231 411.264 315.663 410.832 316.181 410.555 cv
316.682 410.279 317.27 410.123 317.926 410.123 cv
318.998 410.123 319.827 410.469 320.38 411.143 cv
320.933 411.817 321.227 412.802 321.227 414.098 cv
f
325.858 407.669 mo
325.858 410.348 li
329.055 410.348 li
329.055 411.557 li
325.858 411.557 li
325.858 416.69 li
325.858 417.467 325.962 417.968 326.169 418.176 cv
326.376 418.4 326.808 418.504 327.465 418.504 cv
329.055 418.504 li
329.055 419.8 li
327.465 419.8 li
326.255 419.8 325.426 419.575 324.977 419.126 cv
324.527 418.677 324.303 417.865 324.303 416.69 cv
324.303 411.557 li
323.162 411.557 li
323.162 410.348 li
324.303 410.348 li
324.303 407.669 li
325.858 407.669 li
f
344.209 407.618 mo
344.209 409.276 li
343.553 408.965 342.948 408.741 342.378 408.585 cv
341.79 408.447 341.237 408.361 340.719 408.361 cv
339.786 408.361 339.06 408.551 338.559 408.896 cv
338.058 409.259 337.816 409.778 337.816 410.434 cv
337.816 410.987 337.971 411.419 338.317 411.696 cv
338.645 411.989 339.284 412.214 340.218 412.387 cv
341.254 412.594 li
342.516 412.836 343.449 413.268 344.054 413.873 cv
344.659 414.495 344.97 415.307 344.97 416.327 cv
344.97 417.554 344.555 418.469 343.743 419.092 cv
342.913 419.714 341.721 420.025 340.148 420.025 cv
339.544 420.025 338.904 419.956 338.23 419.835 cv
337.556 419.714 336.865 419.523 336.157 419.247 cv
336.157 417.484 li
336.848 417.882 337.522 418.176 338.179 418.366 cv
338.835 418.573 339.492 418.66 340.148 418.66 cv
341.116 418.66 341.859 418.469 342.395 418.089 cv
342.913 417.709 343.19 417.173 343.19 416.448 cv
343.19 415.826 343 415.342 342.62 414.996 cv
342.239 414.651 341.617 414.391 340.753 414.219 cv
339.716 414.011 li
338.438 413.769 337.522 413.372 336.952 412.819 cv
336.381 412.283 336.105 411.54 336.105 410.572 cv
336.105 409.467 336.485 408.585 337.28 407.946 cv
338.058 407.307 339.146 406.978 340.529 406.978 cv
341.116 406.978 341.704 407.03 342.326 407.134 cv
342.931 407.237 343.553 407.41 344.209 407.618 cv
f
351.225 411.436 mo
350.395 411.436 349.739 411.765 349.255 412.421 cv
348.771 413.078 348.529 413.959 348.529 415.083 cv
348.529 416.223 348.754 417.104 349.238 417.761 cv
349.721 418.418 350.378 418.729 351.225 418.729 cv
352.054 418.729 352.711 418.418 353.195 417.761 cv
353.679 417.104 353.921 416.223 353.921 415.083 cv
353.921 413.977 353.679 413.078 353.195 412.421 cv
352.711 411.765 352.054 411.436 351.225 411.436 cv
351.225 410.123 mo
352.573 410.123 353.627 410.572 354.404 411.436 cv
355.165 412.318 355.562 413.527 355.562 415.083 cv
355.562 416.638 355.165 417.847 354.404 418.711 cv
353.627 419.593 352.573 420.025 351.225 420.025 cv
349.86 420.025 348.788 419.593 348.028 418.711 cv
347.268 417.847 346.888 416.638 346.888 415.083 cv
346.888 413.527 347.268 412.318 348.028 411.436 cv
348.788 410.572 349.86 410.123 351.225 410.123 cv
f
357.981 416.068 mo
357.981 410.348 li
359.536 410.348 li
359.536 416.016 li
359.536 416.914 359.709 417.571 360.055 418.02 cv
360.401 418.469 360.919 418.694 361.627 418.694 cv
362.457 418.694 363.131 418.435 363.615 417.899 cv
364.098 417.363 364.34 416.638 364.34 415.705 cv
364.34 410.348 li
365.896 410.348 li
365.896 419.8 li
364.34 419.8 li
364.34 418.348 li
363.96 418.936 363.511 419.351 363.027 419.627 cv
362.526 419.886 361.956 420.025 361.299 420.025 cv
360.21 420.025 359.381 419.696 358.828 419.022 cv
358.258 418.366 357.981 417.381 357.981 416.068 cv
f
374.57 411.799 mo
374.397 411.696 374.207 411.627 374 411.575 cv
373.793 411.54 373.568 411.506 373.326 411.506 cv
372.445 411.506 371.771 411.799 371.304 412.37 cv
370.82 412.94 370.596 413.752 370.596 414.823 cv
370.596 419.8 li
369.041 419.8 li
369.041 410.348 li
370.596 410.348 li
370.596 411.817 li
370.907 411.246 371.339 410.814 371.857 410.538 cv
372.376 410.261 373.015 410.123 373.775 410.123 cv
373.879 410.123 374 410.14 374.138 410.14 cv
374.259 410.158 374.397 410.175 374.57 410.21 cv
374.57 411.799 li
f
383.003 410.711 mo
383.003 412.162 li
382.553 411.92 382.121 411.747 381.672 411.627 cv
381.223 411.506 380.791 411.436 380.342 411.436 cv
379.339 411.436 378.544 411.765 377.992 412.404 cv
377.439 413.044 377.162 413.942 377.162 415.083 cv
377.162 416.24 377.439 417.139 377.992 417.778 cv
378.544 418.418 379.339 418.729 380.342 418.729 cv
380.791 418.729 381.223 418.677 381.672 418.556 cv
382.121 418.435 382.553 418.245 383.003 418.003 cv
383.003 419.437 li
382.553 419.644 382.104 419.8 381.655 419.886 cv
381.188 419.973 380.687 420.025 380.169 420.025 cv
378.752 420.025 377.611 419.593 376.782 418.694 cv
375.935 417.813 375.52 416.603 375.52 415.083 cv
375.52 413.545 375.935 412.335 376.782 411.454 cv
377.629 410.572 378.786 410.123 380.272 410.123 cv
380.756 410.123 381.223 410.175 381.672 410.279 cv
382.121 410.382 382.571 410.521 383.003 410.711 cv
f
393.786 414.685 mo
393.786 415.445 li
386.649 415.445 li
386.718 416.517 387.029 417.346 387.617 417.899 cv
388.187 418.452 388.982 418.729 390.018 418.729 cv
390.606 418.729 391.194 418.66 391.746 418.521 cv
392.299 418.383 392.87 418.158 393.423 417.847 cv
393.423 419.316 li
392.87 419.558 392.299 419.748 391.712 419.852 cv
391.124 419.956 390.52 420.025 389.932 420.025 cv
388.411 420.025 387.219 419.593 386.338 418.729 cv
385.457 417.865 385.025 416.672 385.025 415.169 cv
385.025 413.631 385.439 412.404 386.269 411.488 cv
387.098 410.59 388.239 410.123 389.656 410.123 cv
390.934 410.123 391.937 410.538 392.68 411.35 cv
393.405 412.18 393.786 413.285 393.786 414.685 cv
392.23 414.236 mo
392.213 413.389 391.971 412.715 391.522 412.197 cv
391.055 411.696 390.433 411.436 389.673 411.436 cv
388.809 411.436 388.118 411.696 387.599 412.18 cv
387.081 412.663 386.77 413.355 386.701 414.236 cv
392.23 414.236 li
f
402.356 410.624 mo
402.356 412.093 li
401.907 411.886 401.458 411.713 400.991 411.592 cv
400.508 411.488 400.024 411.419 399.523 411.419 cv
398.745 411.419 398.157 411.54 397.777 411.782 cv
397.397 412.024 397.207 412.37 397.207 412.836 cv
397.207 413.199 397.345 413.475 397.622 413.683 cv
397.898 413.89 398.451 414.098 399.281 414.27 cv
399.816 414.391 li
400.922 414.633 401.7 414.979 402.166 415.394 cv
402.616 415.826 402.858 416.43 402.858 417.191 cv
402.858 418.072 402.512 418.763 401.821 419.264 cv
401.13 419.783 400.162 420.025 398.952 420.025 cv
398.434 420.025 397.915 419.973 397.363 419.886 cv
396.81 419.8 396.239 419.662 395.635 419.454 cv
395.635 417.847 li
396.205 418.158 396.775 418.383 397.328 418.521 cv
397.881 418.677 398.434 418.746 398.987 418.746 cv
399.713 418.746 400.283 418.625 400.68 418.383 cv
401.06 418.141 401.268 417.778 401.268 417.312 cv
401.268 416.897 401.112 416.569 400.836 416.344 cv
400.559 416.119 399.937 415.895 398.97 415.687 cv
398.434 415.566 li
397.466 415.359 396.758 415.048 396.343 414.633 cv
395.911 414.219 395.704 413.648 395.704 412.905 cv
395.704 412.024 396.015 411.333 396.637 410.849 cv
397.259 410.365 398.157 410.123 399.332 410.123 cv
399.903 410.123 400.438 410.175 400.957 410.261 cv
401.458 410.348 401.924 410.469 402.356 410.624 cv
f
72 388.8 mo
76 388.8 li
@
518.4 388.8 mo
514.4 388.8 li
@
65.7691 385.199 mo
65.1571 385.199 64.7011 385.499 64.3891 386.099 cv
64.0771 386.699 63.9331 387.599 63.9331 388.799 cv
63.9331 389.999 64.0771 390.899 64.3891 391.499 cv
64.7011 392.099 65.1571 392.399 65.7691 392.399 cv
66.3811 392.399 66.8371 392.099 67.1491 391.499 cv
67.4491 390.899 67.6051 389.999 67.6051 388.799 cv
67.6051 387.599 67.4491 386.699 67.1491 386.099 cv
66.8371 385.499 66.3811 385.199 65.7691 385.199 cv
65.7691 384.263 mo
66.7411 384.263 67.4851 384.659 68.0131 385.427 cv
68.5291 386.207 68.7931 387.335 68.7931 388.799 cv
68.7931 390.275 68.5291 391.403 68.0131 392.171 cv
67.4851 392.939 66.7411 393.323 65.7691 393.323 cv
64.7851 393.323 64.0291 392.939 63.5131 392.171 cv
62.9971 391.403 62.7451 390.275 62.7451 388.799 cv
62.7451 387.335 62.9971 386.207 63.5131 385.427 cv
64.0291 384.659 64.7851 384.263 65.7691 384.263 cv
f
72 339.429 mo
76 339.429 li
@
518.4 339.429 mo
514.4 339.429 li
@
56.6946 342.8 mo
60.8226 342.8 li
60.8226 343.796 li
55.2666 343.796 li
55.2666 342.8 li
55.7106 342.344 56.3226 341.72 57.1026 340.928 cv
57.8706 340.148 58.3626 339.644 58.5666 339.416 cv
58.9506 338.996 59.2146 338.636 59.3586 338.336 cv
59.5026 338.048 59.5866 337.748 59.5866 337.46 cv
59.5866 337.004 59.4186 336.62 59.0946 336.332 cv
58.7706 336.044 58.3506 335.888 57.8226 335.888 cv
57.4506 335.888 57.0546 335.96 56.6466 336.08 cv
56.2386 336.212 55.7946 336.404 55.3266 336.668 cv
55.3266 335.468 li
55.8066 335.276 56.2506 335.132 56.6586 335.036 cv
57.0666 334.94 57.4506 334.892 57.7986 334.892 cv
58.6986 334.892 59.4186 335.12 59.9586 335.576 cv
60.4986 336.032 60.7746 336.632 60.7746 337.388 cv
60.7746 337.748 60.7026 338.096 60.5706 338.408 cv
60.4386 338.732 60.1986 339.116 59.8386 339.548 cv
59.7426 339.668 59.4306 339.992 58.9026 340.532 cv
58.3746 341.072 57.6426 341.828 56.6946 342.8 cv
f
65.8386 335.828 mo
65.2266 335.828 64.7706 336.128 64.4586 336.728 cv
64.1466 337.328 64.0026 338.228 64.0026 339.428 cv
64.0026 340.628 64.1466 341.528 64.4586 342.128 cv
64.7706 342.728 65.2266 343.028 65.8386 343.028 cv
66.4506 343.028 66.9066 342.728 67.2186 342.128 cv
67.5186 341.528 67.6746 340.628 67.6746 339.428 cv
67.6746 338.228 67.5186 337.328 67.2186 336.728 cv
66.9066 336.128 66.4506 335.828 65.8386 335.828 cv
65.8386 334.892 mo
66.8106 334.892 67.5546 335.288 68.0826 336.056 cv
68.5986 336.836 68.8626 337.964 68.8626 339.428 cv
68.8626 340.904 68.5986 342.032 68.0826 342.8 cv
67.5546 343.568 66.8106 343.952 65.8386 343.952 cv
64.8546 343.952 64.0986 343.568 63.5826 342.8 cv
63.0666 342.032 62.8146 340.904 62.8146 339.428 cv
62.8146 337.964 63.0666 336.836 63.5826 336.056 cv
64.0986 335.288 64.8546 334.892 65.8386 334.892 cv
f
72 290.057 mo
76 290.057 li
@
518.4 290.057 mo
514.4 290.057 li
@
58.6454 286.708 mo
55.6574 291.376 li
58.6454 291.376 li
58.6454 286.708 li
58.3334 285.676 mo
59.8214 285.676 li
59.8214 291.376 li
61.0694 291.376 li
61.0694 292.36 li
59.8214 292.36 li
59.8214 294.424 li
58.6454 294.424 li
58.6454 292.36 li
54.6974 292.36 li
54.6974 291.22 li
58.3334 285.676 li
f
65.5574 286.456 mo
64.9454 286.456 64.4894 286.756 64.1774 287.356 cv
63.8654 287.956 63.7214 288.856 63.7214 290.056 cv
63.7214 291.256 63.8654 292.156 64.1774 292.756 cv
64.4894 293.356 64.9454 293.656 65.5574 293.656 cv
66.1694 293.656 66.6254 293.356 66.9374 292.756 cv
67.2374 292.156 67.3934 291.256 67.3934 290.056 cv
67.3934 288.856 67.2374 287.956 66.9374 287.356 cv
66.6254 286.756 66.1694 286.456 65.5574 286.456 cv
65.5574 285.52 mo
66.5294 285.52 67.2734 285.916 67.8014 286.684 cv
68.3174 287.464 68.5814 288.592 68.5814 290.056 cv
68.5814 291.532 68.3174 292.66 67.8014 293.428 cv
67.2734 294.196 66.5294 294.58 65.5574 294.58 cv
64.5734 294.58 63.8174 294.196 63.3014 293.428 cv
62.7854 292.66 62.5334 291.532 62.5334 290.056 cv
62.5334 288.592 62.7854 287.464 63.3014 286.684 cv
63.8174 285.916 64.5734 285.52 65.5574 285.52 cv
f
72 240.686 mo
76 240.686 li
@
518.4 240.686 mo
514.4 240.686 li
@
58.3194 240.205 mo
57.7914 240.205 57.3714 240.397 57.0594 240.757 cv
56.7474 241.117 56.5914 241.621 56.5914 242.245 cv
56.5914 242.881 56.7474 243.385 57.0594 243.745 cv
57.3714 244.105 57.7914 244.285 58.3194 244.285 cv
58.8474 244.285 59.2674 244.105 59.5794 243.745 cv
59.8914 243.385 60.0474 242.881 60.0474 242.245 cv
60.0474 241.621 59.8914 241.117 59.5794 240.757 cv
59.2674 240.397 58.8474 240.205 58.3194 240.205 cv
60.6714 236.497 mo
60.6714 237.577 li
60.3714 237.433 60.0714 237.325 59.7714 237.253 cv
59.4594 237.181 59.1594 237.145 58.8714 237.145 cv
58.0794 237.145 57.4794 237.409 57.0714 237.937 cv
56.6634 238.465 56.4234 239.269 56.3754 240.325 cv
56.6034 239.989 56.8914 239.725 57.2394 239.545 cv
57.5874 239.365 57.9714 239.269 58.3914 239.269 cv
59.2674 239.269 59.9634 239.545 60.4674 240.073 cv
60.9714 240.601 61.2354 241.333 61.2354 242.245 cv
61.2354 243.145 60.9594 243.865 60.4314 244.405 cv
59.9034 244.945 59.1954 245.209 58.3194 245.209 cv
57.3114 245.209 56.5314 244.825 56.0034 244.057 cv
55.4634 243.289 55.1994 242.161 55.1994 240.685 cv
55.1994 239.305 55.5234 238.201 56.1834 237.385 cv
56.8314 236.569 57.7194 236.149 58.8234 236.149 cv
59.1114 236.149 59.4114 236.185 59.7234 236.233 cv
60.0234 236.293 60.3354 236.377 60.6714 236.497 cv
f
65.8074 237.085 mo
65.1954 237.085 64.7394 237.385 64.4274 237.985 cv
64.1154 238.585 63.9714 239.485 63.9714 240.685 cv
63.9714 241.885 64.1154 242.785 64.4274 243.385 cv
64.7394 243.985 65.1954 244.285 65.8074 244.285 cv
66.4194 244.285 66.8754 243.985 67.1874 243.385 cv
67.4874 242.785 67.6434 241.885 67.6434 240.685 cv
67.6434 239.485 67.4874 238.585 67.1874 237.985 cv
66.8754 237.385 66.4194 237.085 65.8074 237.085 cv
65.8074 236.149 mo
66.7794 236.149 67.5234 236.545 68.0514 237.313 cv
68.5674 238.093 68.8314 239.221 68.8314 240.685 cv
68.8314 242.161 68.5674 243.289 68.0514 244.057 cv
67.5234 244.825 66.7794 245.209 65.8074 245.209 cv
64.8234 245.209 64.0674 244.825 63.5514 244.057 cv
63.0354 243.289 62.7834 242.161 62.7834 240.685 cv
62.7834 239.221 63.0354 238.093 63.5514 237.313 cv
64.0674 236.545 64.8234 236.149 65.8074 236.149 cv
f
72 191.314 mo
76 191.314 li
@
518.4 191.314 mo
514.4 191.314 li
@
58.1441 191.529 mo
57.5801 191.529 57.1361 191.685 56.8121 191.985 cv
56.4881 192.285 56.3321 192.693 56.3321 193.221 cv
56.3321 193.749 56.4881 194.169 56.8121 194.469 cv
57.1361 194.769 57.5801 194.913 58.1441 194.913 cv
58.6961 194.913 59.1401 194.769 59.4641 194.457 cv
59.7881 194.157 59.9561 193.749 59.9561 193.221 cv
59.9561 192.693 59.7881 192.285 59.4761 191.985 cv
59.1521 191.685 58.7081 191.529 58.1441 191.529 cv
56.9561 191.025 mo
56.4521 190.905 56.0561 190.665 55.7681 190.317 cv
55.4801 189.969 55.3481 189.549 55.3481 189.045 cv
55.3481 188.349 55.5881 187.797 56.0921 187.389 cv
56.5841 186.981 57.2681 186.777 58.1441 186.777 cv
59.0081 186.777 59.6921 186.981 60.1961 187.389 cv
60.6881 187.797 60.9401 188.349 60.9401 189.045 cv
60.9401 189.549 60.7961 189.969 60.5081 190.317 cv
60.2201 190.665 59.8361 190.905 59.3321 191.025 cv
59.8961 191.157 60.3401 191.421 60.6641 191.805 cv
60.9761 192.189 61.1441 192.669 61.1441 193.221 cv
61.1441 194.073 60.8801 194.721 60.3641 195.165 cv
59.8361 195.621 59.1041 195.837 58.1441 195.837 cv
57.1721 195.837 56.4281 195.621 55.9121 195.165 cv
55.3961 194.721 55.1441 194.073 55.1441 193.221 cv
55.1441 192.669 55.3001 192.189 55.6241 191.805 cv
55.9361 191.421 56.3801 191.157 56.9561 191.025 cv
56.5241 189.153 mo
56.5241 189.609 56.6561 189.969 56.9441 190.221 cv
57.2321 190.473 57.6281 190.593 58.1441 190.593 cv
58.6481 190.593 59.0441 190.473 59.3321 190.221 cv
59.6201 189.969 59.7641 189.609 59.7641 189.153 cv
59.7641 188.697 59.6201 188.349 59.3321 188.097 cv
59.0441 187.845 58.6481 187.713 58.1441 187.713 cv
57.6281 187.713 57.2321 187.845 56.9441 188.097 cv
56.6561 188.349 56.5241 188.697 56.5241 189.153 cv
f
65.7761 187.713 mo
65.1641 187.713 64.7081 188.013 64.3961 188.613 cv
64.0841 189.213 63.9401 190.113 63.9401 191.313 cv
63.9401 192.513 64.0841 193.413 64.3961 194.013 cv
64.7081 194.613 65.1641 194.913 65.7761 194.913 cv
66.3881 194.913 66.8441 194.613 67.1561 194.013 cv
67.4561 193.413 67.6121 192.513 67.6121 191.313 cv
67.6121 190.113 67.4561 189.213 67.1561 188.613 cv
66.8441 188.013 66.3881 187.713 65.7761 187.713 cv
65.7761 186.777 mo
66.7481 186.777 67.4921 187.173 68.0201 187.941 cv
68.5361 188.721 68.8001 189.849 68.8001 191.313 cv
68.8001 192.789 68.5361 193.917 68.0201 194.685 cv
67.4921 195.453 66.7481 195.837 65.7761 195.837 cv
64.7921 195.837 64.0361 195.453 63.5201 194.685 cv
63.0041 193.917 62.7521 192.789 62.7521 191.313 cv
62.7521 189.849 63.0041 188.721 63.5201 187.941 cv
64.0361 187.173 64.7921 186.777 65.7761 186.777 cv
f
72 141.943 mo
76 141.943 li
@
518.4 141.943 mo
514.4 141.943 li
@
48.6755 145.314 mo
50.6075 145.314 li
50.6075 138.642 li
48.5075 139.062 li
48.5075 137.982 li
50.5955 137.562 li
51.7835 137.562 li
51.7835 145.314 li
53.7155 145.314 li
53.7155 146.31 li
48.6755 146.31 li
48.6755 145.314 li
f
58.6355 138.342 mo
58.0235 138.342 57.5675 138.642 57.2555 139.242 cv
56.9435 139.842 56.7995 140.742 56.7995 141.942 cv
56.7995 143.142 56.9435 144.042 57.2555 144.642 cv
57.5675 145.242 58.0235 145.542 58.6355 145.542 cv
59.2475 145.542 59.7035 145.242 60.0155 144.642 cv
60.3155 144.042 60.4715 143.142 60.4715 141.942 cv
60.4715 140.742 60.3155 139.842 60.0155 139.242 cv
59.7035 138.642 59.2475 138.342 58.6355 138.342 cv
58.6355 137.406 mo
59.6075 137.406 60.3515 137.802 60.8795 138.57 cv
61.3955 139.35 61.6595 140.478 61.6595 141.942 cv
61.6595 143.418 61.3955 144.546 60.8795 145.314 cv
60.3515 146.082 59.6075 146.466 58.6355 146.466 cv
57.6515 146.466 56.8955 146.082 56.3795 145.314 cv
55.8635 144.546 55.6115 143.418 55.6115 141.942 cv
55.6115 140.478 55.8635 139.35 56.3795 138.57 cv
56.8955 137.802 57.6515 137.406 58.6355 137.406 cv
f
66.2675 138.342 mo
65.6555 138.342 65.1995 138.642 64.8875 139.242 cv
64.5755 139.842 64.4315 140.742 64.4315 141.942 cv
64.4315 143.142 64.5755 144.042 64.8875 144.642 cv
65.1995 145.242 65.6555 145.542 66.2675 145.542 cv
66.8795 145.542 67.3355 145.242 67.6475 144.642 cv
67.9475 144.042 68.1035 143.142 68.1035 141.942 cv
68.1035 140.742 67.9475 139.842 67.6475 139.242 cv
67.3355 138.642 66.8795 138.342 66.2675 138.342 cv
66.2675 137.406 mo
67.2395 137.406 67.9835 137.802 68.5115 138.57 cv
69.0275 139.35 69.2915 140.478 69.2915 141.942 cv
69.2915 143.418 69.0275 144.546 68.5115 145.314 cv
67.9835 146.082 67.2395 146.466 66.2675 146.466 cv
65.2835 146.466 64.5275 146.082 64.0115 145.314 cv
63.4955 144.546 63.2435 143.418 63.2435 141.942 cv
63.2435 140.478 63.4955 139.35 64.0115 138.57 cv
64.5275 137.802 65.2835 137.406 66.2675 137.406 cv
f
72 92.5714 mo
76 92.5714 li
@
518.4 92.5714 mo
514.4 92.5714 li
@
48.6755 95.9426 mo
50.6075 95.9426 li
50.6075 89.2706 li
48.5075 89.6906 li
48.5075 88.6106 li
50.5955 88.1906 li
51.7835 88.1906 li
51.7835 95.9426 li
53.7155 95.9426 li
53.7155 96.9386 li
48.6755 96.9386 li
48.6755 95.9426 li
f
57.1235 95.9426 mo
61.2515 95.9426 li
61.2515 96.9386 li
55.6955 96.9386 li
55.6955 95.9426 li
56.1395 95.4866 56.7515 94.8626 57.5315 94.0706 cv
58.2995 93.2906 58.7915 92.7866 58.9955 92.5586 cv
59.3795 92.1386 59.6435 91.7786 59.7875 91.4786 cv
59.9315 91.1906 60.0155 90.8906 60.0155 90.6026 cv
60.0155 90.1466 59.8475 89.7626 59.5235 89.4746 cv
59.1995 89.1866 58.7795 89.0306 58.2515 89.0306 cv
57.8795 89.0306 57.4835 89.1026 57.0755 89.2226 cv
56.6675 89.3546 56.2235 89.5466 55.7555 89.8106 cv
55.7555 88.6106 li
56.2355 88.4186 56.6795 88.2746 57.0875 88.1786 cv
57.4955 88.0826 57.8795 88.0346 58.2275 88.0346 cv
59.1275 88.0346 59.8475 88.2626 60.3875 88.7186 cv
60.9275 89.1746 61.2035 89.7746 61.2035 90.5306 cv
61.2035 90.8906 61.1315 91.2386 60.9995 91.5506 cv
60.8675 91.8746 60.6275 92.2586 60.2675 92.6906 cv
60.1715 92.8106 59.8595 93.1346 59.3315 93.6746 cv
58.8035 94.2146 58.0715 94.9706 57.1235 95.9426 cv
f
66.2675 88.9706 mo
65.6555 88.9706 65.1995 89.2706 64.8875 89.8706 cv
64.5755 90.4706 64.4315 91.3706 64.4315 92.5706 cv
64.4315 93.7706 64.5755 94.6706 64.8875 95.2706 cv
65.1995 95.8706 65.6555 96.1706 66.2675 96.1706 cv
66.8795 96.1706 67.3355 95.8706 67.6475 95.2706 cv
67.9475 94.6706 68.1035 93.7706 68.1035 92.5706 cv
68.1035 91.3706 67.9475 90.4706 67.6475 89.8706 cv
67.3355 89.2706 66.8795 88.9706 66.2675 88.9706 cv
66.2675 88.0346 mo
67.2395 88.0346 67.9835 88.4306 68.5115 89.1986 cv
69.0275 89.9786 69.2915 91.1066 69.2915 92.5706 cv
69.2915 94.0466 69.0275 95.1746 68.5115 95.9426 cv
67.9835 96.7106 67.2395 97.0946 66.2675 97.0946 cv
65.2835 97.0946 64.5275 96.7106 64.0115 95.9426 cv
63.4955 95.1746 63.2435 94.0466 63.2435 92.5706 cv
63.2435 91.1066 63.4955 89.9786 64.0115 89.1986 cv
64.5275 88.4306 65.2835 88.0346 66.2675 88.0346 cv
f
72 43.2 mo
76 43.2 li
@
518.4 43.2 mo
514.4 43.2 li
@
48.6755 46.5712 mo
50.6075 46.5712 li
50.6075 39.8992 li
48.5075 40.3192 li
48.5075 39.2392 li
50.5955 38.8192 li
51.7835 38.8192 li
51.7835 46.5712 li
53.7155 46.5712 li
53.7155 47.5672 li
48.6755 47.5672 li
48.6755 46.5712 li
f
59.3555 39.8512 mo
56.3675 44.5192 li
59.3555 44.5192 li
59.3555 39.8512 li
59.0435 38.8192 mo
60.5315 38.8192 li
60.5315 44.5192 li
61.7795 44.5192 li
61.7795 45.5032 li
60.5315 45.5032 li
60.5315 47.5672 li
59.3555 47.5672 li
59.3555 45.5032 li
55.4075 45.5032 li
55.4075 44.3632 li
59.0435 38.8192 li
f
66.2675 39.5992 mo
65.6555 39.5992 65.1995 39.8992 64.8875 40.4992 cv
64.5755 41.0992 64.4315 41.9992 64.4315 43.1992 cv
64.4315 44.3992 64.5755 45.2992 64.8875 45.8992 cv
65.1995 46.4992 65.6555 46.7992 66.2675 46.7992 cv
66.8795 46.7992 67.3355 46.4992 67.6475 45.8992 cv
67.9475 45.2992 68.1035 44.3992 68.1035 43.1992 cv
68.1035 41.9992 67.9475 41.0992 67.6475 40.4992 cv
67.3355 39.8992 66.8795 39.5992 66.2675 39.5992 cv
66.2675 38.6632 mo
67.2395 38.6632 67.9835 39.0592 68.5115 39.8272 cv
69.0275 40.6072 69.2915 41.7352 69.2915 43.1992 cv
69.2915 44.6752 69.0275 45.8032 68.5115 46.5712 cv
67.9835 47.3392 67.2395 47.7232 66.2675 47.7232 cv
65.2835 47.7232 64.5275 47.3392 64.0115 46.5712 cv
63.4955 45.8032 63.2435 44.6752 63.2435 43.1992 cv
63.2435 41.7352 63.4955 40.6072 64.0115 39.8272 cv
64.5275 39.0592 65.2835 38.6632 66.2675 38.6632 cv
f
26.4739 321.747 mo
28.1327 321.747 li
27.8217 322.404 27.597 323.009 27.4415 323.579 cv
27.3033 324.167 27.2169 324.72 27.2169 325.238 cv
27.2169 326.171 27.407 326.897 27.7526 327.398 cv
28.1154 327.899 28.6339 328.141 29.2905 328.141 cv
29.8434 328.141 30.2754 327.985 30.5519 327.64 cv
30.8457 327.312 31.0703 326.672 31.2431 325.739 cv
31.4505 324.702 li
31.6924 323.441 32.1244 322.508 32.7292 321.903 cv
33.3513 321.298 34.1634 320.987 35.183 320.987 cv
36.4099 320.987 37.3257 321.402 37.9478 322.214 cv
38.5699 323.043 38.8809 324.236 38.8809 325.808 cv
38.8809 326.413 38.8118 327.052 38.6908 327.726 cv
38.5699 328.4 38.3798 329.091 38.1033 329.8 cv
36.3407 329.8 li
36.7382 329.109 37.0319 328.435 37.222 327.778 cv
37.4294 327.121 37.5158 326.465 37.5158 325.808 cv
37.5158 324.841 37.3257 324.097 36.9455 323.562 cv
36.5654 323.043 36.0297 322.767 35.3039 322.767 cv
34.6819 322.767 34.198 322.957 33.8524 323.337 cv
33.5068 323.717 33.2476 324.339 33.0748 325.203 cv
32.8675 326.24 li
32.6255 327.519 32.2281 328.435 31.6751 329.005 cv
31.1395 329.575 30.3964 329.852 29.4287 329.852 cv
28.3228 329.852 27.4415 329.472 26.8022 328.677 cv
26.1628 327.899 25.8345 326.81 25.8345 325.428 cv
25.8345 324.841 25.8863 324.253 25.99 323.631 cv
26.0937 323.026 26.2665 322.404 26.4739 321.747 cv
f
37.2393 316.892 mo
42.2332 316.892 li
42.2332 318.447 li
29.2041 318.447 li
29.2041 316.892 li
30.6383 316.892 li
30.0854 316.581 29.6707 316.166 29.3942 315.665 cv
29.1177 315.164 28.9795 314.559 28.9795 313.868 cv
28.9795 312.727 29.446 311.794 30.3446 311.068 cv
31.2604 310.36 32.4527 309.997 33.9388 309.997 cv
35.4249 309.997 36.6345 310.36 37.5331 311.068 cv
38.4316 311.794 38.8809 312.727 38.8809 313.868 cv
38.8809 314.559 38.7426 315.164 38.4835 315.665 cv
38.2243 316.166 37.8095 316.581 37.2393 316.892 cv
33.9388 311.604 mo
32.7983 311.604 31.917 311.846 31.2604 312.313 cv
30.6038 312.796 30.2754 313.436 30.2754 314.248 cv
30.2754 315.077 30.6038 315.717 31.2604 316.183 cv
31.917 316.667 32.7983 316.892 33.9388 316.892 cv
35.0793 316.892 35.9778 316.667 36.6345 316.183 cv
37.2911 315.717 37.6022 315.077 37.6022 314.248 cv
37.6022 313.436 37.2911 312.796 36.6345 312.313 cv
35.9778 311.846 35.0793 311.604 33.9388 311.604 cv
f
33.5414 299.335 mo
34.3017 299.335 li
34.3017 306.472 li
35.3731 306.403 36.2025 306.092 36.7555 305.504 cv
37.3084 304.934 37.5849 304.139 37.5849 303.102 cv
37.5849 302.515 37.5158 301.927 37.3775 301.374 cv
37.2393 300.822 37.0146 300.251 36.7036 299.698 cv
38.1724 299.698 li
38.4143 300.251 38.6044 300.822 38.7081 301.409 cv
38.8118 301.997 38.8809 302.601 38.8809 303.189 cv
38.8809 304.71 38.4489 305.902 37.5849 306.783 cv
36.7209 307.664 35.5286 308.096 34.0252 308.096 cv
32.4873 308.096 31.2604 307.682 30.3446 306.852 cv
29.446 306.023 28.9795 304.882 28.9795 303.465 cv
28.9795 302.187 29.3942 301.184 30.2063 300.441 cv
31.0358 299.716 32.1417 299.335 33.5414 299.335 cv
33.0921 300.891 mo
32.2454 300.908 31.5714 301.15 31.053 301.599 cv
30.5519 302.066 30.2927 302.688 30.2927 303.448 cv
30.2927 304.312 30.5519 305.003 31.0358 305.522 cv
31.5196 306.04 32.2108 306.351 33.0921 306.42 cv
33.0921 300.891 li
f
33.5414 288.708 mo
34.3017 288.708 li
34.3017 295.845 li
35.3731 295.776 36.2025 295.465 36.7555 294.877 cv
37.3084 294.307 37.5849 293.512 37.5849 292.475 cv
37.5849 291.888 37.5158 291.3 37.3775 290.747 cv
37.2393 290.194 37.0146 289.624 36.7036 289.071 cv
38.1724 289.071 li
38.4143 289.624 38.6044 290.194 38.7081 290.782 cv
38.8118 291.369 38.8809 291.974 38.8809 292.562 cv
38.8809 294.082 38.4489 295.275 37.5849 296.156 cv
36.7209 297.037 35.5286 297.469 34.0252 297.469 cv
32.4873 297.469 31.2604 297.054 30.3446 296.225 cv
29.446 295.396 28.9795 294.255 28.9795 292.838 cv
28.9795 291.559 29.3942 290.557 30.2063 289.814 cv
31.0358 289.088 32.1417 288.708 33.5414 288.708 cv
33.0921 290.263 mo
32.2454 290.281 31.5714 290.523 31.053 290.972 cv
30.5519 291.438 30.2927 292.06 30.2927 292.821 cv
30.2927 293.685 30.5519 294.376 31.0358 294.894 cv
31.5196 295.413 32.2108 295.724 33.0921 295.793 cv
33.0921 290.263 li
f
30.6383 279.947 mo
25.5234 279.947 li
25.5234 278.392 li
38.6563 278.392 li
38.6563 279.947 li
37.2393 279.947 li
37.8095 280.275 38.2243 280.69 38.4835 281.191 cv
38.7426 281.692 38.8809 282.28 38.8809 282.971 cv
38.8809 284.112 38.4316 285.045 37.5331 285.77 cv
36.6345 286.496 35.4249 286.842 33.9388 286.842 cv
32.4527 286.842 31.2604 286.496 30.3446 285.77 cv
29.446 285.045 28.9795 284.112 28.9795 282.971 cv
28.9795 282.28 29.1177 281.692 29.3942 281.191 cv
29.6707 280.69 30.0854 280.275 30.6383 279.947 cv
33.9388 285.235 mo
35.0793 285.235 35.9778 285.01 36.6345 284.544 cv
37.2911 284.077 37.6022 283.42 37.6022 282.591 cv
37.6022 281.779 37.2911 281.139 36.6345 280.656 cv
35.9778 280.189 35.0793 279.947 33.9388 279.947 cv
32.7983 279.947 31.917 280.189 31.2604 280.656 cv
30.6038 281.139 30.2754 281.779 30.2754 282.591 cv
30.2754 283.42 30.6038 284.077 31.2604 284.544 cv
31.917 285.01 32.7983 285.235 33.9388 285.235 cv
f
34.9238 275.351 mo
29.2041 275.351 li
29.2041 273.796 li
34.8719 273.796 li
35.7705 273.796 36.4271 273.623 36.8764 273.277 cv
37.3257 272.931 37.5503 272.413 37.5503 271.705 cv
37.5503 270.875 37.2911 270.201 36.7555 269.717 cv
36.2198 269.234 35.494 268.992 34.5609 268.992 cv
29.2041 268.992 li
29.2041 267.436 li
38.6563 267.436 li
38.6563 268.992 li
37.2047 268.992 li
37.7923 269.372 38.207 269.821 38.4835 270.305 cv
38.7426 270.806 38.8809 271.376 38.8809 272.033 cv
38.8809 273.122 38.5526 273.951 37.8787 274.504 cv
37.222 275.074 36.237 275.351 34.9238 275.351 cv
f
37.2393 262.736 mo
42.2332 262.736 li
42.2332 264.291 li
29.2041 264.291 li
29.2041 262.736 li
30.6383 262.736 li
30.0854 262.425 29.6707 262.01 29.3942 261.509 cv
29.1177 261.008 28.9795 260.403 28.9795 259.712 cv
28.9795 258.572 29.446 257.639 30.3446 256.913 cv
31.2604 256.204 32.4527 255.842 33.9388 255.842 cv
35.4249 255.842 36.6345 256.204 37.5331 256.913 cv
38.4316 257.639 38.8809 258.572 38.8809 259.712 cv
38.8809 260.403 38.7426 261.008 38.4835 261.509 cv
38.2243 262.01 37.8095 262.425 37.2393 262.736 cv
33.9388 257.449 mo
32.7983 257.449 31.917 257.69 31.2604 258.157 cv
30.6038 258.641 30.2754 259.28 30.2754 260.092 cv
30.2754 260.922 30.6038 261.561 31.2604 262.028 cv
31.917 262.512 32.7983 262.736 33.9388 262.736 cv
35.0793 262.736 35.9778 262.512 36.6345 262.028 cv
37.2911 261.561 37.6022 260.922 37.6022 260.092 cv
37.6022 259.28 37.2911 258.641 36.6345 258.157 cv
35.9778 257.69 35.0793 257.449 33.9388 257.449 cv
f
29.567 240.964 mo
31.0185 240.964 li
30.7766 241.413 30.6038 241.845 30.4828 242.294 cv
30.3619 242.743 30.2927 243.175 30.2927 243.625 cv
30.2927 244.627 30.621 245.422 31.2604 245.975 cv
31.8998 246.528 32.7983 246.804 33.9388 246.804 cv
35.0966 246.804 35.9951 246.528 36.6345 245.975 cv
37.2738 245.422 37.5849 244.627 37.5849 243.625 cv
37.5849 243.175 37.5331 242.743 37.4121 242.294 cv
37.2911 241.845 37.1011 241.413 36.8591 240.964 cv
38.2934 240.964 li
38.5007 241.413 38.6563 241.862 38.7426 242.311 cv
38.829 242.778 38.8809 243.279 38.8809 243.798 cv
38.8809 245.215 38.4489 246.355 37.5503 247.184 cv
36.669 248.031 35.4594 248.446 33.9388 248.446 cv
32.4009 248.446 31.1913 248.031 30.31 247.184 cv
29.4287 246.338 28.9795 245.18 28.9795 243.694 cv
28.9795 243.21 29.0313 242.743 29.135 242.294 cv
29.2386 241.845 29.3769 241.396 29.567 240.964 cv
f
30.2927 234.605 mo
30.2927 235.434 30.621 236.091 31.2777 236.574 cv
31.9343 237.058 32.8156 237.3 33.9388 237.3 cv
35.0793 237.3 35.9606 237.076 36.6172 236.592 cv
37.2738 236.108 37.5849 235.451 37.5849 234.605 cv
37.5849 233.775 37.2738 233.118 36.6172 232.635 cv
35.9606 232.151 35.0793 231.909 33.9388 231.909 cv
32.8329 231.909 31.9343 232.151 31.2777 232.635 cv
30.621 233.118 30.2927 233.775 30.2927 234.605 cv
28.9795 234.605 mo
28.9795 233.257 29.4287 232.203 30.2927 231.425 cv
31.174 230.665 32.3836 230.267 33.9388 230.267 cv
35.494 230.267 36.7036 230.665 37.5676 231.425 cv
38.4489 232.203 38.8809 233.257 38.8809 234.605 cv
38.8809 235.97 38.4489 237.041 37.5676 237.801 cv
36.7036 238.562 35.494 238.942 33.9388 238.942 cv
32.3836 238.942 31.174 238.562 30.2927 237.801 cv
29.4287 237.041 28.9795 235.97 28.9795 234.605 cv
f
31.0185 220.331 mo
30.3273 219.951 29.8262 219.485 29.4806 218.949 cv
29.1522 218.413 28.9795 217.774 28.9795 217.031 cv
28.9795 216.063 29.3251 215.303 30.0163 214.767 cv
30.7074 214.231 31.6924 213.955 32.9538 213.955 cv
38.6563 213.955 li
38.6563 215.51 li
33.0057 215.51 li
32.1071 215.51 31.4332 215.683 30.9839 215.994 cv
30.5519 216.322 30.3273 216.806 30.3273 217.463 cv
30.3273 218.275 30.6038 218.914 31.1395 219.381 cv
31.6751 219.847 32.4009 220.072 33.3167 220.072 cv
38.6563 220.072 li
38.6563 221.627 li
33.0057 221.627 li
32.1071 221.627 31.4332 221.8 30.9839 222.111 cv
30.5519 222.439 30.3273 222.941 30.3273 223.597 cv
30.3273 224.392 30.6038 225.031 31.1395 225.498 cv
31.6751 225.965 32.4009 226.189 33.3167 226.189 cv
38.6563 226.189 li
38.6563 227.744 li
29.2041 227.744 li
29.2041 226.189 li
30.6729 226.189 li
30.1026 225.844 29.6707 225.412 29.3942 224.91 cv
29.1177 224.427 28.9795 223.839 28.9795 223.148 cv
28.9795 222.457 29.1522 221.886 29.4978 221.403 cv
29.8434 220.919 30.3619 220.573 31.0185 220.331 cv
f
37.2393 209.358 mo
42.2332 209.358 li
42.2332 210.914 li
29.2041 210.914 li
29.2041 209.358 li
30.6383 209.358 li
30.0854 209.047 29.6707 208.633 29.3942 208.132 cv
29.1177 207.63 28.9795 207.026 28.9795 206.334 cv
28.9795 205.194 29.446 204.261 30.3446 203.535 cv
31.2604 202.827 32.4527 202.464 33.9388 202.464 cv
35.4249 202.464 36.6345 202.827 37.5331 203.535 cv
38.4316 204.261 38.8809 205.194 38.8809 206.334 cv
38.8809 207.026 38.7426 207.63 38.4835 208.132 cv
38.2243 208.633 37.8095 209.047 37.2393 209.358 cv
33.9388 204.071 mo
32.7983 204.071 31.917 204.313 31.2604 204.779 cv
30.6038 205.263 30.2754 205.902 30.2754 206.715 cv
30.2754 207.544 30.6038 208.183 31.2604 208.65 cv
31.917 209.134 32.7983 209.358 33.9388 209.358 cv
35.0793 209.358 35.9778 209.134 36.6345 208.65 cv
37.2911 208.183 37.6022 207.544 37.6022 206.715 cv
37.6022 205.902 37.2911 205.263 36.6345 204.779 cv
35.9778 204.313 35.0793 204.071 33.9388 204.071 cv
f
33.9043 195.586 mo
33.9043 196.848 34.0598 197.712 34.3363 198.196 cv
34.63 198.68 35.1138 198.921 35.805 198.921 cv
36.358 198.921 36.8073 198.749 37.1183 198.386 cv
37.4467 198.023 37.6022 197.522 37.6022 196.9 cv
37.6022 196.036 37.3084 195.345 36.6863 194.826 cv
36.0815 194.308 35.2694 194.049 34.2499 194.049 cv
33.9043 194.049 li
33.9043 195.586 li
33.2649 192.493 mo
38.6563 192.493 li
38.6563 194.049 li
37.222 194.049 li
37.8095 194.411 38.2243 194.861 38.4835 195.379 cv
38.7426 195.897 38.8809 196.554 38.8809 197.314 cv
38.8809 198.282 38.6217 199.06 38.086 199.63 cv
37.5503 200.2 36.8246 200.477 35.9087 200.477 cv
34.8546 200.477 34.0598 200.131 33.5068 199.405 cv
32.9711 198.697 32.6946 197.643 32.6946 196.226 cv
32.6946 194.049 li
32.5391 194.049 li
31.8307 194.049 31.2777 194.29 30.8802 194.757 cv
30.5001 195.224 30.2927 195.88 30.2927 196.727 cv
30.2927 197.28 30.3619 197.798 30.5001 198.317 cv
30.6383 198.835 30.8284 199.319 31.0703 199.785 cv
29.6361 199.785 li
29.4287 199.233 29.2559 198.68 29.1522 198.144 cv
29.0486 197.608 28.9795 197.09 28.9795 196.571 cv
28.9795 195.206 29.3423 194.187 30.0508 193.513 cv
30.7593 192.839 31.8307 192.493 33.2649 192.493 cv
f
30.6556 183.819 mo
30.5519 183.991 30.4828 184.182 30.431 184.389 cv
30.3964 184.596 30.3619 184.821 30.3619 185.063 cv
30.3619 185.944 30.6556 186.618 31.2258 187.085 cv
31.7961 187.568 32.6082 187.793 33.6796 187.793 cv
38.6563 187.793 li
38.6563 189.348 li
29.2041 189.348 li
29.2041 187.793 li
30.6729 187.793 li
30.1026 187.482 29.6707 187.05 29.3942 186.532 cv
29.1177 186.013 28.9795 185.374 28.9795 184.614 cv
28.9795 184.51 28.9967 184.389 28.9967 184.251 cv
29.014 184.13 29.0313 183.991 29.0658 183.819 cv
30.6556 183.819 li
f
33.5414 174.107 mo
34.3017 174.107 li
34.3017 181.244 li
35.3731 181.175 36.2025 180.864 36.7555 180.276 cv
37.3084 179.706 37.5849 178.911 37.5849 177.874 cv
37.5849 177.287 37.5158 176.699 37.3775 176.146 cv
37.2393 175.593 37.0146 175.023 36.7036 174.47 cv
38.1724 174.47 li
38.4143 175.023 38.6044 175.593 38.7081 176.181 cv
38.8118 176.768 38.8809 177.373 38.8809 177.961 cv
38.8809 179.481 38.4489 180.674 37.5849 181.555 cv
36.7209 182.436 35.5286 182.868 34.0252 182.868 cv
32.4873 182.868 31.2604 182.454 30.3446 181.624 cv
29.446 180.795 28.9795 179.654 28.9795 178.237 cv
28.9795 176.959 29.3942 175.956 30.2063 175.213 cv
31.0358 174.488 32.1417 174.107 33.5414 174.107 cv
33.0921 175.663 mo
32.2454 175.68 31.5714 175.922 31.053 176.371 cv
30.5519 176.838 30.2927 177.46 30.2927 178.22 cv
30.2927 179.084 30.5519 179.775 31.0358 180.294 cv
31.5196 180.812 32.2108 181.123 33.0921 181.192 cv
33.0921 175.663 li
f
30.6383 165.346 mo
25.5234 165.346 li
25.5234 163.791 li
38.6563 163.791 li
38.6563 165.346 li
37.2393 165.346 li
37.8095 165.675 38.2243 166.089 38.4835 166.59 cv
38.7426 167.092 38.8809 167.679 38.8809 168.37 cv
38.8809 169.511 38.4316 170.444 37.5331 171.17 cv
36.6345 171.895 35.4249 172.241 33.9388 172.241 cv
32.4527 172.241 31.2604 171.895 30.3446 171.17 cv
29.446 170.444 28.9795 169.511 28.9795 168.37 cv
28.9795 167.679 29.1177 167.092 29.3942 166.59 cv
29.6707 166.089 30.0854 165.675 30.6383 165.346 cv
33.9388 170.634 mo
35.0793 170.634 35.9778 170.409 36.6345 169.943 cv
37.2911 169.476 37.6022 168.82 37.6022 167.99 cv
37.6022 167.178 37.2911 166.539 36.6345 166.055 cv
35.9778 165.588 35.0793 165.346 33.9388 165.346 cv
32.7983 165.346 31.917 165.588 31.2604 166.055 cv
30.6038 166.539 30.2754 167.178 30.2754 167.99 cv
30.2754 168.82 30.6038 169.476 31.2604 169.943 cv
31.917 170.409 32.7983 170.634 33.9388 170.634 cv
f
26.5257 153.562 mo
29.2041 153.562 li
29.2041 150.365 li
30.4137 150.365 li
30.4137 153.562 li
35.5458 153.562 li
36.3234 153.562 36.8246 153.458 37.0319 153.251 cv
37.2566 153.043 37.3602 152.611 37.3602 151.954 cv
37.3602 150.365 li
38.6563 150.365 li
38.6563 151.954 li
38.6563 153.164 38.4316 153.994 37.9823 154.443 cv
37.5331 154.892 36.7209 155.117 35.5458 155.117 cv
30.4137 155.117 li
30.4137 156.257 li
29.2041 156.257 li
29.2041 155.117 li
26.5257 155.117 li
26.5257 153.562 li
f
30.2927 144.662 mo
30.2927 145.492 30.621 146.148 31.2777 146.632 cv
31.9343 147.116 32.8156 147.358 33.9388 147.358 cv
35.0793 147.358 35.9606 147.133 36.6172 146.65 cv
37.2738 146.166 37.5849 145.509 37.5849 144.662 cv
37.5849 143.833 37.2738 143.176 36.6172 142.692 cv
35.9606 142.209 35.0793 141.967 33.9388 141.967 cv
32.8329 141.967 31.9343 142.209 31.2777 142.692 cv
30.621 143.176 30.2927 143.833 30.2927 144.662 cv
28.9795 144.662 mo
28.9795 143.315 29.4287 142.26 30.2927 141.483 cv
31.174 140.723 32.3836 140.325 33.9388 140.325 cv
35.494 140.325 36.7036 140.723 37.5676 141.483 cv
38.4489 142.26 38.8809 143.315 38.8809 144.662 cv
38.8809 146.028 38.4489 147.099 37.5676 147.859 cv
36.7036 148.62 35.494 149 33.9388 149 cv
32.3836 149 31.174 148.62 30.2927 147.859 cv
29.4287 147.099 28.9795 146.028 28.9795 144.662 cv
f
27.0268 122.751 mo
28.8239 122.751 li
28.3055 123.339 27.9081 123.944 27.6316 124.6 cv
27.3724 125.257 27.2342 125.931 27.2342 126.657 cv
27.2342 128.108 27.6834 129.214 28.5647 129.975 cv
29.446 130.735 30.7074 131.115 32.3663 131.115 cv
34.0252 131.115 35.3039 130.735 36.1852 129.975 cv
37.0665 129.214 37.4985 128.108 37.4985 126.657 cv
37.4985 125.931 37.3775 125.257 37.1011 124.6 cv
36.8419 123.944 36.4444 123.339 35.9087 122.751 cv
37.6886 122.751 li
38.1033 123.356 38.397 123.996 38.5871 124.652 cv
38.7772 125.309 38.8809 126.017 38.8809 126.76 cv
38.8809 128.661 38.3106 130.165 37.1529 131.271 cv
35.9951 132.376 34.4054 132.912 32.3663 132.912 cv
30.3446 132.912 28.7548 132.376 27.5798 131.271 cv
26.422 130.165 25.8345 128.661 25.8345 126.76 cv
25.8345 126 25.9382 125.292 26.1283 124.635 cv
26.3356 123.978 26.6294 123.339 27.0268 122.751 cv
f
27.4588 118.414 mo
32.1935 118.414 li
32.1935 116.271 li
32.1935 115.477 32.0034 114.872 31.5887 114.44 cv
31.174 114.008 30.5865 113.783 29.8262 113.783 cv
29.0658 113.783 28.4956 114.008 28.0809 114.44 cv
27.6662 114.872 27.4588 115.477 27.4588 116.271 cv
27.4588 118.414 li
26.0591 120.125 mo
26.0591 116.271 li
26.0591 114.872 26.3874 113.8 27.0268 113.075 cv
27.6662 112.349 28.5993 111.986 29.8262 111.986 cv
31.0703 111.986 32.0207 112.349 32.6428 113.075 cv
33.2822 113.8 33.5932 114.872 33.5932 116.271 cv
33.5932 118.414 li
38.6563 118.414 li
38.6563 120.125 li
26.0591 120.125 li
f
26.0591 109.895 mo
26.0591 108.185 li
33.7142 108.185 li
35.062 108.185 36.047 107.943 36.6345 107.459 cv
37.222 106.975 37.5158 106.18 37.5158 105.074 cv
37.5158 103.985 37.222 103.191 36.6345 102.707 cv
36.047 102.223 35.062 101.964 33.7142 101.964 cv
26.0591 101.964 li
26.0591 100.253 li
33.9215 100.253 li
35.5804 100.253 36.8073 100.668 37.6367 101.48 cv
38.4662 102.292 38.8809 103.484 38.8809 105.074 cv
38.8809 106.664 38.4662 107.873 37.6367 108.686 cv
36.8073 109.498 35.5804 109.895 33.9215 109.895 cv
26.0591 109.895 li
f
1 lw
2 lc
72 43.2 mo
518.4 43.2 li
@
518.4 388.8 mo
518.4 43.2 li
@
72 388.8 mo
518.4 388.8 li
@
72 388.8 mo
72 43.2 li
@
gsave
499.414 105.378 mo
86.164 105.378 li
85.5075 105.376 85.1101 105.217 84.8675 104.974 cv
84.6247 104.732 84.4657 104.334 84.464 103.678 cv
84.464 56.356 li
84.4657 55.6995 84.6247 55.3021 84.8675 55.0595 cv
85.1101 54.8167 85.5075 54.6579 86.164 54.656 cv
499.414 54.656 li
500.07 54.6579 500.468 54.8167 500.71 55.0595 cv
500.953 55.3021 501.112 55.6995 501.114 56.356 cv
501.114 103.678 li
501.112 104.334 500.953 104.732 500.71 104.974 cv
500.468 105.217 500.07 105.376 499.414 105.378 cv
clp
84.464 54.656 mo
501.114 54.656 li
501.114 105.378 li
84.464 105.378 li
cp
/1 
<<
/Name (Black)
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /1 /CSD get_res sepcs
.34902 sep
f
grestore
499.424 106.378 mo
499.421 106.378 499.417 106.378 499.414 106.378 cv
86.164 106.378 li
86.1607 106.378 86.1573 106.378 86.154 106.378 cv
85.3479 106.378 84.6493 106.17 84.1604 105.681 cv
83.67 105.191 83.4622 104.488 83.4639 103.678 cv
83.4639 56.356 li
83.4622 55.5459 83.67 54.8434 84.1604 54.3525 cv
84.649 53.8642 85.3475 53.6561 86.1531 53.6561 cv
86.1568 53.6561 86.1603 53.6561 86.164 53.6561 cv
499.414 53.6561 li
499.418 53.6561 499.421 53.6561 499.425 53.6561 cv
500.23 53.6561 500.929 53.8641 501.417 54.3525 cv
501.908 54.8434 502.116 55.5459 502.114 56.356 cv
502.114 103.678 li
502.116 104.488 501.908 105.191 501.417 105.681 cv
500.929 106.17 500.23 106.378 499.424 106.378 cv
86.164 105.378 mo
499.414 105.378 li
500.07 105.376 500.468 105.217 500.71 104.974 cv
500.953 104.732 501.112 104.334 501.114 103.678 cv
501.114 56.356 li
501.112 55.6995 500.953 55.3021 500.71 55.0595 cv
500.468 54.8167 500.07 54.6579 499.414 54.656 cv
86.164 54.656 li
85.5075 54.6579 85.1101 54.8167 84.8675 55.0595 cv
84.6247 55.3021 84.4657 55.6995 84.464 56.356 cv
84.464 103.678 li
84.4657 104.334 84.6247 104.732 84.8675 104.974 cv
85.1101 105.217 85.5075 105.376 86.164 105.378 cv
86.164 105.378 li
1 /1 /CSD get_res sepcs
.34902 sep
f
84.164 103.878 mo
497.414 103.878 li
498.881 103.878 499.614 103.145 499.614 101.678 cv
499.614 54.356 li
499.614 52.8893 498.881 52.156 497.414 52.156 cv
84.164 52.156 li
82.6973 52.156 81.964 52.8893 81.964 54.356 cv
81.964 101.678 li
81.964 103.145 82.6973 103.878 84.164 103.878 cv
cp
1 /0 /CSD get_res sepcs
0 sep
f
84.164 103.878 mo
497.414 103.878 li
498.881 103.878 499.614 103.145 499.614 101.678 cv
499.614 54.356 li
499.614 52.8893 498.881 52.156 497.414 52.156 cv
84.164 52.156 li
82.6973 52.156 81.964 52.8893 81.964 54.356 cv
81.964 101.678 li
81.964 103.145 82.6973 103.878 84.164 103.878 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
gsave
86.4141 64.3154 mo
92.914 64.3154 li
92.914 57.8154 li
86.4141 57.8154 li
86.4141 64.3154 li
clp
89.664 64.0654 mo
90.4596 64.0654 91.2227 63.7493 91.7853 63.1867 cv
92.3479 62.6241 92.664 61.861 92.664 61.0654 cv
92.664 60.2698 92.3479 59.5066 91.7853 58.944 cv
91.2227 58.3815 90.4596 58.0654 89.664 58.0654 cv
88.8684 58.0654 88.1053 58.3815 87.5427 58.944 cv
86.9801 59.5066 86.664 60.2698 86.664 61.0654 cv
86.664 61.861 86.9801 62.6241 87.5427 63.1867 cv
88.1053 63.7493 88.8684 64.0654 89.664 64.0654 cv
cp
.930816 .793027 0 0 cmyk
f
.5 lw
0 lc
89.664 64.0654 mo
90.4596 64.0654 91.2227 63.7493 91.7853 63.1867 cv
92.3479 62.6241 92.664 61.861 92.664 61.0654 cv
92.664 60.2698 92.3479 59.5066 91.7853 58.944 cv
91.2227 58.3815 90.4596 58.0654 89.664 58.0654 cv
88.8684 58.0654 88.1053 58.3815 87.5427 58.944 cv
86.9801 59.5066 86.664 60.2698 86.664 61.0654 cv
86.664 61.861 86.9801 62.6241 87.5427 63.1867 cv
88.1053 63.7493 88.8684 64.0654 89.664 64.0654 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
101.814 64.3154 mo
108.314 64.3154 li
108.314 57.8154 li
101.814 57.8154 li
101.814 64.3154 li
clp
105.064 64.0654 mo
105.86 64.0654 106.623 63.7493 107.185 63.1867 cv
107.748 62.6241 108.064 61.861 108.064 61.0654 cv
108.064 60.2698 107.748 59.5066 107.185 58.944 cv
106.623 58.3815 105.86 58.0654 105.064 58.0654 cv
104.268 58.0654 103.505 58.3815 102.943 58.944 cv
102.38 59.5066 102.064 60.2698 102.064 61.0654 cv
102.064 61.861 102.38 62.6241 102.943 63.1867 cv
103.505 63.7493 104.268 64.0654 105.064 64.0654 cv
cp
.930816 .793027 0 0 cmyk
f
.5 lw
0 lc
105.064 64.0654 mo
105.86 64.0654 106.623 63.7493 107.185 63.1867 cv
107.748 62.6241 108.064 61.861 108.064 61.0654 cv
108.064 60.2698 107.748 59.5066 107.185 58.944 cv
106.623 58.3815 105.86 58.0654 105.064 58.0654 cv
104.268 58.0654 103.505 58.3815 102.943 58.944 cv
102.38 59.5066 102.064 60.2698 102.064 61.0654 cv
102.064 61.861 102.38 62.6241 102.943 63.1867 cv
103.505 63.7493 104.268 64.0654 105.064 64.0654 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
124.248 57.5124 mo
124.248 58.6564 li
123.874 58.3264 123.489 58.0734 123.071 57.8974 cv
122.653 57.7324 122.224 57.6444 121.762 57.6444 cv
120.838 57.6444 120.134 57.9304 119.65 58.4914 cv
119.166 59.0524 118.924 59.8554 118.924 60.9114 cv
118.924 61.9674 119.166 62.7814 119.65 63.3424 cv
120.134 63.9034 120.838 64.1784 121.762 64.1784 cv
122.224 64.1784 122.653 64.1014 123.071 63.9254 cv
123.489 63.7604 123.874 63.5074 124.248 63.1664 cv
124.248 64.2994 li
123.863 64.5634 123.456 64.7504 123.038 64.8714 cv
122.62 64.9924 122.169 65.0584 121.696 65.0584 cv
120.486 65.0584 119.529 64.6954 118.825 63.9584 cv
118.121 63.2214 117.78 62.2094 117.78 60.9114 cv
117.78 59.6244 118.121 58.6124 118.825 57.8644 cv
119.529 57.1274 120.486 56.7534 121.696 56.7534 cv
122.18 56.7534 122.631 56.8194 123.049 56.9404 cv
123.467 57.0724 123.874 57.2594 124.248 57.5124 cv
f
128.208 59.5914 mo
127.68 59.5914 127.262 59.8004 126.954 60.2184 cv
126.646 60.6364 126.492 61.1974 126.492 61.9124 cv
126.492 62.6384 126.635 63.1994 126.943 63.6174 cv
127.251 64.0354 127.669 64.2334 128.208 64.2334 cv
128.736 64.2334 129.154 64.0354 129.462 63.6174 cv
129.77 63.1994 129.924 62.6384 129.924 61.9124 cv
129.924 61.2084 129.77 60.6364 129.462 60.2184 cv
129.154 59.8004 128.736 59.5914 128.208 59.5914 cv
128.208 58.7554 mo
129.066 58.7554 129.737 59.0414 130.232 59.5914 cv
130.716 60.1524 130.969 60.9224 130.969 61.9124 cv
130.969 62.9024 130.716 63.6724 130.232 64.2224 cv
129.737 64.7834 129.066 65.0584 128.208 65.0584 cv
127.339 65.0584 126.657 64.7834 126.173 64.2224 cv
125.689 63.6724 125.447 62.9024 125.447 61.9124 cv
125.447 60.9224 125.689 60.1524 126.173 59.5914 cv
126.657 59.0414 127.339 58.7554 128.208 58.7554 cv
f
137.613 61.2854 mo
137.613 64.9154 li
136.623 64.9154 li
136.623 61.3184 li
136.623 60.7464 136.502 60.3284 136.282 60.0424 cv
136.062 59.7564 135.732 59.6134 135.292 59.6134 cv
134.753 59.6134 134.335 59.7894 134.027 60.1304 cv
133.719 60.4714 133.565 60.9334 133.565 61.5164 cv
133.565 64.9154 li
132.575 64.9154 li
132.575 58.8984 li
133.565 58.8984 li
133.565 59.8334 li
133.796 59.4814 134.071 59.2064 134.401 59.0304 cv
134.72 58.8544 135.094 58.7554 135.512 58.7554 cv
136.194 58.7554 136.722 58.9754 137.074 59.4044 cv
137.426 59.8334 137.613 60.4604 137.613 61.2854 cv
f
143.421 59.0744 mo
143.421 60.0094 li
143.135 59.8774 142.849 59.7674 142.552 59.6904 cv
142.244 59.6244 141.936 59.5804 141.617 59.5804 cv
141.122 59.5804 140.748 59.6574 140.506 59.8114 cv
140.264 59.9654 140.143 60.1854 140.143 60.4824 cv
140.143 60.7134 140.231 60.8894 140.407 61.0214 cv
140.583 61.1534 140.935 61.2854 141.463 61.3954 cv
141.804 61.4724 li
142.508 61.6264 143.003 61.8464 143.3 62.1104 cv
143.586 62.3854 143.74 62.7704 143.74 63.2544 cv
143.74 63.8154 143.52 64.2554 143.08 64.5744 cv
142.64 64.9044 142.024 65.0584 141.254 65.0584 cv
140.924 65.0584 140.594 65.0254 140.242 64.9704 cv
139.89 64.9154 139.527 64.8274 139.142 64.6954 cv
139.142 63.6724 li
139.505 63.8704 139.868 64.0134 140.22 64.1014 cv
140.572 64.2004 140.924 64.2444 141.276 64.2444 cv
141.738 64.2444 142.101 64.1674 142.354 64.0134 cv
142.596 63.8594 142.728 63.6284 142.728 63.3314 cv
142.728 63.0674 142.629 62.8584 142.453 62.7154 cv
142.277 62.5724 141.881 62.4294 141.265 62.2974 cv
140.924 62.2204 li
140.308 62.0884 139.857 61.8904 139.593 61.6264 cv
139.318 61.3624 139.186 60.9994 139.186 60.5264 cv
139.186 59.9654 139.384 59.5254 139.78 59.2174 cv
140.176 58.9094 140.748 58.7554 141.496 58.7554 cv
141.859 58.7554 142.2 58.7884 142.53 58.8434 cv
142.849 58.8984 143.146 58.9754 143.421 59.0744 cv
f
146.292 57.1934 mo
146.292 58.8984 li
148.327 58.8984 li
148.327 59.6684 li
146.292 59.6684 li
146.292 62.9354 li
146.292 63.4304 146.358 63.7494 146.49 63.8814 cv
146.622 64.0244 146.897 64.0904 147.315 64.0904 cv
148.327 64.0904 li
148.327 64.9154 li
147.315 64.9154 li
146.545 64.9154 146.017 64.7724 145.731 64.4864 cv
145.445 64.2004 145.302 63.6834 145.302 62.9354 cv
145.302 59.6684 li
144.576 59.6684 li
144.576 58.8984 li
145.302 58.8984 li
145.302 57.1934 li
146.292 57.1934 li
f
153.112 59.8224 mo
153.002 59.7564 152.881 59.7124 152.749 59.6794 cv
152.617 59.6574 152.474 59.6354 152.32 59.6354 cv
151.759 59.6354 151.33 59.8224 151.033 60.1854 cv
150.725 60.5484 150.582 61.0654 150.582 61.7474 cv
150.582 64.9154 li
149.592 64.9154 li
149.592 58.8984 li
150.582 58.8984 li
150.582 59.8334 li
150.78 59.4704 151.055 59.1954 151.385 59.0194 cv
151.715 58.8434 152.122 58.7554 152.606 58.7554 cv
152.837 58.7664 li
152.914 58.7774 153.002 58.7884 153.112 58.8104 cv
153.112 59.8224 li
f
156.885 61.8904 mo
156.082 61.8904 155.532 61.9894 155.224 62.1654 cv
154.916 62.3524 154.762 62.6604 154.762 63.1004 cv
154.762 63.4524 154.872 63.7384 155.103 63.9364 cv
155.334 64.1454 155.653 64.2444 156.049 64.2444 cv
156.599 64.2444 157.039 64.0574 157.369 63.6614 cv
157.699 63.2764 157.864 62.7594 157.864 62.1104 cv
157.864 61.8904 li
156.885 61.8904 li
158.854 61.4834 mo
158.854 64.9154 li
157.864 64.9154 li
157.864 64.0024 li
157.633 64.3764 157.347 64.6404 157.017 64.8054 cv
156.687 64.9704 156.269 65.0584 155.785 65.0584 cv
155.169 65.0584 154.674 64.8934 154.311 64.5524 cv
153.948 64.2114 153.772 63.7494 153.772 63.1664 cv
153.772 62.4954 153.992 61.9894 154.454 61.6374 cv
154.905 61.2964 155.576 61.1204 156.478 61.1204 cv
157.864 61.1204 li
157.864 61.0214 li
157.864 60.5704 157.71 60.2184 157.413 59.9654 cv
157.116 59.7234 156.698 59.5914 156.159 59.5914 cv
155.807 59.5914 155.477 59.6354 155.147 59.7234 cv
154.817 59.8114 154.509 59.9324 154.212 60.0864 cv
154.212 59.1734 li
154.564 59.0414 154.916 58.9314 155.257 58.8654 cv
155.598 58.7994 155.928 58.7554 156.258 58.7554 cv
157.127 58.7554 157.776 58.9864 158.205 59.4374 cv
158.634 59.8884 158.854 60.5704 158.854 61.4834 cv
f
160.889 58.8984 mo
161.879 58.8984 li
161.879 64.9154 li
160.889 64.9154 li
160.889 58.8984 li
160.889 56.5554 mo
161.879 56.5554 li
161.879 57.8094 li
160.889 57.8094 li
160.889 56.5554 li
f
168.952 61.2854 mo
168.952 64.9154 li
167.962 64.9154 li
167.962 61.3184 li
167.962 60.7464 167.841 60.3284 167.621 60.0424 cv
167.401 59.7564 167.071 59.6134 166.631 59.6134 cv
166.092 59.6134 165.674 59.7894 165.366 60.1304 cv
165.058 60.4714 164.904 60.9334 164.904 61.5164 cv
164.904 64.9154 li
163.914 64.9154 li
163.914 58.8984 li
164.904 58.8984 li
164.904 59.8334 li
165.135 59.4814 165.41 59.2064 165.74 59.0304 cv
166.059 58.8544 166.433 58.7554 166.851 58.7554 cv
167.533 58.7554 168.061 58.9754 168.413 59.4044 cv
168.765 59.8334 168.952 60.4604 168.952 61.2854 cv
f
176.069 61.6594 mo
176.069 62.1434 li
171.526 62.1434 li
171.57 62.8254 171.768 63.3534 172.142 63.7054 cv
172.505 64.0574 173.011 64.2334 173.671 64.2334 cv
174.045 64.2334 174.419 64.1894 174.771 64.1014 cv
175.123 64.0134 175.486 63.8704 175.838 63.6724 cv
175.838 64.6074 li
175.486 64.7614 175.123 64.8824 174.749 64.9484 cv
174.375 65.0144 173.99 65.0584 173.616 65.0584 cv
172.648 65.0584 171.889 64.7834 171.328 64.2334 cv
170.767 63.6834 170.492 62.9244 170.492 61.9674 cv
170.492 60.9884 170.756 60.2074 171.284 59.6244 cv
171.812 59.0524 172.538 58.7554 173.44 58.7554 cv
174.254 58.7554 174.892 59.0194 175.365 59.5364 cv
175.827 60.0644 176.069 60.7684 176.069 61.6594 cv
175.079 61.3734 mo
175.068 60.8344 174.914 60.4054 174.628 60.0754 cv
174.331 59.7564 173.935 59.5914 173.451 59.5914 cv
172.901 59.5914 172.461 59.7564 172.131 60.0644 cv
171.801 60.3724 171.603 60.8124 171.559 61.3734 cv
175.079 61.3734 li
f
181.646 59.8114 mo
181.646 56.5554 li
182.636 56.5554 li
182.636 64.9154 li
181.646 64.9154 li
181.646 64.0134 li
181.437 64.3764 181.173 64.6404 180.854 64.8054 cv
180.535 64.9704 180.161 65.0584 179.721 65.0584 cv
178.995 65.0584 178.401 64.7724 177.939 64.2004 cv
177.477 63.6284 177.257 62.8584 177.257 61.9124 cv
177.257 60.9664 177.477 60.2074 177.939 59.6244 cv
178.401 59.0524 178.995 58.7554 179.721 58.7554 cv
180.161 58.7554 180.535 58.8434 180.854 59.0194 cv
181.173 59.1954 181.437 59.4594 181.646 59.8114 cv
178.28 61.9124 mo
178.28 62.6384 178.423 63.2104 178.72 63.6284 cv
179.017 64.0464 179.435 64.2444 179.963 64.2444 cv
180.48 64.2444 180.887 64.0464 181.195 63.6284 cv
181.492 63.2104 181.646 62.6384 181.646 61.9124 cv
181.646 61.1864 181.492 60.6254 181.195 60.2074 cv
180.887 59.7894 180.48 59.5804 179.963 59.5804 cv
179.435 59.5804 179.017 59.7894 178.72 60.2074 cv
178.423 60.6254 178.28 61.1864 178.28 61.9124 cv
f
190.545 56.5664 mo
190.061 57.4024 189.709 58.2164 189.478 59.0194 cv
189.236 59.8224 189.126 60.6364 189.126 61.4614 cv
189.126 62.2974 189.236 63.1114 189.478 63.9144 cv
189.709 64.7284 190.061 65.5314 190.545 66.3564 cv
189.687 66.3564 li
189.148 65.5094 188.741 64.6954 188.477 63.8814 cv
188.213 63.0674 188.081 62.2644 188.081 61.4614 cv
188.081 60.6694 188.213 59.8664 188.477 59.0524 cv
188.741 58.2384 189.137 57.4134 189.687 56.5664 cv
190.545 56.5664 li
f
196.419 61.8354 mo
196.419 61.1314 196.265 60.5704 195.979 60.1744 cv
195.682 59.7784 195.264 59.5804 194.736 59.5804 cv
194.208 59.5804 193.79 59.7784 193.493 60.1744 cv
193.196 60.5704 193.053 61.1314 193.053 61.8354 cv
193.053 62.5504 193.196 63.1004 193.493 63.4964 cv
193.79 63.8924 194.208 64.0904 194.736 64.0904 cv
195.264 64.0904 195.682 63.8924 195.979 63.4964 cv
196.265 63.1004 196.419 62.5504 196.419 61.8354 cv
197.409 64.1674 mo
197.409 65.1794 197.178 65.9384 196.727 66.4444 cv
196.265 66.9394 195.572 67.1924 194.637 67.1924 cv
194.285 67.1924 193.966 67.1594 193.658 67.1154 cv
193.35 67.0604 193.042 66.9834 192.756 66.8734 cv
192.756 65.9164 li
193.042 66.0704 193.328 66.1804 193.614 66.2574 cv
193.9 66.3344 194.186 66.3784 194.483 66.3784 cv
195.121 66.3784 195.605 66.2024 195.935 65.8724 cv
196.254 65.5314 196.419 65.0254 196.419 64.3434 cv
196.419 63.8594 li
196.21 64.2114 195.946 64.4754 195.627 64.6514 cv
195.308 64.8274 194.934 64.9154 194.494 64.9154 cv
193.746 64.9154 193.152 64.6404 192.701 64.0794 cv
192.25 63.5184 192.03 62.7704 192.03 61.8354 cv
192.03 60.9114 192.25 60.1634 192.701 59.6024 cv
193.152 59.0414 193.746 58.7554 194.494 58.7554 cv
194.934 58.7554 195.308 58.8434 195.627 59.0194 cv
195.946 59.1954 196.21 59.4594 196.419 59.8114 cv
196.419 58.8984 li
197.409 58.8984 li
197.409 64.1674 li
f
199.444 56.5554 mo
200.434 56.5554 li
200.434 64.9154 li
199.444 64.9154 li
199.444 56.5554 li
f
204.834 59.5914 mo
204.306 59.5914 203.888 59.8004 203.58 60.2184 cv
203.272 60.6364 203.118 61.1974 203.118 61.9124 cv
203.118 62.6384 203.261 63.1994 203.569 63.6174 cv
203.877 64.0354 204.295 64.2334 204.834 64.2334 cv
205.362 64.2334 205.78 64.0354 206.088 63.6174 cv
206.396 63.1994 206.55 62.6384 206.55 61.9124 cv
206.55 61.2084 206.396 60.6364 206.088 60.2184 cv
205.78 59.8004 205.362 59.5914 204.834 59.5914 cv
204.834 58.7554 mo
205.692 58.7554 206.363 59.0414 206.858 59.5914 cv
207.342 60.1524 207.595 60.9224 207.595 61.9124 cv
207.595 62.9024 207.342 63.6724 206.858 64.2224 cv
206.363 64.7834 205.692 65.0584 204.834 65.0584 cv
203.965 65.0584 203.283 64.7834 202.799 64.2224 cv
202.315 63.6724 202.073 62.9024 202.073 61.9124 cv
202.073 60.9224 202.315 60.1524 202.799 59.5914 cv
203.283 59.0414 203.965 58.7554 204.834 58.7554 cv
f
213.557 61.9124 mo
213.557 61.1864 213.403 60.6254 213.106 60.2074 cv
212.798 59.7894 212.391 59.5804 211.874 59.5804 cv
211.346 59.5804 210.939 59.7894 210.642 60.2074 cv
210.334 60.6254 210.191 61.1864 210.191 61.9124 cv
210.191 62.6384 210.334 63.2104 210.642 63.6284 cv
210.939 64.0464 211.346 64.2444 211.874 64.2444 cv
212.391 64.2444 212.798 64.0464 213.106 63.6284 cv
213.403 63.2104 213.557 62.6384 213.557 61.9124 cv
210.191 59.8114 mo
210.389 59.4594 210.653 59.1954 210.972 59.0194 cv
211.291 58.8434 211.676 58.7554 212.116 58.7554 cv
212.842 58.7554 213.436 59.0524 213.898 59.6244 cv
214.349 60.2074 214.58 60.9664 214.58 61.9124 cv
214.58 62.8584 214.349 63.6284 213.898 64.2004 cv
213.436 64.7724 212.842 65.0584 212.116 65.0584 cv
211.676 65.0584 211.291 64.9704 210.972 64.8054 cv
210.653 64.6404 210.389 64.3764 210.191 64.0134 cv
210.191 64.9154 li
209.201 64.9154 li
209.201 56.5554 li
210.191 56.5554 li
210.191 59.8114 li
f
218.958 61.8904 mo
218.155 61.8904 217.605 61.9894 217.297 62.1654 cv
216.989 62.3524 216.835 62.6604 216.835 63.1004 cv
216.835 63.4524 216.945 63.7384 217.176 63.9364 cv
217.407 64.1454 217.726 64.2444 218.122 64.2444 cv
218.672 64.2444 219.112 64.0574 219.442 63.6614 cv
219.772 63.2764 219.937 62.7594 219.937 62.1104 cv
219.937 61.8904 li
218.958 61.8904 li
220.927 61.4834 mo
220.927 64.9154 li
219.937 64.9154 li
219.937 64.0024 li
219.706 64.3764 219.42 64.6404 219.09 64.8054 cv
218.76 64.9704 218.342 65.0584 217.858 65.0584 cv
217.242 65.0584 216.747 64.8934 216.384 64.5524 cv
216.021 64.2114 215.845 63.7494 215.845 63.1664 cv
215.845 62.4954 216.065 61.9894 216.527 61.6374 cv
216.978 61.2964 217.649 61.1204 218.551 61.1204 cv
219.937 61.1204 li
219.937 61.0214 li
219.937 60.5704 219.783 60.2184 219.486 59.9654 cv
219.189 59.7234 218.771 59.5914 218.232 59.5914 cv
217.88 59.5914 217.55 59.6354 217.22 59.7234 cv
216.89 59.8114 216.582 59.9324 216.285 60.0864 cv
216.285 59.1734 li
216.637 59.0414 216.989 58.9314 217.33 58.8654 cv
217.671 58.7994 218.001 58.7554 218.331 58.7554 cv
219.2 58.7554 219.849 58.9864 220.278 59.4374 cv
220.707 59.8884 220.927 60.5704 220.927 61.4834 cv
f
222.962 56.5554 mo
223.952 56.5554 li
223.952 64.9154 li
222.962 64.9154 li
222.962 56.5554 li
f
234.204 60.0534 mo
234.446 59.6134 234.743 59.2944 235.084 59.0744 cv
235.425 58.8654 235.832 58.7554 236.305 58.7554 cv
236.921 58.7554 237.405 58.9754 237.746 59.4154 cv
238.087 59.8554 238.263 60.4824 238.263 61.2854 cv
238.263 64.9154 li
237.273 64.9154 li
237.273 61.3184 li
237.273 60.7464 237.163 60.3174 236.965 60.0314 cv
236.756 59.7564 236.448 59.6134 236.03 59.6134 cv
235.513 59.6134 235.106 59.7894 234.809 60.1304 cv
234.512 60.4714 234.369 60.9334 234.369 61.5164 cv
234.369 64.9154 li
233.379 64.9154 li
233.379 61.3184 li
233.379 60.7464 233.269 60.3174 233.071 60.0314 cv
232.862 59.7564 232.543 59.6134 232.125 59.6134 cv
231.619 59.6134 231.212 59.7894 230.915 60.1304 cv
230.618 60.4714 230.475 60.9334 230.475 61.5164 cv
230.475 64.9154 li
229.485 64.9154 li
229.485 58.8984 li
230.475 58.8984 li
230.475 59.8334 li
230.695 59.4704 230.97 59.1954 231.289 59.0194 cv
231.597 58.8434 231.971 58.7554 232.411 58.7554 cv
232.851 58.7554 233.214 58.8654 233.522 59.0854 cv
233.83 59.3054 234.05 59.6354 234.204 60.0534 cv
f
245.38 61.6594 mo
245.38 62.1434 li
240.837 62.1434 li
240.881 62.8254 241.079 63.3534 241.453 63.7054 cv
241.816 64.0574 242.322 64.2334 242.982 64.2334 cv
243.356 64.2334 243.73 64.1894 244.082 64.1014 cv
244.434 64.0134 244.797 63.8704 245.149 63.6724 cv
245.149 64.6074 li
244.797 64.7614 244.434 64.8824 244.06 64.9484 cv
243.686 65.0144 243.301 65.0584 242.927 65.0584 cv
241.959 65.0584 241.2 64.7834 240.639 64.2334 cv
240.078 63.6834 239.803 62.9244 239.803 61.9674 cv
239.803 60.9884 240.067 60.2074 240.595 59.6244 cv
241.123 59.0524 241.849 58.7554 242.751 58.7554 cv
243.565 58.7554 244.203 59.0194 244.676 59.5364 cv
245.138 60.0644 245.38 60.7684 245.38 61.6594 cv
244.39 61.3734 mo
244.379 60.8344 244.225 60.4054 243.939 60.0754 cv
243.642 59.7564 243.246 59.5914 242.762 59.5914 cv
242.212 59.5914 241.772 59.7564 241.442 60.0644 cv
241.112 60.3724 240.914 60.8124 240.87 61.3734 cv
244.39 61.3734 li
f
251.683 60.0534 mo
251.925 59.6134 252.222 59.2944 252.563 59.0744 cv
252.904 58.8654 253.311 58.7554 253.784 58.7554 cv
254.4 58.7554 254.884 58.9754 255.225 59.4154 cv
255.566 59.8554 255.742 60.4824 255.742 61.2854 cv
255.742 64.9154 li
254.752 64.9154 li
254.752 61.3184 li
254.752 60.7464 254.642 60.3174 254.444 60.0314 cv
254.235 59.7564 253.927 59.6134 253.509 59.6134 cv
252.992 59.6134 252.585 59.7894 252.288 60.1304 cv
251.991 60.4714 251.848 60.9334 251.848 61.5164 cv
251.848 64.9154 li
250.858 64.9154 li
250.858 61.3184 li
250.858 60.7464 250.748 60.3174 250.55 60.0314 cv
250.341 59.7564 250.022 59.6134 249.604 59.6134 cv
249.098 59.6134 248.691 59.7894 248.394 60.1304 cv
248.097 60.4714 247.954 60.9334 247.954 61.5164 cv
247.954 64.9154 li
246.964 64.9154 li
246.964 58.8984 li
247.954 58.8984 li
247.954 59.8334 li
248.174 59.4704 248.449 59.1954 248.768 59.0194 cv
249.076 58.8434 249.45 58.7554 249.89 58.7554 cv
250.33 58.7554 250.693 58.8654 251.001 59.0854 cv
251.309 59.3054 251.529 59.6354 251.683 60.0534 cv
f
260.043 59.5914 mo
259.515 59.5914 259.097 59.8004 258.789 60.2184 cv
258.481 60.6364 258.327 61.1974 258.327 61.9124 cv
258.327 62.6384 258.47 63.1994 258.778 63.6174 cv
259.086 64.0354 259.504 64.2334 260.043 64.2334 cv
260.571 64.2334 260.989 64.0354 261.297 63.6174 cv
261.605 63.1994 261.759 62.6384 261.759 61.9124 cv
261.759 61.2084 261.605 60.6364 261.297 60.2184 cv
260.989 59.8004 260.571 59.5914 260.043 59.5914 cv
260.043 58.7554 mo
260.901 58.7554 261.572 59.0414 262.067 59.5914 cv
262.551 60.1524 262.804 60.9224 262.804 61.9124 cv
262.804 62.9024 262.551 63.6724 262.067 64.2224 cv
261.572 64.7834 260.901 65.0584 260.043 65.0584 cv
259.174 65.0584 258.492 64.7834 258.008 64.2224 cv
257.524 63.6724 257.282 62.9024 257.282 61.9124 cv
257.282 60.9224 257.524 60.1524 258.008 59.5914 cv
258.492 59.0414 259.174 58.7554 260.043 58.7554 cv
f
267.93 59.8224 mo
267.82 59.7564 267.699 59.7124 267.567 59.6794 cv
267.435 59.6574 267.292 59.6354 267.138 59.6354 cv
266.577 59.6354 266.148 59.8224 265.851 60.1854 cv
265.543 60.5484 265.4 61.0654 265.4 61.7474 cv
265.4 64.9154 li
264.41 64.9154 li
264.41 58.8984 li
265.4 58.8984 li
265.4 59.8334 li
265.598 59.4704 265.873 59.1954 266.203 59.0194 cv
266.533 58.8434 266.94 58.7554 267.424 58.7554 cv
267.655 58.7664 li
267.732 58.7774 267.82 58.7884 267.93 58.8104 cv
267.93 59.8224 li
f
271.472 65.4654 mo
271.186 66.1694 270.911 66.6424 270.647 66.8624 cv
270.383 67.0824 270.031 67.1924 269.591 67.1924 cv
268.799 67.1924 li
268.799 66.3674 li
269.382 66.3674 li
269.646 66.3674 269.855 66.3014 270.009 66.1694 cv
270.163 66.0374 270.328 65.7404 270.515 65.2564 cv
270.691 64.8164 li
268.26 58.8984 li
269.305 58.8984 li
271.186 63.6064 li
273.067 58.8984 li
274.112 58.8984 li
271.472 65.4654 li
f
275.322 56.5664 mo
276.18 56.5664 li
276.708 57.4134 277.115 58.2384 277.379 59.0524 cv
277.643 59.8664 277.786 60.6694 277.786 61.4614 cv
277.786 62.2644 277.643 63.0674 277.379 63.8814 cv
277.115 64.6954 276.708 65.5094 276.18 66.3564 cv
275.322 66.3564 li
275.795 65.5314 276.147 64.7284 276.389 63.9144 cv
276.62 63.1114 276.741 62.2974 276.741 61.4614 cv
276.741 60.6364 276.62 59.8224 276.389 59.0194 cv
276.147 58.2164 275.795 57.4024 275.322 56.5664 cv
f
89.664 81.4486 mo
93.9066 77.206 li
89.664 72.9633 li
85.4214 77.206 li
cp
.926818 .245335 1 .155612 cmyk
f
.5 lw
0 lc
89.664 81.4486 mo
93.9066 77.206 li
89.664 72.9633 li
85.4214 77.206 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
105.064 81.4486 mo
109.307 77.206 li
105.064 72.9633 li
100.821 77.206 li
cp
.926818 .245335 1 .155612 cmyk
f
105.064 81.4486 mo
109.307 77.206 li
105.064 72.9633 li
100.821 77.206 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
120.926 74.104 mo
119.452 78.097 li
122.4 78.097 li
120.926 74.104 li
120.31 73.037 mo
121.542 73.037 li
124.6 81.056 li
123.467 81.056 li
122.741 78.999 li
119.122 78.999 li
118.396 81.056 li
117.252 81.056 li
120.31 73.037 li
f
130.056 75.27 mo
130.056 76.194 li
129.77 76.04 129.495 75.93 129.209 75.853 cv
128.923 75.776 128.648 75.732 128.362 75.732 cv
127.724 75.732 127.218 75.941 126.866 76.348 cv
126.514 76.755 126.338 77.327 126.338 78.053 cv
126.338 78.79 126.514 79.362 126.866 79.769 cv
127.218 80.176 127.724 80.374 128.362 80.374 cv
128.648 80.374 128.923 80.341 129.209 80.264 cv
129.495 80.187 129.77 80.066 130.056 79.912 cv
130.056 80.825 li
129.77 80.957 129.484 81.056 129.198 81.111 cv
128.901 81.166 128.582 81.199 128.252 81.199 cv
127.35 81.199 126.624 80.924 126.096 80.352 cv
125.557 79.791 125.293 79.021 125.293 78.053 cv
125.293 77.074 125.557 76.304 126.096 75.743 cv
126.635 75.182 127.372 74.896 128.318 74.896 cv
128.626 74.896 128.923 74.929 129.209 74.995 cv
129.495 75.061 129.781 75.149 130.056 75.27 cv
f
136.777 77.426 mo
136.777 81.056 li
135.787 81.056 li
135.787 77.459 li
135.787 76.887 135.666 76.469 135.446 76.183 cv
135.226 75.897 134.896 75.754 134.456 75.754 cv
133.917 75.754 133.499 75.93 133.191 76.271 cv
132.883 76.612 132.729 77.074 132.729 77.657 cv
132.729 81.056 li
131.739 81.056 li
131.739 72.696 li
132.729 72.696 li
132.729 75.974 li
132.96 75.622 133.235 75.347 133.565 75.171 cv
133.884 74.995 134.258 74.896 134.676 74.896 cv
135.358 74.896 135.886 75.116 136.238 75.545 cv
136.59 75.974 136.777 76.601 136.777 77.426 cv
f
138.746 75.039 mo
139.736 75.039 li
139.736 81.056 li
138.746 81.056 li
138.746 75.039 li
138.746 72.696 mo
139.736 72.696 li
139.736 73.95 li
138.746 73.95 li
138.746 72.696 li
f
146.952 77.8 mo
146.952 78.284 li
142.409 78.284 li
142.453 78.966 142.651 79.494 143.025 79.846 cv
143.388 80.198 143.894 80.374 144.554 80.374 cv
144.928 80.374 145.302 80.33 145.654 80.242 cv
146.006 80.154 146.369 80.011 146.721 79.813 cv
146.721 80.748 li
146.369 80.902 146.006 81.023 145.632 81.089 cv
145.258 81.155 144.873 81.199 144.499 81.199 cv
143.531 81.199 142.772 80.924 142.211 80.374 cv
141.65 79.824 141.375 79.065 141.375 78.108 cv
141.375 77.129 141.639 76.348 142.167 75.765 cv
142.695 75.193 143.421 74.896 144.323 74.896 cv
145.137 74.896 145.775 75.16 146.248 75.677 cv
146.71 76.205 146.952 76.909 146.952 77.8 cv
145.962 77.514 mo
145.951 76.975 145.797 76.546 145.511 76.216 cv
145.214 75.897 144.818 75.732 144.334 75.732 cv
143.784 75.732 143.344 75.897 143.014 76.205 cv
142.684 76.513 142.486 76.953 142.442 77.514 cv
145.962 77.514 li
f
147.865 75.039 mo
148.91 75.039 li
150.791 80.088 li
152.672 75.039 li
153.717 75.039 li
151.462 81.056 li
150.12 81.056 li
147.865 75.039 li
f
157.82 78.031 mo
157.017 78.031 156.467 78.13 156.159 78.306 cv
155.851 78.493 155.697 78.801 155.697 79.241 cv
155.697 79.593 155.807 79.879 156.038 80.077 cv
156.269 80.286 156.588 80.385 156.984 80.385 cv
157.534 80.385 157.974 80.198 158.304 79.802 cv
158.634 79.417 158.799 78.9 158.799 78.251 cv
158.799 78.031 li
157.82 78.031 li
159.789 77.624 mo
159.789 81.056 li
158.799 81.056 li
158.799 80.143 li
158.568 80.517 158.282 80.781 157.952 80.946 cv
157.622 81.111 157.204 81.199 156.72 81.199 cv
156.104 81.199 155.609 81.034 155.246 80.693 cv
154.883 80.352 154.707 79.89 154.707 79.307 cv
154.707 78.636 154.927 78.13 155.389 77.778 cv
155.84 77.437 156.511 77.261 157.413 77.261 cv
158.799 77.261 li
158.799 77.162 li
158.799 76.711 158.645 76.359 158.348 76.106 cv
158.051 75.864 157.633 75.732 157.094 75.732 cv
156.742 75.732 156.412 75.776 156.082 75.864 cv
155.752 75.952 155.444 76.073 155.147 76.227 cv
155.147 75.314 li
155.499 75.182 155.851 75.072 156.192 75.006 cv
156.533 74.94 156.863 74.896 157.193 74.896 cv
158.062 74.896 158.711 75.127 159.14 75.578 cv
159.569 76.029 159.789 76.711 159.789 77.624 cv
f
166.147 78.053 mo
166.147 77.327 165.993 76.766 165.696 76.348 cv
165.388 75.93 164.981 75.721 164.464 75.721 cv
163.936 75.721 163.529 75.93 163.232 76.348 cv
162.924 76.766 162.781 77.327 162.781 78.053 cv
162.781 78.779 162.924 79.351 163.232 79.769 cv
163.529 80.187 163.936 80.385 164.464 80.385 cv
164.981 80.385 165.388 80.187 165.696 79.769 cv
165.993 79.351 166.147 78.779 166.147 78.053 cv
162.781 75.952 mo
162.979 75.6 163.243 75.336 163.562 75.16 cv
163.881 74.984 164.266 74.896 164.706 74.896 cv
165.432 74.896 166.026 75.193 166.488 75.765 cv
166.939 76.348 167.17 77.107 167.17 78.053 cv
167.17 78.999 166.939 79.769 166.488 80.341 cv
166.026 80.913 165.432 81.199 164.706 81.199 cv
164.266 81.199 163.881 81.111 163.562 80.946 cv
163.243 80.781 162.979 80.517 162.781 80.154 cv
162.781 81.056 li
161.791 81.056 li
161.791 72.696 li
162.781 72.696 li
162.781 75.952 li
f
168.809 72.696 mo
169.799 72.696 li
169.799 81.056 li
168.809 81.056 li
168.809 72.696 li
f
177.015 77.8 mo
177.015 78.284 li
172.472 78.284 li
172.516 78.966 172.714 79.494 173.088 79.846 cv
173.451 80.198 173.957 80.374 174.617 80.374 cv
174.991 80.374 175.365 80.33 175.717 80.242 cv
176.069 80.154 176.432 80.011 176.784 79.813 cv
176.784 80.748 li
176.432 80.902 176.069 81.023 175.695 81.089 cv
175.321 81.155 174.936 81.199 174.562 81.199 cv
173.594 81.199 172.835 80.924 172.274 80.374 cv
171.713 79.824 171.438 79.065 171.438 78.108 cv
171.438 77.129 171.702 76.348 172.23 75.765 cv
172.758 75.193 173.484 74.896 174.386 74.896 cv
175.2 74.896 175.838 75.16 176.311 75.677 cv
176.773 76.205 177.015 76.909 177.015 77.8 cv
176.025 77.514 mo
176.014 76.975 175.86 76.546 175.574 76.216 cv
175.277 75.897 174.881 75.732 174.397 75.732 cv
173.847 75.732 173.407 75.897 173.077 76.205 cv
172.747 76.513 172.549 76.953 172.505 77.514 cv
176.025 77.514 li
f
184.506 72.707 mo
184.022 73.543 183.67 74.357 183.439 75.16 cv
183.197 75.963 183.087 76.777 183.087 77.602 cv
183.087 78.438 183.197 79.252 183.439 80.055 cv
183.67 80.869 184.022 81.672 184.506 82.497 cv
183.648 82.497 li
183.109 81.65 182.702 80.836 182.438 80.022 cv
182.174 79.208 182.042 78.405 182.042 77.602 cv
182.042 76.81 182.174 76.007 182.438 75.193 cv
182.702 74.379 183.098 73.554 183.648 72.707 cv
184.506 72.707 li
f
190.38 77.976 mo
190.38 77.272 190.226 76.711 189.94 76.315 cv
189.643 75.919 189.225 75.721 188.697 75.721 cv
188.169 75.721 187.751 75.919 187.454 76.315 cv
187.157 76.711 187.014 77.272 187.014 77.976 cv
187.014 78.691 187.157 79.241 187.454 79.637 cv
187.751 80.033 188.169 80.231 188.697 80.231 cv
189.225 80.231 189.643 80.033 189.94 79.637 cv
190.226 79.241 190.38 78.691 190.38 77.976 cv
191.37 80.308 mo
191.37 81.32 191.139 82.079 190.688 82.585 cv
190.226 83.08 189.533 83.333 188.598 83.333 cv
188.246 83.333 187.927 83.3 187.619 83.256 cv
187.311 83.201 187.003 83.124 186.717 83.014 cv
186.717 82.057 li
187.003 82.211 187.289 82.321 187.575 82.398 cv
187.861 82.475 188.147 82.519 188.444 82.519 cv
189.082 82.519 189.566 82.343 189.896 82.013 cv
190.215 81.672 190.38 81.166 190.38 80.484 cv
190.38 80 li
190.171 80.352 189.907 80.616 189.588 80.792 cv
189.269 80.968 188.895 81.056 188.455 81.056 cv
187.707 81.056 187.113 80.781 186.662 80.22 cv
186.211 79.659 185.991 78.911 185.991 77.976 cv
185.991 77.052 186.211 76.304 186.662 75.743 cv
187.113 75.182 187.707 74.896 188.455 74.896 cv
188.895 74.896 189.269 74.984 189.588 75.16 cv
189.907 75.336 190.171 75.6 190.38 75.952 cv
190.38 75.039 li
191.37 75.039 li
191.37 80.308 li
f
193.405 72.696 mo
194.395 72.696 li
194.395 81.056 li
193.405 81.056 li
193.405 72.696 li
f
198.795 75.732 mo
198.267 75.732 197.849 75.941 197.541 76.359 cv
197.233 76.777 197.079 77.338 197.079 78.053 cv
197.079 78.779 197.222 79.34 197.53 79.758 cv
197.838 80.176 198.256 80.374 198.795 80.374 cv
199.323 80.374 199.741 80.176 200.049 79.758 cv
200.357 79.34 200.511 78.779 200.511 78.053 cv
200.511 77.349 200.357 76.777 200.049 76.359 cv
199.741 75.941 199.323 75.732 198.795 75.732 cv
198.795 74.896 mo
199.653 74.896 200.324 75.182 200.819 75.732 cv
201.303 76.293 201.556 77.063 201.556 78.053 cv
201.556 79.043 201.303 79.813 200.819 80.363 cv
200.324 80.924 199.653 81.199 198.795 81.199 cv
197.926 81.199 197.244 80.924 196.76 80.363 cv
196.276 79.813 196.034 79.043 196.034 78.053 cv
196.034 77.063 196.276 76.293 196.76 75.732 cv
197.244 75.182 197.926 74.896 198.795 74.896 cv
f
207.518 78.053 mo
207.518 77.327 207.364 76.766 207.067 76.348 cv
206.759 75.93 206.352 75.721 205.835 75.721 cv
205.307 75.721 204.9 75.93 204.603 76.348 cv
204.295 76.766 204.152 77.327 204.152 78.053 cv
204.152 78.779 204.295 79.351 204.603 79.769 cv
204.9 80.187 205.307 80.385 205.835 80.385 cv
206.352 80.385 206.759 80.187 207.067 79.769 cv
207.364 79.351 207.518 78.779 207.518 78.053 cv
204.152 75.952 mo
204.35 75.6 204.614 75.336 204.933 75.16 cv
205.252 74.984 205.637 74.896 206.077 74.896 cv
206.803 74.896 207.397 75.193 207.859 75.765 cv
208.31 76.348 208.541 77.107 208.541 78.053 cv
208.541 78.999 208.31 79.769 207.859 80.341 cv
207.397 80.913 206.803 81.199 206.077 81.199 cv
205.637 81.199 205.252 81.111 204.933 80.946 cv
204.614 80.781 204.35 80.517 204.152 80.154 cv
204.152 81.056 li
203.162 81.056 li
203.162 72.696 li
204.152 72.696 li
204.152 75.952 li
f
212.919 78.031 mo
212.116 78.031 211.566 78.13 211.258 78.306 cv
210.95 78.493 210.796 78.801 210.796 79.241 cv
210.796 79.593 210.906 79.879 211.137 80.077 cv
211.368 80.286 211.687 80.385 212.083 80.385 cv
212.633 80.385 213.073 80.198 213.403 79.802 cv
213.733 79.417 213.898 78.9 213.898 78.251 cv
213.898 78.031 li
212.919 78.031 li
214.888 77.624 mo
214.888 81.056 li
213.898 81.056 li
213.898 80.143 li
213.667 80.517 213.381 80.781 213.051 80.946 cv
212.721 81.111 212.303 81.199 211.819 81.199 cv
211.203 81.199 210.708 81.034 210.345 80.693 cv
209.982 80.352 209.806 79.89 209.806 79.307 cv
209.806 78.636 210.026 78.13 210.488 77.778 cv
210.939 77.437 211.61 77.261 212.512 77.261 cv
213.898 77.261 li
213.898 77.162 li
213.898 76.711 213.744 76.359 213.447 76.106 cv
213.15 75.864 212.732 75.732 212.193 75.732 cv
211.841 75.732 211.511 75.776 211.181 75.864 cv
210.851 75.952 210.543 76.073 210.246 76.227 cv
210.246 75.314 li
210.598 75.182 210.95 75.072 211.291 75.006 cv
211.632 74.94 211.962 74.896 212.292 74.896 cv
213.161 74.896 213.81 75.127 214.239 75.578 cv
214.668 76.029 214.888 76.711 214.888 77.624 cv
f
216.923 72.696 mo
217.913 72.696 li
217.913 81.056 li
216.923 81.056 li
216.923 72.696 li
f
228.165 76.194 mo
228.407 75.754 228.704 75.435 229.045 75.215 cv
229.386 75.006 229.793 74.896 230.266 74.896 cv
230.882 74.896 231.366 75.116 231.707 75.556 cv
232.048 75.996 232.224 76.623 232.224 77.426 cv
232.224 81.056 li
231.234 81.056 li
231.234 77.459 li
231.234 76.887 231.124 76.458 230.926 76.172 cv
230.717 75.897 230.409 75.754 229.991 75.754 cv
229.474 75.754 229.067 75.93 228.77 76.271 cv
228.473 76.612 228.33 77.074 228.33 77.657 cv
228.33 81.056 li
227.34 81.056 li
227.34 77.459 li
227.34 76.887 227.23 76.458 227.032 76.172 cv
226.823 75.897 226.504 75.754 226.086 75.754 cv
225.58 75.754 225.173 75.93 224.876 76.271 cv
224.579 76.612 224.436 77.074 224.436 77.657 cv
224.436 81.056 li
223.446 81.056 li
223.446 75.039 li
224.436 75.039 li
224.436 75.974 li
224.656 75.611 224.931 75.336 225.25 75.16 cv
225.558 74.984 225.932 74.896 226.372 74.896 cv
226.812 74.896 227.175 75.006 227.483 75.226 cv
227.791 75.446 228.011 75.776 228.165 76.194 cv
f
239.341 77.8 mo
239.341 78.284 li
234.798 78.284 li
234.842 78.966 235.04 79.494 235.414 79.846 cv
235.777 80.198 236.283 80.374 236.943 80.374 cv
237.317 80.374 237.691 80.33 238.043 80.242 cv
238.395 80.154 238.758 80.011 239.11 79.813 cv
239.11 80.748 li
238.758 80.902 238.395 81.023 238.021 81.089 cv
237.647 81.155 237.262 81.199 236.888 81.199 cv
235.92 81.199 235.161 80.924 234.6 80.374 cv
234.039 79.824 233.764 79.065 233.764 78.108 cv
233.764 77.129 234.028 76.348 234.556 75.765 cv
235.084 75.193 235.81 74.896 236.712 74.896 cv
237.526 74.896 238.164 75.16 238.637 75.677 cv
239.099 76.205 239.341 76.909 239.341 77.8 cv
238.351 77.514 mo
238.34 76.975 238.186 76.546 237.9 76.216 cv
237.603 75.897 237.207 75.732 236.723 75.732 cv
236.173 75.732 235.733 75.897 235.403 76.205 cv
235.073 76.513 234.875 76.953 234.831 77.514 cv
238.351 77.514 li
f
245.644 76.194 mo
245.886 75.754 246.183 75.435 246.524 75.215 cv
246.865 75.006 247.272 74.896 247.745 74.896 cv
248.361 74.896 248.845 75.116 249.186 75.556 cv
249.527 75.996 249.703 76.623 249.703 77.426 cv
249.703 81.056 li
248.713 81.056 li
248.713 77.459 li
248.713 76.887 248.603 76.458 248.405 76.172 cv
248.196 75.897 247.888 75.754 247.47 75.754 cv
246.953 75.754 246.546 75.93 246.249 76.271 cv
245.952 76.612 245.809 77.074 245.809 77.657 cv
245.809 81.056 li
244.819 81.056 li
244.819 77.459 li
244.819 76.887 244.709 76.458 244.511 76.172 cv
244.302 75.897 243.983 75.754 243.565 75.754 cv
243.059 75.754 242.652 75.93 242.355 76.271 cv
242.058 76.612 241.915 77.074 241.915 77.657 cv
241.915 81.056 li
240.925 81.056 li
240.925 75.039 li
241.915 75.039 li
241.915 75.974 li
242.135 75.611 242.41 75.336 242.729 75.16 cv
243.037 74.984 243.411 74.896 243.851 74.896 cv
244.291 74.896 244.654 75.006 244.962 75.226 cv
245.27 75.446 245.49 75.776 245.644 76.194 cv
f
254.004 75.732 mo
253.476 75.732 253.058 75.941 252.75 76.359 cv
252.442 76.777 252.288 77.338 252.288 78.053 cv
252.288 78.779 252.431 79.34 252.739 79.758 cv
253.047 80.176 253.465 80.374 254.004 80.374 cv
254.532 80.374 254.95 80.176 255.258 79.758 cv
255.566 79.34 255.72 78.779 255.72 78.053 cv
255.72 77.349 255.566 76.777 255.258 76.359 cv
254.95 75.941 254.532 75.732 254.004 75.732 cv
254.004 74.896 mo
254.862 74.896 255.533 75.182 256.028 75.732 cv
256.512 76.293 256.765 77.063 256.765 78.053 cv
256.765 79.043 256.512 79.813 256.028 80.363 cv
255.533 80.924 254.862 81.199 254.004 81.199 cv
253.135 81.199 252.453 80.924 251.969 80.363 cv
251.485 79.813 251.243 79.043 251.243 78.053 cv
251.243 77.063 251.485 76.293 251.969 75.732 cv
252.453 75.182 253.135 74.896 254.004 74.896 cv
f
261.891 75.963 mo
261.781 75.897 261.66 75.853 261.528 75.82 cv
261.396 75.798 261.253 75.776 261.099 75.776 cv
260.538 75.776 260.109 75.963 259.812 76.326 cv
259.504 76.689 259.361 77.206 259.361 77.888 cv
259.361 81.056 li
258.371 81.056 li
258.371 75.039 li
259.361 75.039 li
259.361 75.974 li
259.559 75.611 259.834 75.336 260.164 75.16 cv
260.494 74.984 260.901 74.896 261.385 74.896 cv
261.616 74.907 li
261.693 74.918 261.781 74.929 261.891 74.951 cv
261.891 75.963 li
f
265.433 81.606 mo
265.147 82.31 264.872 82.783 264.608 83.003 cv
264.344 83.223 263.992 83.333 263.552 83.333 cv
262.76 83.333 li
262.76 82.508 li
263.343 82.508 li
263.607 82.508 263.816 82.442 263.97 82.31 cv
264.124 82.178 264.289 81.881 264.476 81.397 cv
264.652 80.957 li
262.221 75.039 li
263.266 75.039 li
265.147 79.747 li
267.028 75.039 li
268.073 75.039 li
265.433 81.606 li
f
269.283 72.707 mo
270.141 72.707 li
270.669 73.554 271.076 74.379 271.34 75.193 cv
271.604 76.007 271.747 76.81 271.747 77.602 cv
271.747 78.405 271.604 79.208 271.34 80.022 cv
271.076 80.836 270.669 81.65 270.141 82.497 cv
269.283 82.497 li
269.756 81.672 270.108 80.869 270.35 80.055 cv
270.581 79.252 270.702 78.438 270.702 77.602 cv
270.702 76.777 270.581 75.963 270.35 75.16 cv
270.108 74.357 269.756 73.543 269.283 72.707 cv
f
86.664 96.3466 mo
92.664 96.3466 li
92.664 90.3466 li
86.664 90.3466 li
cp
0 1 1 0 cmyk
f
86.664 96.3466 mo
92.664 96.3466 li
92.664 90.3466 li
86.664 90.3466 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
102.064 96.3466 mo
108.064 96.3466 li
108.064 90.3466 li
102.064 90.3466 li
cp
0 1 1 0 cmyk
f
102.064 96.3466 mo
108.064 96.3466 li
108.064 90.3466 li
102.064 90.3466 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
122.048 93.4346 mo
122.279 93.5226 122.51 93.6876 122.73 93.9406 cv
122.95 94.2046 123.17 94.5566 123.39 95.0076 cv
124.49 97.1966 li
123.324 97.1966 li
122.301 95.1396 li
122.037 94.6116 121.773 94.2486 121.531 94.0726 cv
121.278 93.8966 120.937 93.8086 120.508 93.8086 cv
119.331 93.8086 li
119.331 97.1966 li
118.242 97.1966 li
118.242 89.1776 li
120.695 89.1776 li
121.608 89.1776 122.29 89.3756 122.741 89.7496 cv
123.192 90.1346 123.423 90.7176 123.423 91.4876 cv
123.423 91.9936 123.302 92.4226 123.071 92.7526 cv
122.829 93.0826 122.488 93.3136 122.048 93.4346 cv
119.331 90.0686 mo
119.331 92.9176 li
120.695 92.9176 li
121.212 92.9176 121.608 92.7966 121.872 92.5546 cv
122.136 92.3126 122.279 91.9606 122.279 91.4876 cv
122.279 91.0256 122.136 90.6736 121.872 90.4316 cv
121.608 90.1896 121.212 90.0686 120.695 90.0686 cv
119.331 90.0686 li
f
130.991 93.9406 mo
130.991 94.4246 li
126.448 94.4246 li
126.492 95.1066 126.69 95.6346 127.064 95.9866 cv
127.427 96.3386 127.933 96.5146 128.593 96.5146 cv
128.967 96.5146 129.341 96.4706 129.693 96.3826 cv
130.045 96.2946 130.408 96.1516 130.76 95.9536 cv
130.76 96.8886 li
130.408 97.0426 130.045 97.1636 129.671 97.2296 cv
129.297 97.2956 128.912 97.3396 128.538 97.3396 cv
127.57 97.3396 126.811 97.0646 126.25 96.5146 cv
125.689 95.9646 125.414 95.2056 125.414 94.2486 cv
125.414 93.2696 125.678 92.4886 126.206 91.9056 cv
126.734 91.3336 127.46 91.0366 128.362 91.0366 cv
129.176 91.0366 129.814 91.3006 130.287 91.8176 cv
130.749 92.3456 130.991 93.0496 130.991 93.9406 cv
130.001 93.6546 mo
129.99 93.1156 129.836 92.6866 129.55 92.3566 cv
129.253 92.0376 128.857 91.8726 128.373 91.8726 cv
127.823 91.8726 127.383 92.0376 127.053 92.3456 cv
126.723 92.6536 126.525 93.0936 126.481 93.6546 cv
130.001 93.6546 li
f
135.347 94.1716 mo
134.544 94.1716 133.994 94.2706 133.686 94.4466 cv
133.378 94.6336 133.224 94.9416 133.224 95.3816 cv
133.224 95.7336 133.334 96.0196 133.565 96.2176 cv
133.796 96.4266 134.115 96.5256 134.511 96.5256 cv
135.061 96.5256 135.501 96.3386 135.831 95.9426 cv
136.161 95.5576 136.326 95.0406 136.326 94.3916 cv
136.326 94.1716 li
135.347 94.1716 li
137.316 93.7646 mo
137.316 97.1966 li
136.326 97.1966 li
136.326 96.2836 li
136.095 96.6576 135.809 96.9216 135.479 97.0866 cv
135.149 97.2516 134.731 97.3396 134.247 97.3396 cv
133.631 97.3396 133.136 97.1746 132.773 96.8336 cv
132.41 96.4926 132.234 96.0306 132.234 95.4476 cv
132.234 94.7766 132.454 94.2706 132.916 93.9186 cv
133.367 93.5776 134.038 93.4016 134.94 93.4016 cv
136.326 93.4016 li
136.326 93.3026 li
136.326 92.8516 136.172 92.4996 135.875 92.2466 cv
135.578 92.0046 135.16 91.8726 134.621 91.8726 cv
134.269 91.8726 133.939 91.9166 133.609 92.0046 cv
133.279 92.0926 132.971 92.2136 132.674 92.3676 cv
132.674 91.4546 li
133.026 91.3226 133.378 91.2126 133.719 91.1466 cv
134.06 91.0806 134.39 91.0366 134.72 91.0366 cv
135.589 91.0366 136.238 91.2676 136.667 91.7186 cv
137.096 92.1696 137.316 92.8516 137.316 93.7646 cv
f
139.351 88.8366 mo
140.341 88.8366 li
140.341 97.1966 li
139.351 97.1966 li
139.351 88.8366 li
f
148.283 88.8476 mo
147.799 89.6836 147.447 90.4976 147.216 91.3006 cv
146.974 92.1036 146.864 92.9176 146.864 93.7426 cv
146.864 94.5786 146.974 95.3926 147.216 96.1956 cv
147.447 97.0096 147.799 97.8126 148.283 98.6376 cv
147.425 98.6376 li
146.886 97.7906 146.479 96.9766 146.215 96.1626 cv
145.951 95.3486 145.819 94.5456 145.819 93.7426 cv
145.819 92.9506 145.951 92.1476 146.215 91.3336 cv
146.479 90.5196 146.875 89.6946 147.425 88.8476 cv
148.283 88.8476 li
f
154.157 94.1166 mo
154.157 93.4126 154.003 92.8516 153.717 92.4556 cv
153.42 92.0596 153.002 91.8616 152.474 91.8616 cv
151.946 91.8616 151.528 92.0596 151.231 92.4556 cv
150.934 92.8516 150.791 93.4126 150.791 94.1166 cv
150.791 94.8316 150.934 95.3816 151.231 95.7776 cv
151.528 96.1736 151.946 96.3716 152.474 96.3716 cv
153.002 96.3716 153.42 96.1736 153.717 95.7776 cv
154.003 95.3816 154.157 94.8316 154.157 94.1166 cv
155.147 96.4486 mo
155.147 97.4606 154.916 98.2196 154.465 98.7256 cv
154.003 99.2206 153.31 99.4736 152.375 99.4736 cv
152.023 99.4736 151.704 99.4406 151.396 99.3966 cv
151.088 99.3416 150.78 99.2646 150.494 99.1546 cv
150.494 98.1976 li
150.78 98.3516 151.066 98.4616 151.352 98.5386 cv
151.638 98.6156 151.924 98.6596 152.221 98.6596 cv
152.859 98.6596 153.343 98.4836 153.673 98.1536 cv
153.992 97.8126 154.157 97.3066 154.157 96.6246 cv
154.157 96.1406 li
153.948 96.4926 153.684 96.7566 153.365 96.9326 cv
153.046 97.1086 152.672 97.1966 152.232 97.1966 cv
151.484 97.1966 150.89 96.9216 150.439 96.3606 cv
149.988 95.7996 149.768 95.0516 149.768 94.1166 cv
149.768 93.1926 149.988 92.4446 150.439 91.8836 cv
150.89 91.3226 151.484 91.0366 152.232 91.0366 cv
152.672 91.0366 153.046 91.1246 153.365 91.3006 cv
153.684 91.4766 153.948 91.7406 154.157 92.0926 cv
154.157 91.1796 li
155.147 91.1796 li
155.147 96.4486 li
f
157.182 88.8366 mo
158.172 88.8366 li
158.172 97.1966 li
157.182 97.1966 li
157.182 88.8366 li
f
162.572 91.8726 mo
162.044 91.8726 161.626 92.0816 161.318 92.4996 cv
161.01 92.9176 160.856 93.4786 160.856 94.1936 cv
160.856 94.9196 160.999 95.4806 161.307 95.8986 cv
161.615 96.3166 162.033 96.5146 162.572 96.5146 cv
163.1 96.5146 163.518 96.3166 163.826 95.8986 cv
164.134 95.4806 164.288 94.9196 164.288 94.1936 cv
164.288 93.4896 164.134 92.9176 163.826 92.4996 cv
163.518 92.0816 163.1 91.8726 162.572 91.8726 cv
162.572 91.0366 mo
163.43 91.0366 164.101 91.3226 164.596 91.8726 cv
165.08 92.4336 165.333 93.2036 165.333 94.1936 cv
165.333 95.1836 165.08 95.9536 164.596 96.5036 cv
164.101 97.0646 163.43 97.3396 162.572 97.3396 cv
161.703 97.3396 161.021 97.0646 160.537 96.5036 cv
160.053 95.9536 159.811 95.1836 159.811 94.1936 cv
159.811 93.2036 160.053 92.4336 160.537 91.8726 cv
161.021 91.3226 161.703 91.0366 162.572 91.0366 cv
f
171.295 94.1936 mo
171.295 93.4676 171.141 92.9066 170.844 92.4886 cv
170.536 92.0706 170.129 91.8616 169.612 91.8616 cv
169.084 91.8616 168.677 92.0706 168.38 92.4886 cv
168.072 92.9066 167.929 93.4676 167.929 94.1936 cv
167.929 94.9196 168.072 95.4916 168.38 95.9096 cv
168.677 96.3276 169.084 96.5256 169.612 96.5256 cv
170.129 96.5256 170.536 96.3276 170.844 95.9096 cv
171.141 95.4916 171.295 94.9196 171.295 94.1936 cv
167.929 92.0926 mo
168.127 91.7406 168.391 91.4766 168.71 91.3006 cv
169.029 91.1246 169.414 91.0366 169.854 91.0366 cv
170.58 91.0366 171.174 91.3336 171.636 91.9056 cv
172.087 92.4886 172.318 93.2476 172.318 94.1936 cv
172.318 95.1396 172.087 95.9096 171.636 96.4816 cv
171.174 97.0536 170.58 97.3396 169.854 97.3396 cv
169.414 97.3396 169.029 97.2516 168.71 97.0866 cv
168.391 96.9216 168.127 96.6576 167.929 96.2946 cv
167.929 97.1966 li
166.939 97.1966 li
166.939 88.8366 li
167.929 88.8366 li
167.929 92.0926 li
f
176.696 94.1716 mo
175.893 94.1716 175.343 94.2706 175.035 94.4466 cv
174.727 94.6336 174.573 94.9416 174.573 95.3816 cv
174.573 95.7336 174.683 96.0196 174.914 96.2176 cv
175.145 96.4266 175.464 96.5256 175.86 96.5256 cv
176.41 96.5256 176.85 96.3386 177.18 95.9426 cv
177.51 95.5576 177.675 95.0406 177.675 94.3916 cv
177.675 94.1716 li
176.696 94.1716 li
178.665 93.7646 mo
178.665 97.1966 li
177.675 97.1966 li
177.675 96.2836 li
177.444 96.6576 177.158 96.9216 176.828 97.0866 cv
176.498 97.2516 176.08 97.3396 175.596 97.3396 cv
174.98 97.3396 174.485 97.1746 174.122 96.8336 cv
173.759 96.4926 173.583 96.0306 173.583 95.4476 cv
173.583 94.7766 173.803 94.2706 174.265 93.9186 cv
174.716 93.5776 175.387 93.4016 176.289 93.4016 cv
177.675 93.4016 li
177.675 93.3026 li
177.675 92.8516 177.521 92.4996 177.224 92.2466 cv
176.927 92.0046 176.509 91.8726 175.97 91.8726 cv
175.618 91.8726 175.288 91.9166 174.958 92.0046 cv
174.628 92.0926 174.32 92.2136 174.023 92.3676 cv
174.023 91.4546 li
174.375 91.3226 174.727 91.2126 175.068 91.1466 cv
175.409 91.0806 175.739 91.0366 176.069 91.0366 cv
176.938 91.0366 177.587 91.2676 178.016 91.7186 cv
178.445 92.1696 178.665 92.8516 178.665 93.7646 cv
f
180.7 88.8366 mo
181.69 88.8366 li
181.69 97.1966 li
180.7 97.1966 li
180.7 88.8366 li
f
191.942 92.3346 mo
192.184 91.8946 192.481 91.5756 192.822 91.3556 cv
193.163 91.1466 193.57 91.0366 194.043 91.0366 cv
194.659 91.0366 195.143 91.2566 195.484 91.6966 cv
195.825 92.1366 196.001 92.7636 196.001 93.5666 cv
196.001 97.1966 li
195.011 97.1966 li
195.011 93.5996 li
195.011 93.0276 194.901 92.5986 194.703 92.3126 cv
194.494 92.0376 194.186 91.8946 193.768 91.8946 cv
193.251 91.8946 192.844 92.0706 192.547 92.4116 cv
192.25 92.7526 192.107 93.2146 192.107 93.7976 cv
192.107 97.1966 li
191.117 97.1966 li
191.117 93.5996 li
191.117 93.0276 191.007 92.5986 190.809 92.3126 cv
190.6 92.0376 190.281 91.8946 189.863 91.8946 cv
189.357 91.8946 188.95 92.0706 188.653 92.4116 cv
188.356 92.7526 188.213 93.2146 188.213 93.7976 cv
188.213 97.1966 li
187.223 97.1966 li
187.223 91.1796 li
188.213 91.1796 li
188.213 92.1146 li
188.433 91.7516 188.708 91.4766 189.027 91.3006 cv
189.335 91.1246 189.709 91.0366 190.149 91.0366 cv
190.589 91.0366 190.952 91.1466 191.26 91.3666 cv
191.568 91.5866 191.788 91.9166 191.942 92.3346 cv
f
203.118 93.9406 mo
203.118 94.4246 li
198.575 94.4246 li
198.619 95.1066 198.817 95.6346 199.191 95.9866 cv
199.554 96.3386 200.06 96.5146 200.72 96.5146 cv
201.094 96.5146 201.468 96.4706 201.82 96.3826 cv
202.172 96.2946 202.535 96.1516 202.887 95.9536 cv
202.887 96.8886 li
202.535 97.0426 202.172 97.1636 201.798 97.2296 cv
201.424 97.2956 201.039 97.3396 200.665 97.3396 cv
199.697 97.3396 198.938 97.0646 198.377 96.5146 cv
197.816 95.9646 197.541 95.2056 197.541 94.2486 cv
197.541 93.2696 197.805 92.4886 198.333 91.9056 cv
198.861 91.3336 199.587 91.0366 200.489 91.0366 cv
201.303 91.0366 201.941 91.3006 202.414 91.8176 cv
202.876 92.3456 203.118 93.0496 203.118 93.9406 cv
202.128 93.6546 mo
202.117 93.1156 201.963 92.6866 201.677 92.3566 cv
201.38 92.0376 200.984 91.8726 200.5 91.8726 cv
199.95 91.8726 199.51 92.0376 199.18 92.3456 cv
198.85 92.6536 198.652 93.0936 198.608 93.6546 cv
202.128 93.6546 li
f
209.421 92.3346 mo
209.663 91.8946 209.96 91.5756 210.301 91.3556 cv
210.642 91.1466 211.049 91.0366 211.522 91.0366 cv
212.138 91.0366 212.622 91.2566 212.963 91.6966 cv
213.304 92.1366 213.48 92.7636 213.48 93.5666 cv
213.48 97.1966 li
212.49 97.1966 li
212.49 93.5996 li
212.49 93.0276 212.38 92.5986 212.182 92.3126 cv
211.973 92.0376 211.665 91.8946 211.247 91.8946 cv
210.73 91.8946 210.323 92.0706 210.026 92.4116 cv
209.729 92.7526 209.586 93.2146 209.586 93.7976 cv
209.586 97.1966 li
208.596 97.1966 li
208.596 93.5996 li
208.596 93.0276 208.486 92.5986 208.288 92.3126 cv
208.079 92.0376 207.76 91.8946 207.342 91.8946 cv
206.836 91.8946 206.429 92.0706 206.132 92.4116 cv
205.835 92.7526 205.692 93.2146 205.692 93.7976 cv
205.692 97.1966 li
204.702 97.1966 li
204.702 91.1796 li
205.692 91.1796 li
205.692 92.1146 li
205.912 91.7516 206.187 91.4766 206.506 91.3006 cv
206.814 91.1246 207.188 91.0366 207.628 91.0366 cv
208.068 91.0366 208.431 91.1466 208.739 91.3666 cv
209.047 91.5866 209.267 91.9166 209.421 92.3346 cv
f
217.781 91.8726 mo
217.253 91.8726 216.835 92.0816 216.527 92.4996 cv
216.219 92.9176 216.065 93.4786 216.065 94.1936 cv
216.065 94.9196 216.208 95.4806 216.516 95.8986 cv
216.824 96.3166 217.242 96.5146 217.781 96.5146 cv
218.309 96.5146 218.727 96.3166 219.035 95.8986 cv
219.343 95.4806 219.497 94.9196 219.497 94.1936 cv
219.497 93.4896 219.343 92.9176 219.035 92.4996 cv
218.727 92.0816 218.309 91.8726 217.781 91.8726 cv
217.781 91.0366 mo
218.639 91.0366 219.31 91.3226 219.805 91.8726 cv
220.289 92.4336 220.542 93.2036 220.542 94.1936 cv
220.542 95.1836 220.289 95.9536 219.805 96.5036 cv
219.31 97.0646 218.639 97.3396 217.781 97.3396 cv
216.912 97.3396 216.23 97.0646 215.746 96.5036 cv
215.262 95.9536 215.02 95.1836 215.02 94.1936 cv
215.02 93.2036 215.262 92.4336 215.746 91.8726 cv
216.23 91.3226 216.912 91.0366 217.781 91.0366 cv
f
225.668 92.1036 mo
225.558 92.0376 225.437 91.9936 225.305 91.9606 cv
225.173 91.9386 225.03 91.9166 224.876 91.9166 cv
224.315 91.9166 223.886 92.1036 223.589 92.4666 cv
223.281 92.8296 223.138 93.3466 223.138 94.0286 cv
223.138 97.1966 li
222.148 97.1966 li
222.148 91.1796 li
223.138 91.1796 li
223.138 92.1146 li
223.336 91.7516 223.611 91.4766 223.941 91.3006 cv
224.271 91.1246 224.678 91.0366 225.162 91.0366 cv
225.393 91.0476 li
225.47 91.0586 225.558 91.0696 225.668 91.0916 cv
225.668 92.1036 li
f
229.21 97.7466 mo
228.924 98.4506 228.649 98.9236 228.385 99.1436 cv
228.121 99.3636 227.769 99.4736 227.329 99.4736 cv
226.537 99.4736 li
226.537 98.6486 li
227.12 98.6486 li
227.384 98.6486 227.593 98.5826 227.747 98.4506 cv
227.901 98.3186 228.066 98.0216 228.253 97.5376 cv
228.429 97.0976 li
225.998 91.1796 li
227.043 91.1796 li
228.924 95.8876 li
230.805 91.1796 li
231.85 91.1796 li
229.21 97.7466 li
f
233.06 88.8476 mo
233.918 88.8476 li
234.446 89.6946 234.853 90.5196 235.117 91.3336 cv
235.381 92.1476 235.524 92.9506 235.524 93.7426 cv
235.524 94.5456 235.381 95.3486 235.117 96.1626 cv
234.853 96.9766 234.446 97.7906 233.918 98.6376 cv
233.06 98.6376 li
233.533 97.8126 233.885 97.0096 234.127 96.1956 cv
234.358 95.3926 234.479 94.5786 234.479 93.7426 cv
234.479 92.9176 234.358 92.1036 234.127 91.3006 cv
233.885 90.4976 233.533 89.6836 233.06 88.8476 cv
f
gsave
299.886 64.3154 mo
306.386 64.3154 li
306.386 57.8154 li
299.886 57.8154 li
299.886 64.3154 li
clp
303.136 64.0654 mo
303.931 64.0654 304.695 63.7493 305.257 63.1867 cv
305.82 62.6241 306.136 61.861 306.136 61.0654 cv
306.136 60.2698 305.82 59.5066 305.257 58.944 cv
304.695 58.3815 303.931 58.0654 303.136 58.0654 cv
302.34 58.0654 301.577 58.3815 301.015 58.944 cv
300.452 59.5066 300.136 60.2698 300.136 61.0654 cv
300.136 61.861 300.452 62.6241 301.015 63.1867 cv
301.577 63.7493 302.34 64.0654 303.136 64.0654 cv
cp
.309697 .140841 1 .00030518 cmyk
f
303.136 64.0654 mo
303.931 64.0654 304.695 63.7493 305.257 63.1867 cv
305.82 62.6241 306.136 61.861 306.136 61.0654 cv
306.136 60.2698 305.82 59.5066 305.257 58.944 cv
304.695 58.3815 303.931 58.0654 303.136 58.0654 cv
302.34 58.0654 301.577 58.3815 301.015 58.944 cv
300.452 59.5066 300.136 60.2698 300.136 61.0654 cv
300.136 61.861 300.452 62.6241 301.015 63.1867 cv
301.577 63.7493 302.34 64.0654 303.136 64.0654 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
gsave
315.286 64.3154 mo
321.786 64.3154 li
321.786 57.8154 li
315.286 57.8154 li
315.286 64.3154 li
clp
318.536 64.0654 mo
319.331 64.0654 320.095 63.7493 320.657 63.1867 cv
321.22 62.6241 321.536 61.861 321.536 61.0654 cv
321.536 60.2698 321.22 59.5066 320.657 58.944 cv
320.095 58.3815 319.331 58.0654 318.536 58.0654 cv
317.74 58.0654 316.977 58.3815 316.415 58.944 cv
315.852 59.5066 315.536 60.2698 315.536 61.0654 cv
315.536 61.861 315.852 62.6241 316.415 63.1867 cv
316.977 63.7493 317.74 64.0654 318.536 64.0654 cv
cp
.309697 .140841 1 .00030518 cmyk
f
318.536 64.0654 mo
319.331 64.0654 320.095 63.7493 320.657 63.1867 cv
321.22 62.6241 321.536 61.861 321.536 61.0654 cv
321.536 60.2698 321.22 59.5066 320.657 58.944 cv
320.095 58.3815 319.331 58.0654 318.536 58.0654 cv
317.74 58.0654 316.977 58.3815 316.415 58.944 cv
315.852 59.5066 315.536 60.2698 315.536 61.0654 cv
315.536 61.861 315.852 62.6241 316.415 63.1867 cv
316.977 63.7493 317.74 64.0654 318.536 64.0654 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
337.72 57.5124 mo
337.72 58.6564 li
337.346 58.3264 336.961 58.0734 336.543 57.8974 cv
336.125 57.7324 335.696 57.6444 335.234 57.6444 cv
334.31 57.6444 333.606 57.9304 333.122 58.4914 cv
332.638 59.0524 332.396 59.8554 332.396 60.9114 cv
332.396 61.9674 332.638 62.7814 333.122 63.3424 cv
333.606 63.9034 334.31 64.1784 335.234 64.1784 cv
335.696 64.1784 336.125 64.1014 336.543 63.9254 cv
336.961 63.7604 337.346 63.5074 337.72 63.1664 cv
337.72 64.2994 li
337.335 64.5634 336.928 64.7504 336.51 64.8714 cv
336.092 64.9924 335.641 65.0584 335.168 65.0584 cv
333.958 65.0584 333.001 64.6954 332.297 63.9584 cv
331.593 63.2214 331.252 62.2094 331.252 60.9114 cv
331.252 59.6244 331.593 58.6124 332.297 57.8644 cv
333.001 57.1274 333.958 56.7534 335.168 56.7534 cv
335.652 56.7534 336.103 56.8194 336.521 56.9404 cv
336.939 57.0724 337.346 57.2594 337.72 57.5124 cv
f
341.68 59.5914 mo
341.152 59.5914 340.734 59.8004 340.426 60.2184 cv
340.118 60.6364 339.964 61.1974 339.964 61.9124 cv
339.964 62.6384 340.107 63.1994 340.415 63.6174 cv
340.723 64.0354 341.141 64.2334 341.68 64.2334 cv
342.208 64.2334 342.626 64.0354 342.934 63.6174 cv
343.242 63.1994 343.396 62.6384 343.396 61.9124 cv
343.396 61.2084 343.242 60.6364 342.934 60.2184 cv
342.626 59.8004 342.208 59.5914 341.68 59.5914 cv
341.68 58.7554 mo
342.538 58.7554 343.209 59.0414 343.704 59.5914 cv
344.188 60.1524 344.441 60.9224 344.441 61.9124 cv
344.441 62.9024 344.188 63.6724 343.704 64.2224 cv
343.209 64.7834 342.538 65.0584 341.68 65.0584 cv
340.811 65.0584 340.129 64.7834 339.645 64.2224 cv
339.161 63.6724 338.919 62.9024 338.919 61.9124 cv
338.919 60.9224 339.161 60.1524 339.645 59.5914 cv
340.129 59.0414 340.811 58.7554 341.68 58.7554 cv
f
351.085 61.2854 mo
351.085 64.9154 li
350.095 64.9154 li
350.095 61.3184 li
350.095 60.7464 349.974 60.3284 349.754 60.0424 cv
349.534 59.7564 349.204 59.6134 348.764 59.6134 cv
348.225 59.6134 347.807 59.7894 347.499 60.1304 cv
347.191 60.4714 347.037 60.9334 347.037 61.5164 cv
347.037 64.9154 li
346.047 64.9154 li
346.047 58.8984 li
347.037 58.8984 li
347.037 59.8334 li
347.268 59.4814 347.543 59.2064 347.873 59.0304 cv
348.192 58.8544 348.566 58.7554 348.984 58.7554 cv
349.666 58.7554 350.194 58.9754 350.546 59.4044 cv
350.898 59.8334 351.085 60.4604 351.085 61.2854 cv
f
356.893 59.0744 mo
356.893 60.0094 li
356.607 59.8774 356.321 59.7674 356.024 59.6904 cv
355.716 59.6244 355.408 59.5804 355.089 59.5804 cv
354.594 59.5804 354.22 59.6574 353.978 59.8114 cv
353.736 59.9654 353.615 60.1854 353.615 60.4824 cv
353.615 60.7134 353.703 60.8894 353.879 61.0214 cv
354.055 61.1534 354.407 61.2854 354.935 61.3954 cv
355.276 61.4724 li
355.98 61.6264 356.475 61.8464 356.772 62.1104 cv
357.058 62.3854 357.212 62.7704 357.212 63.2544 cv
357.212 63.8154 356.992 64.2554 356.552 64.5744 cv
356.112 64.9044 355.496 65.0584 354.726 65.0584 cv
354.396 65.0584 354.066 65.0254 353.714 64.9704 cv
353.362 64.9154 352.999 64.8274 352.614 64.6954 cv
352.614 63.6724 li
352.977 63.8704 353.34 64.0134 353.692 64.1014 cv
354.044 64.2004 354.396 64.2444 354.748 64.2444 cv
355.21 64.2444 355.573 64.1674 355.826 64.0134 cv
356.068 63.8594 356.2 63.6284 356.2 63.3314 cv
356.2 63.0674 356.101 62.8584 355.925 62.7154 cv
355.749 62.5724 355.353 62.4294 354.737 62.2974 cv
354.396 62.2204 li
353.78 62.0884 353.329 61.8904 353.065 61.6264 cv
352.79 61.3624 352.658 60.9994 352.658 60.5264 cv
352.658 59.9654 352.856 59.5254 353.252 59.2174 cv
353.648 58.9094 354.22 58.7554 354.968 58.7554 cv
355.331 58.7554 355.672 58.7884 356.002 58.8434 cv
356.321 58.8984 356.618 58.9754 356.893 59.0744 cv
f
359.764 57.1934 mo
359.764 58.8984 li
361.799 58.8984 li
361.799 59.6684 li
359.764 59.6684 li
359.764 62.9354 li
359.764 63.4304 359.83 63.7494 359.962 63.8814 cv
360.094 64.0244 360.369 64.0904 360.787 64.0904 cv
361.799 64.0904 li
361.799 64.9154 li
360.787 64.9154 li
360.017 64.9154 359.489 64.7724 359.203 64.4864 cv
358.917 64.2004 358.774 63.6834 358.774 62.9354 cv
358.774 59.6684 li
358.048 59.6684 li
358.048 58.8984 li
358.774 58.8984 li
358.774 57.1934 li
359.764 57.1934 li
f
366.584 59.8224 mo
366.474 59.7564 366.353 59.7124 366.221 59.6794 cv
366.089 59.6574 365.946 59.6354 365.792 59.6354 cv
365.231 59.6354 364.802 59.8224 364.505 60.1854 cv
364.197 60.5484 364.054 61.0654 364.054 61.7474 cv
364.054 64.9154 li
363.064 64.9154 li
363.064 58.8984 li
364.054 58.8984 li
364.054 59.8334 li
364.252 59.4704 364.527 59.1954 364.857 59.0194 cv
365.187 58.8434 365.594 58.7554 366.078 58.7554 cv
366.309 58.7664 li
366.386 58.7774 366.474 58.7884 366.584 58.8104 cv
366.584 59.8224 li
f
370.357 61.8904 mo
369.554 61.8904 369.004 61.9894 368.696 62.1654 cv
368.388 62.3524 368.234 62.6604 368.234 63.1004 cv
368.234 63.4524 368.344 63.7384 368.575 63.9364 cv
368.806 64.1454 369.125 64.2444 369.521 64.2444 cv
370.071 64.2444 370.511 64.0574 370.841 63.6614 cv
371.171 63.2764 371.336 62.7594 371.336 62.1104 cv
371.336 61.8904 li
370.357 61.8904 li
372.326 61.4834 mo
372.326 64.9154 li
371.336 64.9154 li
371.336 64.0024 li
371.105 64.3764 370.819 64.6404 370.489 64.8054 cv
370.159 64.9704 369.741 65.0584 369.257 65.0584 cv
368.641 65.0584 368.146 64.8934 367.783 64.5524 cv
367.42 64.2114 367.244 63.7494 367.244 63.1664 cv
367.244 62.4954 367.464 61.9894 367.926 61.6374 cv
368.377 61.2964 369.048 61.1204 369.95 61.1204 cv
371.336 61.1204 li
371.336 61.0214 li
371.336 60.5704 371.182 60.2184 370.885 59.9654 cv
370.588 59.7234 370.17 59.5914 369.631 59.5914 cv
369.279 59.5914 368.949 59.6354 368.619 59.7234 cv
368.289 59.8114 367.981 59.9324 367.684 60.0864 cv
367.684 59.1734 li
368.036 59.0414 368.388 58.9314 368.729 58.8654 cv
369.07 58.7994 369.4 58.7554 369.73 58.7554 cv
370.599 58.7554 371.248 58.9864 371.677 59.4374 cv
372.106 59.8884 372.326 60.5704 372.326 61.4834 cv
f
374.361 58.8984 mo
375.351 58.8984 li
375.351 64.9154 li
374.361 64.9154 li
374.361 58.8984 li
374.361 56.5554 mo
375.351 56.5554 li
375.351 57.8094 li
374.361 57.8094 li
374.361 56.5554 li
f
382.424 61.2854 mo
382.424 64.9154 li
381.434 64.9154 li
381.434 61.3184 li
381.434 60.7464 381.313 60.3284 381.093 60.0424 cv
380.873 59.7564 380.543 59.6134 380.103 59.6134 cv
379.564 59.6134 379.146 59.7894 378.838 60.1304 cv
378.53 60.4714 378.376 60.9334 378.376 61.5164 cv
378.376 64.9154 li
377.386 64.9154 li
377.386 58.8984 li
378.376 58.8984 li
378.376 59.8334 li
378.607 59.4814 378.882 59.2064 379.212 59.0304 cv
379.531 58.8544 379.905 58.7554 380.323 58.7554 cv
381.005 58.7554 381.533 58.9754 381.885 59.4044 cv
382.237 59.8334 382.424 60.4604 382.424 61.2854 cv
f
389.541 61.6594 mo
389.541 62.1434 li
384.998 62.1434 li
385.042 62.8254 385.24 63.3534 385.614 63.7054 cv
385.977 64.0574 386.483 64.2334 387.143 64.2334 cv
387.517 64.2334 387.891 64.1894 388.243 64.1014 cv
388.595 64.0134 388.958 63.8704 389.31 63.6724 cv
389.31 64.6074 li
388.958 64.7614 388.595 64.8824 388.221 64.9484 cv
387.847 65.0144 387.462 65.0584 387.088 65.0584 cv
386.12 65.0584 385.361 64.7834 384.8 64.2334 cv
384.239 63.6834 383.964 62.9244 383.964 61.9674 cv
383.964 60.9884 384.228 60.2074 384.756 59.6244 cv
385.284 59.0524 386.01 58.7554 386.912 58.7554 cv
387.726 58.7554 388.364 59.0194 388.837 59.5364 cv
389.299 60.0644 389.541 60.7684 389.541 61.6594 cv
388.551 61.3734 mo
388.54 60.8344 388.386 60.4054 388.1 60.0754 cv
387.803 59.7564 387.407 59.5914 386.923 59.5914 cv
386.373 59.5914 385.933 59.7564 385.603 60.0644 cv
385.273 60.3724 385.075 60.8124 385.031 61.3734 cv
388.551 61.3734 li
f
395.118 59.8114 mo
395.118 56.5554 li
396.108 56.5554 li
396.108 64.9154 li
395.118 64.9154 li
395.118 64.0134 li
394.909 64.3764 394.645 64.6404 394.326 64.8054 cv
394.007 64.9704 393.633 65.0584 393.193 65.0584 cv
392.467 65.0584 391.873 64.7724 391.411 64.2004 cv
390.949 63.6284 390.729 62.8584 390.729 61.9124 cv
390.729 60.9664 390.949 60.2074 391.411 59.6244 cv
391.873 59.0524 392.467 58.7554 393.193 58.7554 cv
393.633 58.7554 394.007 58.8434 394.326 59.0194 cv
394.645 59.1954 394.909 59.4594 395.118 59.8114 cv
391.752 61.9124 mo
391.752 62.6384 391.895 63.2104 392.192 63.6284 cv
392.489 64.0464 392.907 64.2444 393.435 64.2444 cv
393.952 64.2444 394.359 64.0464 394.667 63.6284 cv
394.964 63.2104 395.118 62.6384 395.118 61.9124 cv
395.118 61.1864 394.964 60.6254 394.667 60.2074 cv
394.359 59.7894 393.952 59.5804 393.435 59.5804 cv
392.907 59.5804 392.489 59.7894 392.192 60.2074 cv
391.895 60.6254 391.752 61.1864 391.752 61.9124 cv
f
404.017 56.5664 mo
403.533 57.4024 403.181 58.2164 402.95 59.0194 cv
402.708 59.8224 402.598 60.6364 402.598 61.4614 cv
402.598 62.2974 402.708 63.1114 402.95 63.9144 cv
403.181 64.7284 403.533 65.5314 404.017 66.3564 cv
403.159 66.3564 li
402.62 65.5094 402.213 64.6954 401.949 63.8814 cv
401.685 63.0674 401.553 62.2644 401.553 61.4614 cv
401.553 60.6694 401.685 59.8664 401.949 59.0524 cv
402.213 58.2384 402.609 57.4134 403.159 56.5664 cv
404.017 56.5664 li
f
409.77 59.0744 mo
409.77 60.0094 li
409.484 59.8774 409.198 59.7674 408.901 59.6904 cv
408.593 59.6244 408.285 59.5804 407.966 59.5804 cv
407.471 59.5804 407.097 59.6574 406.855 59.8114 cv
406.613 59.9654 406.492 60.1854 406.492 60.4824 cv
406.492 60.7134 406.58 60.8894 406.756 61.0214 cv
406.932 61.1534 407.284 61.2854 407.812 61.3954 cv
408.153 61.4724 li
408.857 61.6264 409.352 61.8464 409.649 62.1104 cv
409.935 62.3854 410.089 62.7704 410.089 63.2544 cv
410.089 63.8154 409.869 64.2554 409.429 64.5744 cv
408.989 64.9044 408.373 65.0584 407.603 65.0584 cv
407.273 65.0584 406.943 65.0254 406.591 64.9704 cv
406.239 64.9154 405.876 64.8274 405.491 64.6954 cv
405.491 63.6724 li
405.854 63.8704 406.217 64.0134 406.569 64.1014 cv
406.921 64.2004 407.273 64.2444 407.625 64.2444 cv
408.087 64.2444 408.45 64.1674 408.703 64.0134 cv
408.945 63.8594 409.077 63.6284 409.077 63.3314 cv
409.077 63.0674 408.978 62.8584 408.802 62.7154 cv
408.626 62.5724 408.23 62.4294 407.614 62.2974 cv
407.273 62.2204 li
406.657 62.0884 406.206 61.8904 405.942 61.6264 cv
405.667 61.3624 405.535 60.9994 405.535 60.5264 cv
405.535 59.9654 405.733 59.5254 406.129 59.2174 cv
406.525 58.9094 407.097 58.7554 407.845 58.7554 cv
408.208 58.7554 408.549 58.7884 408.879 58.8434 cv
409.198 58.8984 409.495 58.9754 409.77 59.0744 cv
f
416.667 61.2854 mo
416.667 64.9154 li
415.677 64.9154 li
415.677 61.3184 li
415.677 60.7464 415.556 60.3284 415.336 60.0424 cv
415.116 59.7564 414.786 59.6134 414.346 59.6134 cv
413.807 59.6134 413.389 59.7894 413.081 60.1304 cv
412.773 60.4714 412.619 60.9334 412.619 61.5164 cv
412.619 64.9154 li
411.629 64.9154 li
411.629 56.5554 li
412.619 56.5554 li
412.619 59.8334 li
412.85 59.4814 413.125 59.2064 413.455 59.0304 cv
413.774 58.8544 414.148 58.7554 414.566 58.7554 cv
415.248 58.7554 415.776 58.9754 416.128 59.4044 cv
416.48 59.8334 416.667 60.4604 416.667 61.2854 cv
f
421.375 61.8904 mo
420.572 61.8904 420.022 61.9894 419.714 62.1654 cv
419.406 62.3524 419.252 62.6604 419.252 63.1004 cv
419.252 63.4524 419.362 63.7384 419.593 63.9364 cv
419.824 64.1454 420.143 64.2444 420.539 64.2444 cv
421.089 64.2444 421.529 64.0574 421.859 63.6614 cv
422.189 63.2764 422.354 62.7594 422.354 62.1104 cv
422.354 61.8904 li
421.375 61.8904 li
423.344 61.4834 mo
423.344 64.9154 li
422.354 64.9154 li
422.354 64.0024 li
422.123 64.3764 421.837 64.6404 421.507 64.8054 cv
421.177 64.9704 420.759 65.0584 420.275 65.0584 cv
419.659 65.0584 419.164 64.8934 418.801 64.5524 cv
418.438 64.2114 418.262 63.7494 418.262 63.1664 cv
418.262 62.4954 418.482 61.9894 418.944 61.6374 cv
419.395 61.2964 420.066 61.1204 420.968 61.1204 cv
422.354 61.1204 li
422.354 61.0214 li
422.354 60.5704 422.2 60.2184 421.903 59.9654 cv
421.606 59.7234 421.188 59.5914 420.649 59.5914 cv
420.297 59.5914 419.967 59.6354 419.637 59.7234 cv
419.307 59.8114 418.999 59.9324 418.702 60.0864 cv
418.702 59.1734 li
419.054 59.0414 419.406 58.9314 419.747 58.8654 cv
420.088 58.7994 420.418 58.7554 420.748 58.7554 cv
421.617 58.7554 422.266 58.9864 422.695 59.4374 cv
423.124 59.8884 423.344 60.5704 423.344 61.4834 cv
f
428.866 59.8224 mo
428.756 59.7564 428.635 59.7124 428.503 59.6794 cv
428.371 59.6574 428.228 59.6354 428.074 59.6354 cv
427.513 59.6354 427.084 59.8224 426.787 60.1854 cv
426.479 60.5484 426.336 61.0654 426.336 61.7474 cv
426.336 64.9154 li
425.346 64.9154 li
425.346 58.8984 li
426.336 58.8984 li
426.336 59.8334 li
426.534 59.4704 426.809 59.1954 427.139 59.0194 cv
427.469 58.8434 427.876 58.7554 428.36 58.7554 cv
428.591 58.7664 li
428.668 58.7774 428.756 58.7884 428.866 58.8104 cv
428.866 59.8224 li
f
435.048 61.6594 mo
435.048 62.1434 li
430.505 62.1434 li
430.549 62.8254 430.747 63.3534 431.121 63.7054 cv
431.484 64.0574 431.99 64.2334 432.65 64.2334 cv
433.024 64.2334 433.398 64.1894 433.75 64.1014 cv
434.102 64.0134 434.465 63.8704 434.817 63.6724 cv
434.817 64.6074 li
434.465 64.7614 434.102 64.8824 433.728 64.9484 cv
433.354 65.0144 432.969 65.0584 432.595 65.0584 cv
431.627 65.0584 430.868 64.7834 430.307 64.2334 cv
429.746 63.6834 429.471 62.9244 429.471 61.9674 cv
429.471 60.9884 429.735 60.2074 430.263 59.6244 cv
430.791 59.0524 431.517 58.7554 432.419 58.7554 cv
433.233 58.7554 433.871 59.0194 434.344 59.5364 cv
434.806 60.0644 435.048 60.7684 435.048 61.6594 cv
434.058 61.3734 mo
434.047 60.8344 433.893 60.4054 433.607 60.0754 cv
433.31 59.7564 432.914 59.5914 432.43 59.5914 cv
431.88 59.5914 431.44 59.7564 431.11 60.0644 cv
430.78 60.3724 430.582 60.8124 430.538 61.3734 cv
434.058 61.3734 li
f
440.625 59.8114 mo
440.625 56.5554 li
441.615 56.5554 li
441.615 64.9154 li
440.625 64.9154 li
440.625 64.0134 li
440.416 64.3764 440.152 64.6404 439.833 64.8054 cv
439.514 64.9704 439.14 65.0584 438.7 65.0584 cv
437.974 65.0584 437.38 64.7724 436.918 64.2004 cv
436.456 63.6284 436.236 62.8584 436.236 61.9124 cv
436.236 60.9664 436.456 60.2074 436.918 59.6244 cv
437.38 59.0524 437.974 58.7554 438.7 58.7554 cv
439.14 58.7554 439.514 58.8434 439.833 59.0194 cv
440.152 59.1954 440.416 59.4594 440.625 59.8114 cv
437.259 61.9124 mo
437.259 62.6384 437.402 63.2104 437.699 63.6284 cv
437.996 64.0464 438.414 64.2444 438.942 64.2444 cv
439.459 64.2444 439.866 64.0464 440.174 63.6284 cv
440.471 63.2104 440.625 62.6384 440.625 61.9124 cv
440.625 61.1864 440.471 60.6254 440.174 60.2074 cv
439.866 59.7894 439.459 59.5804 438.942 59.5804 cv
438.414 59.5804 437.996 59.7894 437.699 60.2074 cv
437.402 60.6254 437.259 61.1864 437.259 61.9124 cv
f
451.834 60.0534 mo
452.076 59.6134 452.373 59.2944 452.714 59.0744 cv
453.055 58.8654 453.462 58.7554 453.935 58.7554 cv
454.551 58.7554 455.035 58.9754 455.376 59.4154 cv
455.717 59.8554 455.893 60.4824 455.893 61.2854 cv
455.893 64.9154 li
454.903 64.9154 li
454.903 61.3184 li
454.903 60.7464 454.793 60.3174 454.595 60.0314 cv
454.386 59.7564 454.078 59.6134 453.66 59.6134 cv
453.143 59.6134 452.736 59.7894 452.439 60.1304 cv
452.142 60.4714 451.999 60.9334 451.999 61.5164 cv
451.999 64.9154 li
451.009 64.9154 li
451.009 61.3184 li
451.009 60.7464 450.899 60.3174 450.701 60.0314 cv
450.492 59.7564 450.173 59.6134 449.755 59.6134 cv
449.249 59.6134 448.842 59.7894 448.545 60.1304 cv
448.248 60.4714 448.105 60.9334 448.105 61.5164 cv
448.105 64.9154 li
447.115 64.9154 li
447.115 58.8984 li
448.105 58.8984 li
448.105 59.8334 li
448.325 59.4704 448.6 59.1954 448.919 59.0194 cv
449.227 58.8434 449.601 58.7554 450.041 58.7554 cv
450.481 58.7554 450.844 58.8654 451.152 59.0854 cv
451.46 59.3054 451.68 59.6354 451.834 60.0534 cv
f
463.01 61.6594 mo
463.01 62.1434 li
458.467 62.1434 li
458.511 62.8254 458.709 63.3534 459.083 63.7054 cv
459.446 64.0574 459.952 64.2334 460.612 64.2334 cv
460.986 64.2334 461.36 64.1894 461.712 64.1014 cv
462.064 64.0134 462.427 63.8704 462.779 63.6724 cv
462.779 64.6074 li
462.427 64.7614 462.064 64.8824 461.69 64.9484 cv
461.316 65.0144 460.931 65.0584 460.557 65.0584 cv
459.589 65.0584 458.83 64.7834 458.269 64.2334 cv
457.708 63.6834 457.433 62.9244 457.433 61.9674 cv
457.433 60.9884 457.697 60.2074 458.225 59.6244 cv
458.753 59.0524 459.479 58.7554 460.381 58.7554 cv
461.195 58.7554 461.833 59.0194 462.306 59.5364 cv
462.768 60.0644 463.01 60.7684 463.01 61.6594 cv
462.02 61.3734 mo
462.009 60.8344 461.855 60.4054 461.569 60.0754 cv
461.272 59.7564 460.876 59.5914 460.392 59.5914 cv
459.842 59.5914 459.402 59.7564 459.072 60.0644 cv
458.742 60.3724 458.544 60.8124 458.5 61.3734 cv
462.02 61.3734 li
f
469.313 60.0534 mo
469.555 59.6134 469.852 59.2944 470.193 59.0744 cv
470.534 58.8654 470.941 58.7554 471.414 58.7554 cv
472.03 58.7554 472.514 58.9754 472.855 59.4154 cv
473.196 59.8554 473.372 60.4824 473.372 61.2854 cv
473.372 64.9154 li
472.382 64.9154 li
472.382 61.3184 li
472.382 60.7464 472.272 60.3174 472.074 60.0314 cv
471.865 59.7564 471.557 59.6134 471.139 59.6134 cv
470.622 59.6134 470.215 59.7894 469.918 60.1304 cv
469.621 60.4714 469.478 60.9334 469.478 61.5164 cv
469.478 64.9154 li
468.488 64.9154 li
468.488 61.3184 li
468.488 60.7464 468.378 60.3174 468.18 60.0314 cv
467.971 59.7564 467.652 59.6134 467.234 59.6134 cv
466.728 59.6134 466.321 59.7894 466.024 60.1304 cv
465.727 60.4714 465.584 60.9334 465.584 61.5164 cv
465.584 64.9154 li
464.594 64.9154 li
464.594 58.8984 li
465.584 58.8984 li
465.584 59.8334 li
465.804 59.4704 466.079 59.1954 466.398 59.0194 cv
466.706 58.8434 467.08 58.7554 467.52 58.7554 cv
467.96 58.7554 468.323 58.8654 468.631 59.0854 cv
468.939 59.3054 469.159 59.6354 469.313 60.0534 cv
f
477.673 59.5914 mo
477.145 59.5914 476.727 59.8004 476.419 60.2184 cv
476.111 60.6364 475.957 61.1974 475.957 61.9124 cv
475.957 62.6384 476.1 63.1994 476.408 63.6174 cv
476.716 64.0354 477.134 64.2334 477.673 64.2334 cv
478.201 64.2334 478.619 64.0354 478.927 63.6174 cv
479.235 63.1994 479.389 62.6384 479.389 61.9124 cv
479.389 61.2084 479.235 60.6364 478.927 60.2184 cv
478.619 59.8004 478.201 59.5914 477.673 59.5914 cv
477.673 58.7554 mo
478.531 58.7554 479.202 59.0414 479.697 59.5914 cv
480.181 60.1524 480.434 60.9224 480.434 61.9124 cv
480.434 62.9024 480.181 63.6724 479.697 64.2224 cv
479.202 64.7834 478.531 65.0584 477.673 65.0584 cv
476.804 65.0584 476.122 64.7834 475.638 64.2224 cv
475.154 63.6724 474.912 62.9024 474.912 61.9124 cv
474.912 60.9224 475.154 60.1524 475.638 59.5914 cv
476.122 59.0414 476.804 58.7554 477.673 58.7554 cv
f
485.56 59.8224 mo
485.45 59.7564 485.329 59.7124 485.197 59.6794 cv
485.065 59.6574 484.922 59.6354 484.768 59.6354 cv
484.207 59.6354 483.778 59.8224 483.481 60.1854 cv
483.173 60.5484 483.03 61.0654 483.03 61.7474 cv
483.03 64.9154 li
482.04 64.9154 li
482.04 58.8984 li
483.03 58.8984 li
483.03 59.8334 li
483.228 59.4704 483.503 59.1954 483.833 59.0194 cv
484.163 58.8434 484.57 58.7554 485.054 58.7554 cv
485.285 58.7664 li
485.362 58.7774 485.45 58.7884 485.56 58.8104 cv
485.56 59.8224 li
f
489.102 65.4654 mo
488.816 66.1694 488.541 66.6424 488.277 66.8624 cv
488.013 67.0824 487.661 67.1924 487.221 67.1924 cv
486.429 67.1924 li
486.429 66.3674 li
487.012 66.3674 li
487.276 66.3674 487.485 66.3014 487.639 66.1694 cv
487.793 66.0374 487.958 65.7404 488.145 65.2564 cv
488.321 64.8164 li
485.89 58.8984 li
486.935 58.8984 li
488.816 63.6064 li
490.697 58.8984 li
491.742 58.8984 li
489.102 65.4654 li
f
492.952 56.5664 mo
493.81 56.5664 li
494.338 57.4134 494.745 58.2384 495.009 59.0524 cv
495.273 59.8664 495.416 60.6694 495.416 61.4614 cv
495.416 62.2644 495.273 63.0674 495.009 63.8814 cv
494.745 64.6954 494.338 65.5094 493.81 66.3564 cv
492.952 66.3564 li
493.425 65.5314 493.777 64.7284 494.019 63.9144 cv
494.25 63.1114 494.371 62.2974 494.371 61.4614 cv
494.371 60.6364 494.25 59.8224 494.019 59.0194 cv
493.777 58.2164 493.425 57.4024 492.952 56.5664 cv
f
303.136 81.4486 mo
307.379 77.206 li
303.136 72.9633 li
298.893 77.206 li
cp
.397589 .935882 0 0 cmyk
f
303.136 81.4486 mo
307.379 77.206 li
303.136 72.9633 li
298.893 77.206 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
318.536 81.4486 mo
322.779 77.206 li
318.536 72.9633 li
314.293 77.206 li
cp
.397589 .935882 0 0 cmyk
f
318.536 81.4486 mo
322.779 77.206 li
318.536 72.9633 li
314.293 77.206 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
334.398 74.104 mo
332.924 78.097 li
335.872 78.097 li
334.398 74.104 li
333.782 73.037 mo
335.014 73.037 li
338.072 81.056 li
336.939 81.056 li
336.213 78.999 li
332.594 78.999 li
331.868 81.056 li
330.724 81.056 li
333.782 73.037 li
f
343.528 75.27 mo
343.528 76.194 li
343.242 76.04 342.967 75.93 342.681 75.853 cv
342.395 75.776 342.12 75.732 341.834 75.732 cv
341.196 75.732 340.69 75.941 340.338 76.348 cv
339.986 76.755 339.81 77.327 339.81 78.053 cv
339.81 78.79 339.986 79.362 340.338 79.769 cv
340.69 80.176 341.196 80.374 341.834 80.374 cv
342.12 80.374 342.395 80.341 342.681 80.264 cv
342.967 80.187 343.242 80.066 343.528 79.912 cv
343.528 80.825 li
343.242 80.957 342.956 81.056 342.67 81.111 cv
342.373 81.166 342.054 81.199 341.724 81.199 cv
340.822 81.199 340.096 80.924 339.568 80.352 cv
339.029 79.791 338.765 79.021 338.765 78.053 cv
338.765 77.074 339.029 76.304 339.568 75.743 cv
340.107 75.182 340.844 74.896 341.79 74.896 cv
342.098 74.896 342.395 74.929 342.681 74.995 cv
342.967 75.061 343.253 75.149 343.528 75.27 cv
f
350.249 77.426 mo
350.249 81.056 li
349.259 81.056 li
349.259 77.459 li
349.259 76.887 349.138 76.469 348.918 76.183 cv
348.698 75.897 348.368 75.754 347.928 75.754 cv
347.389 75.754 346.971 75.93 346.663 76.271 cv
346.355 76.612 346.201 77.074 346.201 77.657 cv
346.201 81.056 li
345.211 81.056 li
345.211 72.696 li
346.201 72.696 li
346.201 75.974 li
346.432 75.622 346.707 75.347 347.037 75.171 cv
347.356 74.995 347.73 74.896 348.148 74.896 cv
348.83 74.896 349.358 75.116 349.71 75.545 cv
350.062 75.974 350.249 76.601 350.249 77.426 cv
f
352.218 75.039 mo
353.208 75.039 li
353.208 81.056 li
352.218 81.056 li
352.218 75.039 li
352.218 72.696 mo
353.208 72.696 li
353.208 73.95 li
352.218 73.95 li
352.218 72.696 li
f
360.424 77.8 mo
360.424 78.284 li
355.881 78.284 li
355.925 78.966 356.123 79.494 356.497 79.846 cv
356.86 80.198 357.366 80.374 358.026 80.374 cv
358.4 80.374 358.774 80.33 359.126 80.242 cv
359.478 80.154 359.841 80.011 360.193 79.813 cv
360.193 80.748 li
359.841 80.902 359.478 81.023 359.104 81.089 cv
358.73 81.155 358.345 81.199 357.971 81.199 cv
357.003 81.199 356.244 80.924 355.683 80.374 cv
355.122 79.824 354.847 79.065 354.847 78.108 cv
354.847 77.129 355.111 76.348 355.639 75.765 cv
356.167 75.193 356.893 74.896 357.795 74.896 cv
358.609 74.896 359.247 75.16 359.72 75.677 cv
360.182 76.205 360.424 76.909 360.424 77.8 cv
359.434 77.514 mo
359.423 76.975 359.269 76.546 358.983 76.216 cv
358.686 75.897 358.29 75.732 357.806 75.732 cv
357.256 75.732 356.816 75.897 356.486 76.205 cv
356.156 76.513 355.958 76.953 355.914 77.514 cv
359.434 77.514 li
f
361.337 75.039 mo
362.382 75.039 li
364.263 80.088 li
366.144 75.039 li
367.189 75.039 li
364.934 81.056 li
363.592 81.056 li
361.337 75.039 li
f
371.292 78.031 mo
370.489 78.031 369.939 78.13 369.631 78.306 cv
369.323 78.493 369.169 78.801 369.169 79.241 cv
369.169 79.593 369.279 79.879 369.51 80.077 cv
369.741 80.286 370.06 80.385 370.456 80.385 cv
371.006 80.385 371.446 80.198 371.776 79.802 cv
372.106 79.417 372.271 78.9 372.271 78.251 cv
372.271 78.031 li
371.292 78.031 li
373.261 77.624 mo
373.261 81.056 li
372.271 81.056 li
372.271 80.143 li
372.04 80.517 371.754 80.781 371.424 80.946 cv
371.094 81.111 370.676 81.199 370.192 81.199 cv
369.576 81.199 369.081 81.034 368.718 80.693 cv
368.355 80.352 368.179 79.89 368.179 79.307 cv
368.179 78.636 368.399 78.13 368.861 77.778 cv
369.312 77.437 369.983 77.261 370.885 77.261 cv
372.271 77.261 li
372.271 77.162 li
372.271 76.711 372.117 76.359 371.82 76.106 cv
371.523 75.864 371.105 75.732 370.566 75.732 cv
370.214 75.732 369.884 75.776 369.554 75.864 cv
369.224 75.952 368.916 76.073 368.619 76.227 cv
368.619 75.314 li
368.971 75.182 369.323 75.072 369.664 75.006 cv
370.005 74.94 370.335 74.896 370.665 74.896 cv
371.534 74.896 372.183 75.127 372.612 75.578 cv
373.041 76.029 373.261 76.711 373.261 77.624 cv
f
379.619 78.053 mo
379.619 77.327 379.465 76.766 379.168 76.348 cv
378.86 75.93 378.453 75.721 377.936 75.721 cv
377.408 75.721 377.001 75.93 376.704 76.348 cv
376.396 76.766 376.253 77.327 376.253 78.053 cv
376.253 78.779 376.396 79.351 376.704 79.769 cv
377.001 80.187 377.408 80.385 377.936 80.385 cv
378.453 80.385 378.86 80.187 379.168 79.769 cv
379.465 79.351 379.619 78.779 379.619 78.053 cv
376.253 75.952 mo
376.451 75.6 376.715 75.336 377.034 75.16 cv
377.353 74.984 377.738 74.896 378.178 74.896 cv
378.904 74.896 379.498 75.193 379.96 75.765 cv
380.411 76.348 380.642 77.107 380.642 78.053 cv
380.642 78.999 380.411 79.769 379.96 80.341 cv
379.498 80.913 378.904 81.199 378.178 81.199 cv
377.738 81.199 377.353 81.111 377.034 80.946 cv
376.715 80.781 376.451 80.517 376.253 80.154 cv
376.253 81.056 li
375.263 81.056 li
375.263 72.696 li
376.253 72.696 li
376.253 75.952 li
f
382.281 72.696 mo
383.271 72.696 li
383.271 81.056 li
382.281 81.056 li
382.281 72.696 li
f
390.487 77.8 mo
390.487 78.284 li
385.944 78.284 li
385.988 78.966 386.186 79.494 386.56 79.846 cv
386.923 80.198 387.429 80.374 388.089 80.374 cv
388.463 80.374 388.837 80.33 389.189 80.242 cv
389.541 80.154 389.904 80.011 390.256 79.813 cv
390.256 80.748 li
389.904 80.902 389.541 81.023 389.167 81.089 cv
388.793 81.155 388.408 81.199 388.034 81.199 cv
387.066 81.199 386.307 80.924 385.746 80.374 cv
385.185 79.824 384.91 79.065 384.91 78.108 cv
384.91 77.129 385.174 76.348 385.702 75.765 cv
386.23 75.193 386.956 74.896 387.858 74.896 cv
388.672 74.896 389.31 75.16 389.783 75.677 cv
390.245 76.205 390.487 76.909 390.487 77.8 cv
389.497 77.514 mo
389.486 76.975 389.332 76.546 389.046 76.216 cv
388.749 75.897 388.353 75.732 387.869 75.732 cv
387.319 75.732 386.879 75.897 386.549 76.205 cv
386.219 76.513 386.021 76.953 385.977 77.514 cv
389.497 77.514 li
f
397.978 72.707 mo
397.494 73.543 397.142 74.357 396.911 75.16 cv
396.669 75.963 396.559 76.777 396.559 77.602 cv
396.559 78.438 396.669 79.252 396.911 80.055 cv
397.142 80.869 397.494 81.672 397.978 82.497 cv
397.12 82.497 li
396.581 81.65 396.174 80.836 395.91 80.022 cv
395.646 79.208 395.514 78.405 395.514 77.602 cv
395.514 76.81 395.646 76.007 395.91 75.193 cv
396.174 74.379 396.57 73.554 397.12 72.707 cv
397.978 72.707 li
f
403.731 75.215 mo
403.731 76.15 li
403.445 76.018 403.159 75.908 402.862 75.831 cv
402.554 75.765 402.246 75.721 401.927 75.721 cv
401.432 75.721 401.058 75.798 400.816 75.952 cv
400.574 76.106 400.453 76.326 400.453 76.623 cv
400.453 76.854 400.541 77.03 400.717 77.162 cv
400.893 77.294 401.245 77.426 401.773 77.536 cv
402.114 77.613 li
402.818 77.767 403.313 77.987 403.61 78.251 cv
403.896 78.526 404.05 78.911 404.05 79.395 cv
404.05 79.956 403.83 80.396 403.39 80.715 cv
402.95 81.045 402.334 81.199 401.564 81.199 cv
401.234 81.199 400.904 81.166 400.552 81.111 cv
400.2 81.056 399.837 80.968 399.452 80.836 cv
399.452 79.813 li
399.815 80.011 400.178 80.154 400.53 80.242 cv
400.882 80.341 401.234 80.385 401.586 80.385 cv
402.048 80.385 402.411 80.308 402.664 80.154 cv
402.906 80 403.038 79.769 403.038 79.472 cv
403.038 79.208 402.939 78.999 402.763 78.856 cv
402.587 78.713 402.191 78.57 401.575 78.438 cv
401.234 78.361 li
400.618 78.229 400.167 78.031 399.903 77.767 cv
399.628 77.503 399.496 77.14 399.496 76.667 cv
399.496 76.106 399.694 75.666 400.09 75.358 cv
400.486 75.05 401.058 74.896 401.806 74.896 cv
402.169 74.896 402.51 74.929 402.84 74.984 cv
403.159 75.039 403.456 75.116 403.731 75.215 cv
f
410.628 77.426 mo
410.628 81.056 li
409.638 81.056 li
409.638 77.459 li
409.638 76.887 409.517 76.469 409.297 76.183 cv
409.077 75.897 408.747 75.754 408.307 75.754 cv
407.768 75.754 407.35 75.93 407.042 76.271 cv
406.734 76.612 406.58 77.074 406.58 77.657 cv
406.58 81.056 li
405.59 81.056 li
405.59 72.696 li
406.58 72.696 li
406.58 75.974 li
406.811 75.622 407.086 75.347 407.416 75.171 cv
407.735 74.995 408.109 74.896 408.527 74.896 cv
409.209 74.896 409.737 75.116 410.089 75.545 cv
410.441 75.974 410.628 76.601 410.628 77.426 cv
f
415.336 78.031 mo
414.533 78.031 413.983 78.13 413.675 78.306 cv
413.367 78.493 413.213 78.801 413.213 79.241 cv
413.213 79.593 413.323 79.879 413.554 80.077 cv
413.785 80.286 414.104 80.385 414.5 80.385 cv
415.05 80.385 415.49 80.198 415.82 79.802 cv
416.15 79.417 416.315 78.9 416.315 78.251 cv
416.315 78.031 li
415.336 78.031 li
417.305 77.624 mo
417.305 81.056 li
416.315 81.056 li
416.315 80.143 li
416.084 80.517 415.798 80.781 415.468 80.946 cv
415.138 81.111 414.72 81.199 414.236 81.199 cv
413.62 81.199 413.125 81.034 412.762 80.693 cv
412.399 80.352 412.223 79.89 412.223 79.307 cv
412.223 78.636 412.443 78.13 412.905 77.778 cv
413.356 77.437 414.027 77.261 414.929 77.261 cv
416.315 77.261 li
416.315 77.162 li
416.315 76.711 416.161 76.359 415.864 76.106 cv
415.567 75.864 415.149 75.732 414.61 75.732 cv
414.258 75.732 413.928 75.776 413.598 75.864 cv
413.268 75.952 412.96 76.073 412.663 76.227 cv
412.663 75.314 li
413.015 75.182 413.367 75.072 413.708 75.006 cv
414.049 74.94 414.379 74.896 414.709 74.896 cv
415.578 74.896 416.227 75.127 416.656 75.578 cv
417.085 76.029 417.305 76.711 417.305 77.624 cv
f
422.827 75.963 mo
422.717 75.897 422.596 75.853 422.464 75.82 cv
422.332 75.798 422.189 75.776 422.035 75.776 cv
421.474 75.776 421.045 75.963 420.748 76.326 cv
420.44 76.689 420.297 77.206 420.297 77.888 cv
420.297 81.056 li
419.307 81.056 li
419.307 75.039 li
420.297 75.039 li
420.297 75.974 li
420.495 75.611 420.77 75.336 421.1 75.16 cv
421.43 74.984 421.837 74.896 422.321 74.896 cv
422.552 74.907 li
422.629 74.918 422.717 74.929 422.827 74.951 cv
422.827 75.963 li
f
429.009 77.8 mo
429.009 78.284 li
424.466 78.284 li
424.51 78.966 424.708 79.494 425.082 79.846 cv
425.445 80.198 425.951 80.374 426.611 80.374 cv
426.985 80.374 427.359 80.33 427.711 80.242 cv
428.063 80.154 428.426 80.011 428.778 79.813 cv
428.778 80.748 li
428.426 80.902 428.063 81.023 427.689 81.089 cv
427.315 81.155 426.93 81.199 426.556 81.199 cv
425.588 81.199 424.829 80.924 424.268 80.374 cv
423.707 79.824 423.432 79.065 423.432 78.108 cv
423.432 77.129 423.696 76.348 424.224 75.765 cv
424.752 75.193 425.478 74.896 426.38 74.896 cv
427.194 74.896 427.832 75.16 428.305 75.677 cv
428.767 76.205 429.009 76.909 429.009 77.8 cv
428.019 77.514 mo
428.008 76.975 427.854 76.546 427.568 76.216 cv
427.271 75.897 426.875 75.732 426.391 75.732 cv
425.841 75.732 425.401 75.897 425.071 76.205 cv
424.741 76.513 424.543 76.953 424.499 77.514 cv
428.019 77.514 li
f
434.586 75.952 mo
434.586 72.696 li
435.576 72.696 li
435.576 81.056 li
434.586 81.056 li
434.586 80.154 li
434.377 80.517 434.113 80.781 433.794 80.946 cv
433.475 81.111 433.101 81.199 432.661 81.199 cv
431.935 81.199 431.341 80.913 430.879 80.341 cv
430.417 79.769 430.197 78.999 430.197 78.053 cv
430.197 77.107 430.417 76.348 430.879 75.765 cv
431.341 75.193 431.935 74.896 432.661 74.896 cv
433.101 74.896 433.475 74.984 433.794 75.16 cv
434.113 75.336 434.377 75.6 434.586 75.952 cv
431.22 78.053 mo
431.22 78.779 431.363 79.351 431.66 79.769 cv
431.957 80.187 432.375 80.385 432.903 80.385 cv
433.42 80.385 433.827 80.187 434.135 79.769 cv
434.432 79.351 434.586 78.779 434.586 78.053 cv
434.586 77.327 434.432 76.766 434.135 76.348 cv
433.827 75.93 433.42 75.721 432.903 75.721 cv
432.375 75.721 431.957 75.93 431.66 76.348 cv
431.363 76.766 431.22 77.327 431.22 78.053 cv
f
445.795 76.194 mo
446.037 75.754 446.334 75.435 446.675 75.215 cv
447.016 75.006 447.423 74.896 447.896 74.896 cv
448.512 74.896 448.996 75.116 449.337 75.556 cv
449.678 75.996 449.854 76.623 449.854 77.426 cv
449.854 81.056 li
448.864 81.056 li
448.864 77.459 li
448.864 76.887 448.754 76.458 448.556 76.172 cv
448.347 75.897 448.039 75.754 447.621 75.754 cv
447.104 75.754 446.697 75.93 446.4 76.271 cv
446.103 76.612 445.96 77.074 445.96 77.657 cv
445.96 81.056 li
444.97 81.056 li
444.97 77.459 li
444.97 76.887 444.86 76.458 444.662 76.172 cv
444.453 75.897 444.134 75.754 443.716 75.754 cv
443.21 75.754 442.803 75.93 442.506 76.271 cv
442.209 76.612 442.066 77.074 442.066 77.657 cv
442.066 81.056 li
441.076 81.056 li
441.076 75.039 li
442.066 75.039 li
442.066 75.974 li
442.286 75.611 442.561 75.336 442.88 75.16 cv
443.188 74.984 443.562 74.896 444.002 74.896 cv
444.442 74.896 444.805 75.006 445.113 75.226 cv
445.421 75.446 445.641 75.776 445.795 76.194 cv
f
456.971 77.8 mo
456.971 78.284 li
452.428 78.284 li
452.472 78.966 452.67 79.494 453.044 79.846 cv
453.407 80.198 453.913 80.374 454.573 80.374 cv
454.947 80.374 455.321 80.33 455.673 80.242 cv
456.025 80.154 456.388 80.011 456.74 79.813 cv
456.74 80.748 li
456.388 80.902 456.025 81.023 455.651 81.089 cv
455.277 81.155 454.892 81.199 454.518 81.199 cv
453.55 81.199 452.791 80.924 452.23 80.374 cv
451.669 79.824 451.394 79.065 451.394 78.108 cv
451.394 77.129 451.658 76.348 452.186 75.765 cv
452.714 75.193 453.44 74.896 454.342 74.896 cv
455.156 74.896 455.794 75.16 456.267 75.677 cv
456.729 76.205 456.971 76.909 456.971 77.8 cv
455.981 77.514 mo
455.97 76.975 455.816 76.546 455.53 76.216 cv
455.233 75.897 454.837 75.732 454.353 75.732 cv
453.803 75.732 453.363 75.897 453.033 76.205 cv
452.703 76.513 452.505 76.953 452.461 77.514 cv
455.981 77.514 li
f
463.274 76.194 mo
463.516 75.754 463.813 75.435 464.154 75.215 cv
464.495 75.006 464.902 74.896 465.375 74.896 cv
465.991 74.896 466.475 75.116 466.816 75.556 cv
467.157 75.996 467.333 76.623 467.333 77.426 cv
467.333 81.056 li
466.343 81.056 li
466.343 77.459 li
466.343 76.887 466.233 76.458 466.035 76.172 cv
465.826 75.897 465.518 75.754 465.1 75.754 cv
464.583 75.754 464.176 75.93 463.879 76.271 cv
463.582 76.612 463.439 77.074 463.439 77.657 cv
463.439 81.056 li
462.449 81.056 li
462.449 77.459 li
462.449 76.887 462.339 76.458 462.141 76.172 cv
461.932 75.897 461.613 75.754 461.195 75.754 cv
460.689 75.754 460.282 75.93 459.985 76.271 cv
459.688 76.612 459.545 77.074 459.545 77.657 cv
459.545 81.056 li
458.555 81.056 li
458.555 75.039 li
459.545 75.039 li
459.545 75.974 li
459.765 75.611 460.04 75.336 460.359 75.16 cv
460.667 74.984 461.041 74.896 461.481 74.896 cv
461.921 74.896 462.284 75.006 462.592 75.226 cv
462.9 75.446 463.12 75.776 463.274 76.194 cv
f
471.634 75.732 mo
471.106 75.732 470.688 75.941 470.38 76.359 cv
470.072 76.777 469.918 77.338 469.918 78.053 cv
469.918 78.779 470.061 79.34 470.369 79.758 cv
470.677 80.176 471.095 80.374 471.634 80.374 cv
472.162 80.374 472.58 80.176 472.888 79.758 cv
473.196 79.34 473.35 78.779 473.35 78.053 cv
473.35 77.349 473.196 76.777 472.888 76.359 cv
472.58 75.941 472.162 75.732 471.634 75.732 cv
471.634 74.896 mo
472.492 74.896 473.163 75.182 473.658 75.732 cv
474.142 76.293 474.395 77.063 474.395 78.053 cv
474.395 79.043 474.142 79.813 473.658 80.363 cv
473.163 80.924 472.492 81.199 471.634 81.199 cv
470.765 81.199 470.083 80.924 469.599 80.363 cv
469.115 79.813 468.873 79.043 468.873 78.053 cv
468.873 77.063 469.115 76.293 469.599 75.732 cv
470.083 75.182 470.765 74.896 471.634 74.896 cv
f
479.521 75.963 mo
479.411 75.897 479.29 75.853 479.158 75.82 cv
479.026 75.798 478.883 75.776 478.729 75.776 cv
478.168 75.776 477.739 75.963 477.442 76.326 cv
477.134 76.689 476.991 77.206 476.991 77.888 cv
476.991 81.056 li
476.001 81.056 li
476.001 75.039 li
476.991 75.039 li
476.991 75.974 li
477.189 75.611 477.464 75.336 477.794 75.16 cv
478.124 74.984 478.531 74.896 479.015 74.896 cv
479.246 74.907 li
479.323 74.918 479.411 74.929 479.521 74.951 cv
479.521 75.963 li
f
483.063 81.606 mo
482.777 82.31 482.502 82.783 482.238 83.003 cv
481.974 83.223 481.622 83.333 481.182 83.333 cv
480.39 83.333 li
480.39 82.508 li
480.973 82.508 li
481.237 82.508 481.446 82.442 481.6 82.31 cv
481.754 82.178 481.919 81.881 482.106 81.397 cv
482.282 80.957 li
479.851 75.039 li
480.896 75.039 li
482.777 79.747 li
484.658 75.039 li
485.703 75.039 li
483.063 81.606 li
f
486.913 72.707 mo
487.771 72.707 li
488.299 73.554 488.706 74.379 488.97 75.193 cv
489.234 76.007 489.377 76.81 489.377 77.602 cv
489.377 78.405 489.234 79.208 488.97 80.022 cv
488.706 80.836 488.299 81.65 487.771 82.497 cv
486.913 82.497 li
487.386 81.672 487.738 80.869 487.98 80.055 cv
488.211 79.252 488.332 78.438 488.332 77.602 cv
488.332 76.777 488.211 75.963 487.98 75.16 cv
487.738 74.357 487.386 73.543 486.913 72.707 cv
f
300.136 96.3466 mo
306.136 96.3466 li
306.136 90.3466 li
300.136 90.3466 li
cp
.741878 0 .317052 0 cmyk
f
300.136 96.3466 mo
306.136 96.3466 li
306.136 90.3466 li
300.136 90.3466 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
315.536 96.3466 mo
321.536 96.3466 li
321.536 90.3466 li
315.536 90.3466 li
cp
.741878 0 .317052 0 cmyk
f
315.536 96.3466 mo
321.536 96.3466 li
321.536 90.3466 li
315.536 90.3466 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
335.52 93.4346 mo
335.751 93.5226 335.982 93.6876 336.202 93.9406 cv
336.422 94.2046 336.642 94.5566 336.862 95.0076 cv
337.962 97.1966 li
336.796 97.1966 li
335.773 95.1396 li
335.509 94.6116 335.245 94.2486 335.003 94.0726 cv
334.75 93.8966 334.409 93.8086 333.98 93.8086 cv
332.803 93.8086 li
332.803 97.1966 li
331.714 97.1966 li
331.714 89.1776 li
334.167 89.1776 li
335.08 89.1776 335.762 89.3756 336.213 89.7496 cv
336.664 90.1346 336.895 90.7176 336.895 91.4876 cv
336.895 91.9936 336.774 92.4226 336.543 92.7526 cv
336.301 93.0826 335.96 93.3136 335.52 93.4346 cv
332.803 90.0686 mo
332.803 92.9176 li
334.167 92.9176 li
334.684 92.9176 335.08 92.7966 335.344 92.5546 cv
335.608 92.3126 335.751 91.9606 335.751 91.4876 cv
335.751 91.0256 335.608 90.6736 335.344 90.4316 cv
335.08 90.1896 334.684 90.0686 334.167 90.0686 cv
332.803 90.0686 li
f
344.463 93.9406 mo
344.463 94.4246 li
339.92 94.4246 li
339.964 95.1066 340.162 95.6346 340.536 95.9866 cv
340.899 96.3386 341.405 96.5146 342.065 96.5146 cv
342.439 96.5146 342.813 96.4706 343.165 96.3826 cv
343.517 96.2946 343.88 96.1516 344.232 95.9536 cv
344.232 96.8886 li
343.88 97.0426 343.517 97.1636 343.143 97.2296 cv
342.769 97.2956 342.384 97.3396 342.01 97.3396 cv
341.042 97.3396 340.283 97.0646 339.722 96.5146 cv
339.161 95.9646 338.886 95.2056 338.886 94.2486 cv
338.886 93.2696 339.15 92.4886 339.678 91.9056 cv
340.206 91.3336 340.932 91.0366 341.834 91.0366 cv
342.648 91.0366 343.286 91.3006 343.759 91.8176 cv
344.221 92.3456 344.463 93.0496 344.463 93.9406 cv
343.473 93.6546 mo
343.462 93.1156 343.308 92.6866 343.022 92.3566 cv
342.725 92.0376 342.329 91.8726 341.845 91.8726 cv
341.295 91.8726 340.855 92.0376 340.525 92.3456 cv
340.195 92.6536 339.997 93.0936 339.953 93.6546 cv
343.473 93.6546 li
f
348.819 94.1716 mo
348.016 94.1716 347.466 94.2706 347.158 94.4466 cv
346.85 94.6336 346.696 94.9416 346.696 95.3816 cv
346.696 95.7336 346.806 96.0196 347.037 96.2176 cv
347.268 96.4266 347.587 96.5256 347.983 96.5256 cv
348.533 96.5256 348.973 96.3386 349.303 95.9426 cv
349.633 95.5576 349.798 95.0406 349.798 94.3916 cv
349.798 94.1716 li
348.819 94.1716 li
350.788 93.7646 mo
350.788 97.1966 li
349.798 97.1966 li
349.798 96.2836 li
349.567 96.6576 349.281 96.9216 348.951 97.0866 cv
348.621 97.2516 348.203 97.3396 347.719 97.3396 cv
347.103 97.3396 346.608 97.1746 346.245 96.8336 cv
345.882 96.4926 345.706 96.0306 345.706 95.4476 cv
345.706 94.7766 345.926 94.2706 346.388 93.9186 cv
346.839 93.5776 347.51 93.4016 348.412 93.4016 cv
349.798 93.4016 li
349.798 93.3026 li
349.798 92.8516 349.644 92.4996 349.347 92.2466 cv
349.05 92.0046 348.632 91.8726 348.093 91.8726 cv
347.741 91.8726 347.411 91.9166 347.081 92.0046 cv
346.751 92.0926 346.443 92.2136 346.146 92.3676 cv
346.146 91.4546 li
346.498 91.3226 346.85 91.2126 347.191 91.1466 cv
347.532 91.0806 347.862 91.0366 348.192 91.0366 cv
349.061 91.0366 349.71 91.2676 350.139 91.7186 cv
350.568 92.1696 350.788 92.8516 350.788 93.7646 cv
f
352.823 88.8366 mo
353.813 88.8366 li
353.813 97.1966 li
352.823 97.1966 li
352.823 88.8366 li
f
361.755 88.8476 mo
361.271 89.6836 360.919 90.4976 360.688 91.3006 cv
360.446 92.1036 360.336 92.9176 360.336 93.7426 cv
360.336 94.5786 360.446 95.3926 360.688 96.1956 cv
360.919 97.0096 361.271 97.8126 361.755 98.6376 cv
360.897 98.6376 li
360.358 97.7906 359.951 96.9766 359.687 96.1626 cv
359.423 95.3486 359.291 94.5456 359.291 93.7426 cv
359.291 92.9506 359.423 92.1476 359.687 91.3336 cv
359.951 90.5196 360.347 89.6946 360.897 88.8476 cv
361.755 88.8476 li
f
367.508 91.3556 mo
367.508 92.2906 li
367.222 92.1586 366.936 92.0486 366.639 91.9716 cv
366.331 91.9056 366.023 91.8616 365.704 91.8616 cv
365.209 91.8616 364.835 91.9386 364.593 92.0926 cv
364.351 92.2466 364.23 92.4666 364.23 92.7636 cv
364.23 92.9946 364.318 93.1706 364.494 93.3026 cv
364.67 93.4346 365.022 93.5666 365.55 93.6766 cv
365.891 93.7536 li
366.595 93.9076 367.09 94.1276 367.387 94.3916 cv
367.673 94.6666 367.827 95.0516 367.827 95.5356 cv
367.827 96.0966 367.607 96.5366 367.167 96.8556 cv
366.727 97.1856 366.111 97.3396 365.341 97.3396 cv
365.011 97.3396 364.681 97.3066 364.329 97.2516 cv
363.977 97.1966 363.614 97.1086 363.229 96.9766 cv
363.229 95.9536 li
363.592 96.1516 363.955 96.2946 364.307 96.3826 cv
364.659 96.4816 365.011 96.5256 365.363 96.5256 cv
365.825 96.5256 366.188 96.4486 366.441 96.2946 cv
366.683 96.1406 366.815 95.9096 366.815 95.6126 cv
366.815 95.3486 366.716 95.1396 366.54 94.9966 cv
366.364 94.8536 365.968 94.7106 365.352 94.5786 cv
365.011 94.5016 li
364.395 94.3696 363.944 94.1716 363.68 93.9076 cv
363.405 93.6436 363.273 93.2806 363.273 92.8076 cv
363.273 92.2466 363.471 91.8066 363.867 91.4986 cv
364.263 91.1906 364.835 91.0366 365.583 91.0366 cv
365.946 91.0366 366.287 91.0696 366.617 91.1246 cv
366.936 91.1796 367.233 91.2566 367.508 91.3556 cv
f
374.405 93.5666 mo
374.405 97.1966 li
373.415 97.1966 li
373.415 93.5996 li
373.415 93.0276 373.294 92.6096 373.074 92.3236 cv
372.854 92.0376 372.524 91.8946 372.084 91.8946 cv
371.545 91.8946 371.127 92.0706 370.819 92.4116 cv
370.511 92.7526 370.357 93.2146 370.357 93.7976 cv
370.357 97.1966 li
369.367 97.1966 li
369.367 88.8366 li
370.357 88.8366 li
370.357 92.1146 li
370.588 91.7626 370.863 91.4876 371.193 91.3116 cv
371.512 91.1356 371.886 91.0366 372.304 91.0366 cv
372.986 91.0366 373.514 91.2566 373.866 91.6856 cv
374.218 92.1146 374.405 92.7416 374.405 93.5666 cv
f
379.113 94.1716 mo
378.31 94.1716 377.76 94.2706 377.452 94.4466 cv
377.144 94.6336 376.99 94.9416 376.99 95.3816 cv
376.99 95.7336 377.1 96.0196 377.331 96.2176 cv
377.562 96.4266 377.881 96.5256 378.277 96.5256 cv
378.827 96.5256 379.267 96.3386 379.597 95.9426 cv
379.927 95.5576 380.092 95.0406 380.092 94.3916 cv
380.092 94.1716 li
379.113 94.1716 li
381.082 93.7646 mo
381.082 97.1966 li
380.092 97.1966 li
380.092 96.2836 li
379.861 96.6576 379.575 96.9216 379.245 97.0866 cv
378.915 97.2516 378.497 97.3396 378.013 97.3396 cv
377.397 97.3396 376.902 97.1746 376.539 96.8336 cv
376.176 96.4926 376 96.0306 376 95.4476 cv
376 94.7766 376.22 94.2706 376.682 93.9186 cv
377.133 93.5776 377.804 93.4016 378.706 93.4016 cv
380.092 93.4016 li
380.092 93.3026 li
380.092 92.8516 379.938 92.4996 379.641 92.2466 cv
379.344 92.0046 378.926 91.8726 378.387 91.8726 cv
378.035 91.8726 377.705 91.9166 377.375 92.0046 cv
377.045 92.0926 376.737 92.2136 376.44 92.3676 cv
376.44 91.4546 li
376.792 91.3226 377.144 91.2126 377.485 91.1466 cv
377.826 91.0806 378.156 91.0366 378.486 91.0366 cv
379.355 91.0366 380.004 91.2676 380.433 91.7186 cv
380.862 92.1696 381.082 92.8516 381.082 93.7646 cv
f
386.604 92.1036 mo
386.494 92.0376 386.373 91.9936 386.241 91.9606 cv
386.109 91.9386 385.966 91.9166 385.812 91.9166 cv
385.251 91.9166 384.822 92.1036 384.525 92.4666 cv
384.217 92.8296 384.074 93.3466 384.074 94.0286 cv
384.074 97.1966 li
383.084 97.1966 li
383.084 91.1796 li
384.074 91.1796 li
384.074 92.1146 li
384.272 91.7516 384.547 91.4766 384.877 91.3006 cv
385.207 91.1246 385.614 91.0366 386.098 91.0366 cv
386.329 91.0476 li
386.406 91.0586 386.494 91.0696 386.604 91.0916 cv
386.604 92.1036 li
f
392.786 93.9406 mo
392.786 94.4246 li
388.243 94.4246 li
388.287 95.1066 388.485 95.6346 388.859 95.9866 cv
389.222 96.3386 389.728 96.5146 390.388 96.5146 cv
390.762 96.5146 391.136 96.4706 391.488 96.3826 cv
391.84 96.2946 392.203 96.1516 392.555 95.9536 cv
392.555 96.8886 li
392.203 97.0426 391.84 97.1636 391.466 97.2296 cv
391.092 97.2956 390.707 97.3396 390.333 97.3396 cv
389.365 97.3396 388.606 97.0646 388.045 96.5146 cv
387.484 95.9646 387.209 95.2056 387.209 94.2486 cv
387.209 93.2696 387.473 92.4886 388.001 91.9056 cv
388.529 91.3336 389.255 91.0366 390.157 91.0366 cv
390.971 91.0366 391.609 91.3006 392.082 91.8176 cv
392.544 92.3456 392.786 93.0496 392.786 93.9406 cv
391.796 93.6546 mo
391.785 93.1156 391.631 92.6866 391.345 92.3566 cv
391.048 92.0376 390.652 91.8726 390.168 91.8726 cv
389.618 91.8726 389.178 92.0376 388.848 92.3456 cv
388.518 92.6536 388.32 93.0936 388.276 93.6546 cv
391.796 93.6546 li
f
398.363 92.0926 mo
398.363 88.8366 li
399.353 88.8366 li
399.353 97.1966 li
398.363 97.1966 li
398.363 96.2946 li
398.154 96.6576 397.89 96.9216 397.571 97.0866 cv
397.252 97.2516 396.878 97.3396 396.438 97.3396 cv
395.712 97.3396 395.118 97.0536 394.656 96.4816 cv
394.194 95.9096 393.974 95.1396 393.974 94.1936 cv
393.974 93.2476 394.194 92.4886 394.656 91.9056 cv
395.118 91.3336 395.712 91.0366 396.438 91.0366 cv
396.878 91.0366 397.252 91.1246 397.571 91.3006 cv
397.89 91.4766 398.154 91.7406 398.363 92.0926 cv
394.997 94.1936 mo
394.997 94.9196 395.14 95.4916 395.437 95.9096 cv
395.734 96.3276 396.152 96.5256 396.68 96.5256 cv
397.197 96.5256 397.604 96.3276 397.912 95.9096 cv
398.209 95.4916 398.363 94.9196 398.363 94.1936 cv
398.363 93.4676 398.209 92.9066 397.912 92.4886 cv
397.604 92.0706 397.197 91.8616 396.68 91.8616 cv
396.152 91.8616 395.734 92.0706 395.437 92.4886 cv
395.14 92.9066 394.997 93.4676 394.997 94.1936 cv
f
409.572 92.3346 mo
409.814 91.8946 410.111 91.5756 410.452 91.3556 cv
410.793 91.1466 411.2 91.0366 411.673 91.0366 cv
412.289 91.0366 412.773 91.2566 413.114 91.6966 cv
413.455 92.1366 413.631 92.7636 413.631 93.5666 cv
413.631 97.1966 li
412.641 97.1966 li
412.641 93.5996 li
412.641 93.0276 412.531 92.5986 412.333 92.3126 cv
412.124 92.0376 411.816 91.8946 411.398 91.8946 cv
410.881 91.8946 410.474 92.0706 410.177 92.4116 cv
409.88 92.7526 409.737 93.2146 409.737 93.7976 cv
409.737 97.1966 li
408.747 97.1966 li
408.747 93.5996 li
408.747 93.0276 408.637 92.5986 408.439 92.3126 cv
408.23 92.0376 407.911 91.8946 407.493 91.8946 cv
406.987 91.8946 406.58 92.0706 406.283 92.4116 cv
405.986 92.7526 405.843 93.2146 405.843 93.7976 cv
405.843 97.1966 li
404.853 97.1966 li
404.853 91.1796 li
405.843 91.1796 li
405.843 92.1146 li
406.063 91.7516 406.338 91.4766 406.657 91.3006 cv
406.965 91.1246 407.339 91.0366 407.779 91.0366 cv
408.219 91.0366 408.582 91.1466 408.89 91.3666 cv
409.198 91.5866 409.418 91.9166 409.572 92.3346 cv
f
420.748 93.9406 mo
420.748 94.4246 li
416.205 94.4246 li
416.249 95.1066 416.447 95.6346 416.821 95.9866 cv
417.184 96.3386 417.69 96.5146 418.35 96.5146 cv
418.724 96.5146 419.098 96.4706 419.45 96.3826 cv
419.802 96.2946 420.165 96.1516 420.517 95.9536 cv
420.517 96.8886 li
420.165 97.0426 419.802 97.1636 419.428 97.2296 cv
419.054 97.2956 418.669 97.3396 418.295 97.3396 cv
417.327 97.3396 416.568 97.0646 416.007 96.5146 cv
415.446 95.9646 415.171 95.2056 415.171 94.2486 cv
415.171 93.2696 415.435 92.4886 415.963 91.9056 cv
416.491 91.3336 417.217 91.0366 418.119 91.0366 cv
418.933 91.0366 419.571 91.3006 420.044 91.8176 cv
420.506 92.3456 420.748 93.0496 420.748 93.9406 cv
419.758 93.6546 mo
419.747 93.1156 419.593 92.6866 419.307 92.3566 cv
419.01 92.0376 418.614 91.8726 418.13 91.8726 cv
417.58 91.8726 417.14 92.0376 416.81 92.3456 cv
416.48 92.6536 416.282 93.0936 416.238 93.6546 cv
419.758 93.6546 li
f
427.051 92.3346 mo
427.293 91.8946 427.59 91.5756 427.931 91.3556 cv
428.272 91.1466 428.679 91.0366 429.152 91.0366 cv
429.768 91.0366 430.252 91.2566 430.593 91.6966 cv
430.934 92.1366 431.11 92.7636 431.11 93.5666 cv
431.11 97.1966 li
430.12 97.1966 li
430.12 93.5996 li
430.12 93.0276 430.01 92.5986 429.812 92.3126 cv
429.603 92.0376 429.295 91.8946 428.877 91.8946 cv
428.36 91.8946 427.953 92.0706 427.656 92.4116 cv
427.359 92.7526 427.216 93.2146 427.216 93.7976 cv
427.216 97.1966 li
426.226 97.1966 li
426.226 93.5996 li
426.226 93.0276 426.116 92.5986 425.918 92.3126 cv
425.709 92.0376 425.39 91.8946 424.972 91.8946 cv
424.466 91.8946 424.059 92.0706 423.762 92.4116 cv
423.465 92.7526 423.322 93.2146 423.322 93.7976 cv
423.322 97.1966 li
422.332 97.1966 li
422.332 91.1796 li
423.322 91.1796 li
423.322 92.1146 li
423.542 91.7516 423.817 91.4766 424.136 91.3006 cv
424.444 91.1246 424.818 91.0366 425.258 91.0366 cv
425.698 91.0366 426.061 91.1466 426.369 91.3666 cv
426.677 91.5866 426.897 91.9166 427.051 92.3346 cv
f
435.411 91.8726 mo
434.883 91.8726 434.465 92.0816 434.157 92.4996 cv
433.849 92.9176 433.695 93.4786 433.695 94.1936 cv
433.695 94.9196 433.838 95.4806 434.146 95.8986 cv
434.454 96.3166 434.872 96.5146 435.411 96.5146 cv
435.939 96.5146 436.357 96.3166 436.665 95.8986 cv
436.973 95.4806 437.127 94.9196 437.127 94.1936 cv
437.127 93.4896 436.973 92.9176 436.665 92.4996 cv
436.357 92.0816 435.939 91.8726 435.411 91.8726 cv
435.411 91.0366 mo
436.269 91.0366 436.94 91.3226 437.435 91.8726 cv
437.919 92.4336 438.172 93.2036 438.172 94.1936 cv
438.172 95.1836 437.919 95.9536 437.435 96.5036 cv
436.94 97.0646 436.269 97.3396 435.411 97.3396 cv
434.542 97.3396 433.86 97.0646 433.376 96.5036 cv
432.892 95.9536 432.65 95.1836 432.65 94.1936 cv
432.65 93.2036 432.892 92.4336 433.376 91.8726 cv
433.86 91.3226 434.542 91.0366 435.411 91.0366 cv
f
443.298 92.1036 mo
443.188 92.0376 443.067 91.9936 442.935 91.9606 cv
442.803 91.9386 442.66 91.9166 442.506 91.9166 cv
441.945 91.9166 441.516 92.1036 441.219 92.4666 cv
440.911 92.8296 440.768 93.3466 440.768 94.0286 cv
440.768 97.1966 li
439.778 97.1966 li
439.778 91.1796 li
440.768 91.1796 li
440.768 92.1146 li
440.966 91.7516 441.241 91.4766 441.571 91.3006 cv
441.901 91.1246 442.308 91.0366 442.792 91.0366 cv
443.023 91.0476 li
443.1 91.0586 443.188 91.0696 443.298 91.0916 cv
443.298 92.1036 li
f
446.84 97.7466 mo
446.554 98.4506 446.279 98.9236 446.015 99.1436 cv
445.751 99.3636 445.399 99.4736 444.959 99.4736 cv
444.167 99.4736 li
444.167 98.6486 li
444.75 98.6486 li
445.014 98.6486 445.223 98.5826 445.377 98.4506 cv
445.531 98.3186 445.696 98.0216 445.883 97.5376 cv
446.059 97.0976 li
443.628 91.1796 li
444.673 91.1796 li
446.554 95.8876 li
448.435 91.1796 li
449.48 91.1796 li
446.84 97.7466 li
f
450.69 88.8476 mo
451.548 88.8476 li
452.076 89.6946 452.483 90.5196 452.747 91.3336 cv
453.011 92.1476 453.154 92.9506 453.154 93.7426 cv
453.154 94.5456 453.011 95.3486 452.747 96.1626 cv
452.483 96.9766 452.076 97.7906 451.548 98.6376 cv
450.69 98.6376 li
451.163 97.8126 451.515 97.0096 451.757 96.1956 cv
451.988 95.3926 452.109 94.5786 452.109 93.7426 cv
452.109 92.9176 451.988 92.1036 451.757 91.3006 cv
451.515 90.4976 451.163 89.6836 450.69 88.8476 cv
f
254.174 10.181 mo
252.566 14.537 li
255.782 14.537 li
254.174 10.181 li
253.502 9.01701 mo
254.846 9.01701 li
258.182 17.765 li
256.946 17.765 li
256.154 15.521 li
252.206 15.521 li
251.414 17.765 li
250.166 17.765 li
253.502 9.01701 li
f
259.406 8.64501 mo
260.486 8.64501 li
260.486 17.765 li
259.406 17.765 li
259.406 8.64501 li
f
262.742 8.64501 mo
263.822 8.64501 li
263.822 17.765 li
262.742 17.765 li
262.742 8.64501 li
f
274.082 11.393 mo
274.082 12.413 li
273.77 12.269 273.458 12.149 273.134 12.065 cv
272.798 11.993 272.462 11.945 272.114 11.945 cv
271.574 11.945 271.166 12.029 270.902 12.197 cv
270.638 12.365 270.506 12.605 270.506 12.929 cv
270.506 13.181 270.602 13.373 270.794 13.517 cv
270.986 13.661 271.37 13.805 271.946 13.925 cv
272.318 14.009 li
273.086 14.177 273.626 14.417 273.95 14.705 cv
274.262 15.005 274.43 15.425 274.43 15.953 cv
274.43 16.565 274.19 17.045 273.71 17.393 cv
273.23 17.753 272.558 17.921 271.718 17.921 cv
271.358 17.921 270.998 17.885 270.614 17.825 cv
270.23 17.765 269.834 17.669 269.414 17.525 cv
269.414 16.409 li
269.81 16.625 270.206 16.781 270.59 16.877 cv
270.974 16.985 271.358 17.033 271.742 17.033 cv
272.246 17.033 272.642 16.949 272.918 16.781 cv
273.182 16.613 273.326 16.361 273.326 16.037 cv
273.326 15.749 273.218 15.521 273.026 15.365 cv
272.834 15.209 272.402 15.053 271.73 14.909 cv
271.358 14.825 li
270.686 14.681 270.194 14.465 269.906 14.177 cv
269.606 13.889 269.462 13.493 269.462 12.977 cv
269.462 12.365 269.678 11.885 270.11 11.549 cv
270.542 11.213 271.166 11.045 271.982 11.045 cv
272.378 11.045 272.75 11.081 273.11 11.141 cv
273.458 11.201 273.782 11.285 274.082 11.393 cv
f
277.19 16.781 mo
277.19 20.249 li
276.11 20.249 li
276.11 11.201 li
277.19 11.201 li
277.19 12.197 li
277.406 11.813 277.694 11.525 278.042 11.333 cv
278.39 11.141 278.81 11.045 279.29 11.045 cv
280.082 11.045 280.73 11.369 281.234 11.993 cv
281.726 12.629 281.978 13.457 281.978 14.489 cv
281.978 15.521 281.726 16.361 281.234 16.985 cv
280.73 17.609 280.082 17.921 279.29 17.921 cv
278.81 17.921 278.39 17.825 278.042 17.645 cv
277.694 17.465 277.406 17.177 277.19 16.781 cv
280.862 14.489 mo
280.862 13.697 280.694 13.085 280.37 12.629 cv
280.034 12.173 279.59 11.945 279.026 11.945 cv
278.45 11.945 278.006 12.173 277.682 12.629 cv
277.346 13.085 277.19 13.697 277.19 14.489 cv
277.19 15.281 277.346 15.905 277.682 16.361 cv
278.006 16.817 278.45 17.033 279.026 17.033 cv
279.59 17.033 280.034 16.817 280.37 16.361 cv
280.694 15.905 280.862 15.281 280.862 14.489 cv
f
289.382 14.213 mo
289.382 14.741 li
284.426 14.741 li
284.474 15.485 284.69 16.061 285.098 16.445 cv
285.494 16.829 286.046 17.021 286.766 17.021 cv
287.174 17.021 287.582 16.973 287.966 16.877 cv
288.35 16.781 288.746 16.625 289.13 16.409 cv
289.13 17.429 li
288.746 17.597 288.35 17.729 287.942 17.801 cv
287.534 17.873 287.114 17.921 286.706 17.921 cv
285.65 17.921 284.822 17.621 284.21 17.021 cv
283.598 16.421 283.298 15.593 283.298 14.549 cv
283.298 13.481 283.586 12.629 284.162 11.993 cv
284.738 11.369 285.53 11.045 286.514 11.045 cv
287.402 11.045 288.098 11.333 288.614 11.897 cv
289.118 12.473 289.382 13.241 289.382 14.213 cv
288.302 13.901 mo
288.29 13.313 288.122 12.845 287.81 12.485 cv
287.486 12.137 287.054 11.957 286.526 11.957 cv
285.926 11.957 285.446 12.137 285.086 12.473 cv
284.726 12.809 284.51 13.289 284.462 13.901 cv
288.302 13.901 li
f
296.762 14.213 mo
296.762 14.741 li
291.806 14.741 li
291.854 15.485 292.07 16.061 292.478 16.445 cv
292.874 16.829 293.426 17.021 294.146 17.021 cv
294.554 17.021 294.962 16.973 295.346 16.877 cv
295.73 16.781 296.126 16.625 296.51 16.409 cv
296.51 17.429 li
296.126 17.597 295.73 17.729 295.322 17.801 cv
294.914 17.873 294.494 17.921 294.086 17.921 cv
293.03 17.921 292.202 17.621 291.59 17.021 cv
290.978 16.421 290.678 15.593 290.678 14.549 cv
290.678 13.481 290.966 12.629 291.542 11.993 cv
292.118 11.369 292.91 11.045 293.894 11.045 cv
294.782 11.045 295.478 11.333 295.994 11.897 cv
296.498 12.473 296.762 13.241 296.762 14.213 cv
295.682 13.901 mo
295.67 13.313 295.502 12.845 295.19 12.485 cv
294.866 12.137 294.434 11.957 293.906 11.957 cv
293.306 11.957 292.826 12.137 292.466 12.473 cv
292.106 12.809 291.89 13.289 291.842 13.901 cv
295.682 13.901 li
f
302.846 12.197 mo
302.846 8.64501 li
303.926 8.64501 li
303.926 17.765 li
302.846 17.765 li
302.846 16.781 li
302.618 17.177 302.33 17.465 301.982 17.645 cv
301.634 17.825 301.226 17.921 300.746 17.921 cv
299.954 17.921 299.306 17.609 298.802 16.985 cv
298.298 16.361 298.058 15.521 298.058 14.489 cv
298.058 13.457 298.298 12.629 298.802 11.993 cv
299.306 11.369 299.954 11.045 300.746 11.045 cv
301.226 11.045 301.634 11.141 301.982 11.333 cv
302.33 11.525 302.618 11.813 302.846 12.197 cv
299.174 14.489 mo
299.174 15.281 299.33 15.905 299.654 16.361 cv
299.978 16.817 300.434 17.033 301.01 17.033 cv
301.574 17.033 302.018 16.817 302.354 16.361 cv
302.678 15.905 302.846 15.281 302.846 14.489 cv
302.846 13.697 302.678 13.085 302.354 12.629 cv
302.018 12.173 301.574 11.945 301.01 11.945 cv
300.434 11.945 299.978 12.173 299.654 12.629 cv
299.33 13.085 299.174 13.697 299.174 14.489 cv
f
306.038 15.173 mo
306.038 11.201 li
307.118 11.201 li
307.118 15.137 li
307.118 15.761 307.238 16.217 307.478 16.529 cv
307.718 16.841 308.078 16.997 308.57 16.997 cv
309.146 16.997 309.614 16.817 309.95 16.445 cv
310.286 16.073 310.454 15.569 310.454 14.921 cv
310.454 11.201 li
311.534 11.201 li
311.534 17.765 li
310.454 17.765 li
310.454 16.757 li
310.19 17.165 309.878 17.453 309.542 17.645 cv
309.194 17.825 308.798 17.921 308.342 17.921 cv
307.586 17.921 307.01 17.693 306.626 17.225 cv
306.23 16.769 306.038 16.085 306.038 15.173 cv
f
314.798 16.781 mo
314.798 20.249 li
313.718 20.249 li
313.718 11.201 li
314.798 11.201 li
314.798 12.197 li
315.014 11.813 315.302 11.525 315.65 11.333 cv
315.998 11.141 316.418 11.045 316.898 11.045 cv
317.69 11.045 318.338 11.369 318.842 11.993 cv
319.334 12.629 319.586 13.457 319.586 14.489 cv
319.586 15.521 319.334 16.361 318.842 16.985 cv
318.338 17.609 317.69 17.921 316.898 17.921 cv
316.418 17.921 315.998 17.825 315.65 17.645 cv
315.302 17.465 315.014 17.177 314.798 16.781 cv
318.47 14.489 mo
318.47 13.697 318.302 13.085 317.978 12.629 cv
317.642 12.173 317.198 11.945 316.634 11.945 cv
316.058 11.945 315.614 12.173 315.29 12.629 cv
314.954 13.085 314.798 13.697 314.798 14.489 cv
314.798 15.281 314.954 15.905 315.29 16.361 cv
315.614 16.817 316.058 17.033 316.634 17.033 cv
317.198 17.033 317.642 16.817 317.978 16.361 cv
318.302 15.905 318.47 15.281 318.47 14.489 cv
f
325.562 11.393 mo
325.562 12.413 li
325.25 12.269 324.938 12.149 324.614 12.065 cv
324.278 11.993 323.942 11.945 323.594 11.945 cv
323.054 11.945 322.646 12.029 322.382 12.197 cv
322.118 12.365 321.986 12.605 321.986 12.929 cv
321.986 13.181 322.082 13.373 322.274 13.517 cv
322.466 13.661 322.85 13.805 323.426 13.925 cv
323.798 14.009 li
324.566 14.177 325.106 14.417 325.43 14.705 cv
325.742 15.005 325.91 15.425 325.91 15.953 cv
325.91 16.565 325.67 17.045 325.19 17.393 cv
324.71 17.753 324.038 17.921 323.198 17.921 cv
322.838 17.921 322.478 17.885 322.094 17.825 cv
321.71 17.765 321.314 17.669 320.894 17.525 cv
320.894 16.409 li
321.29 16.625 321.686 16.781 322.07 16.877 cv
322.454 16.985 322.838 17.033 323.222 17.033 cv
323.726 17.033 324.122 16.949 324.398 16.781 cv
324.662 16.613 324.806 16.361 324.806 16.037 cv
324.806 15.749 324.698 15.521 324.506 15.365 cv
324.314 15.209 323.882 15.053 323.21 14.909 cv
322.838 14.825 li
322.166 14.681 321.674 14.465 321.386 14.177 cv
321.086 13.889 320.942 13.493 320.942 12.977 cv
320.942 12.365 321.158 11.885 321.59 11.549 cv
322.022 11.213 322.646 11.045 323.462 11.045 cv
323.858 11.045 324.23 11.081 324.59 11.141 cv
324.938 11.201 325.262 11.285 325.562 11.393 cv
f
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 /1 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
